{"version":3,"sources":["assets/img/themesberg.svg","assets/img/illustrations/signin.svg","assets/files/Bulk_upload_sheet.csv","assets/img/team/profile-picture-1.jpg","assets/img/technologies/bootstrap-5-logo.svg","assets/img/technologies/react-logo.svg","assets/img/team/profile-picture-2.jpg","assets/img/team/profile-picture-4.jpg","assets/img/flags/united-states-of-america.svg","assets/img/flags/canada.svg","assets/img/flags/germany.svg","assets/img/flags/france.svg","assets/img/flags/japan.svg","assets/img/technologies/loader.png","assets/img/technologies/react-hero-logo.svg","assets/img/technologies/react-logo-transparent.svg","assets/img/themesberg-logo.svg","assets/img/mockup-presentation.png","assets/img/mockup-map-presentation.png","assets/img/mockup-calendar-presentation.png","assets/img/react-mockup.png","assets/img/illustrations/bs5-illustrations.svg","assets/img/pages/overview.jpg","assets/img/pages/transactions.jpg","assets/img/pages/settings.jpg","assets/img/pages/sign-in.jpg","assets/img/pages/sign-up.jpg","assets/img/pages/lock.jpg","assets/img/pages/forgot-password.jpg","assets/img/pages/reset-password.jpg","assets/img/pages/404.jpg","assets/img/pages/500.jpg","assets/img/profile-cover.jpg","assets/img/flags/italy.svg","assets/img/team/profile-picture-5.jpg","assets/img/technologies/laravel-logo.svg","assets/img/illustrations/404.svg","assets/img/illustrations/500.svg","assets/img/technologies/react-logo-primary.svg","assets/img/flags/united-kingdom.svg","../node_modules/regenerate-unicode-properties sync /^/.*/.js$","assets/img/team/profile-picture-3.jpg","assets/img/technologies/logo.png","routes.js","components/Code.js","components/CodeEditor.js","data/pages.js","data/features.js","pages/Upgrade.js","components/Charts.js","data/teamMembers.js","components/Widgets.js","data/tables.js","data/transactions.js","data/commands.js","components/Tables.js","data/charts.js","pages/dashboard/DashboardOverview.js","pages/Transactions.js","components/Forms.js","pages/Settings.js","pages/tables/BootstrapTables.js","pages/examples/Signin.js","components/Preloader.js","actions/userActions.jsx","constants/usersConstants.jsx","pages/LoginPage.jsx","adminComponents/DashboardOverview.jsx","actions/projectActions.jsx","constants/projectsConstants.jsx","adminComponents/AddConsultant.jsx","adminComponents/AddMember.jsx","adminComponents/AddTeamLead.jsx","actions/leadActions.jsx","constants/leadsConstants.jsx","adminComponents/AddLead.jsx","adminComponents/AddASM.jsx","adminComponents/AddCP.jsx","adminComponents/AddCPM.jsx","adminComponents/AddLeadAssigner.jsx","actions/cancellationLeadActions.jsx","constants/cancellationLeadsConstants.jsx","adminComponents/ModifyLead.jsx","data/notifications.js","components/Navbar.js","pages/AdminDashboard.jsx","adminComponents/ReactTable.jsx","adminComponents/Consultant.jsx","adminComponents/Manager.jsx","adminComponents/TeamLead.jsx","adminComponents/TotalLeads.jsx","adminComponents/CancellationLeads.jsx","adminComponents/LostSales.jsx","adminComponents/SiteVisits.jsx","adminComponents/SetMilestone.jsx","adminComponents/Promotion.jsx","adminComponents/AddProject.jsx","actions/activityLogActions.jsx","constants/activityLogConstants.jsx","actions/taskManagerActions.jsx","constants/taskManagerContants.jsx","adminComponents/TaskManager.jsx","adminComponents/ProjectTable.jsx","adminComponents/AllProjects.jsx","actions/teamManagementActions.jsx","constants/teamManagementConstants.jsx","adminComponents/ProjectDetails.jsx","adminComponents/Leads.jsx","adminComponents/LostLeads.jsx","adminComponents/SiteVisitsLeads.jsx","adminComponents/NextFollowUp.jsx","actions/bulkLeadActions.jsx","constants/bulkLeadConstants.jsx","adminComponents/UploadLeads.jsx","adminComponents/Calendar.jsx","components/BulkLeads.jsx","adminComponents/UserTable.jsx","adminComponents/UserList.jsx","adminComponents/ActivityLog.jsx","adminComponents/EditUser.jsx","adminComponents/Dashboard.jsx","adminComponents/CancelledLeadEdit.jsx","managerComponents/NextFollowUp.jsx","managerComponents/ManagerDashboard.jsx","managerComponents/Leads.jsx","managerComponents/AddLead.jsx","managerComponents/LostLeads.jsx","managerComponents/SiteVisitsLeads.jsx","managerComponents/CancellationLeads.jsx","managerComponents/AddMember.jsx","managerComponents/ReactTable2.jsx","managerComponents/Consultant.jsx","managerComponents/TeamLead.jsx","managerComponents/ActivityLog.jsx","managerComponents/SetMilestone.jsx","managerComponents/TaskManager.jsx","managerComponents/EditUser.jsx","managerComponents/UploadLeads.jsx","managerComponents/ModifyLead.jsx","managerComponents/TeamMember.jsx","cpManagerComponents/NextFollowUp.jsx","cpManagerComponents/CPManagerDashboard.jsx","cpManagerComponents/Leads.jsx","cpManagerComponents/AddLead.jsx","cpManagerComponents/LostLeads.jsx","cpManagerComponents/SiteVisitsLeads.jsx","cpManagerComponents/CancellationLeads.jsx","cpManagerComponents/ActivityLog.jsx","cpManagerComponents/TaskManager.jsx","cpManagerComponents/UploadLeads.jsx","cpManagerComponents/ModifyLead.jsx","teamleadComponents/NextFollowUp.jsx","teamleadComponents/TeamleadDashboard.jsx","teamleadComponents/Leads.jsx","teamleadComponents/AddLead.jsx","teamleadComponents/LostLeads.jsx","teamleadComponents/SiteVisitsLeads.jsx","teamleadComponents/ActivityLog.jsx","teamleadComponents/SetMilestone.jsx","teamleadComponents/TaskManager.jsx","consultantComponents/NextFollowUp.jsx","consultantComponents/ConsultantDashboard.jsx","consultantComponents/Leads.jsx","consultantComponents/AddLead.jsx","consultantComponents/LostLeads.jsx","consultantComponents/SiteVisitsLeads.jsx","consultantComponents/ActivityLog.jsx","consultantComponents/TaskManager.jsx","consultantComponents/ModifyLead.jsx","leadAssignerComponents/AddLead.jsx","leadAssignerComponents/UploadLeads.jsx","leadAssignerComponents/ActivityLog.jsx","leadAssignerComponents/TaskManager.jsx","pages/examples/Signup.js","pages/examples/ForgotPassword.js","pages/examples/ResetPassword.js","pages/examples/Lock.js","pages/examples/NotFound.js","pages/examples/ServerError.js","pages/documentation/DocsOverview.js","pages/documentation/DocsDownload.js","pages/documentation/DocsQuickStart.js","pages/documentation/DocsLicense.js","pages/documentation/DocsFolderStructure.js","pages/documentation/DocsBuild.js","pages/documentation/DocsChangelog.js","adminComponents/Sidebar.js","managerComponents/Sidebar.js","teamleadComponents/TeamLeadSidebar.js","consultantComponents/ConsultantSidebar.js","cpManagerComponents/Sidebar.js","leadAssignerComponents/Sidebar.js","components/AccordionComponent.js","components/Documentation.js","pages/components/Accordion.js","pages/components/Alerts.js","pages/components/Badges.js","pages/components/Breadcrumbs.js","pages/components/Buttons.js","pages/components/Forms.js","pages/components/Modals.js","pages/components/Navs.js","pages/components/Navbars.js","pages/components/Pagination.js","pages/components/Popovers.js","components/Progress.js","pages/components/Progress.js","pages/components/Tables.js","pages/components/Tabs.js","pages/components/Tooltips.js","pages/components/Toasts.js","pages/HomePage.js","components/ScrollToTop.js","store.jsx","reducers/usersReducer.jsx","reducers/projectsReducer.jsx","reducers/leadsReducer.jsx","reducers/cancellationLeadsReducer.jsx","reducers/bulkLeadReducer.jsx","reducers/activityLogReducer.jsx","reducers/taskManagerReducer.jsx","reducers/teamManagementReducer.jsx","reducers/cpManagerLeadsReducer.jsx","constants/cpManagerConstants.jsx","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Routes","LoginPage","path","AddConsultant","AddMember","AddTeamLead","AddLead","AddASM","AddCP","AddCPM","AddLeadAssigner","ModifyLead","AdminDashboard","Dashboard","Consultant","Manager","TeamLead","TotalLeads","CancellationLeads","LostSales","SiteVisits","SetMilestone","Promotion","AddProject","TaskManager","AllProjects","ProjectDetails","Demotwo","Leads","LostLeads","SiteVisitsLeads","NextFollowUp","UploadLeads","BulkLeads","Calendar","UserList","ActivityLog","EditUser","CancelledLeadEdit","DashboardOverview","ManagerDashboard","ManagerLeads","ManagerAddLead","ManagerLostLeads","ManagerSiteVisitsLeads","ManagerCancellationLeads","ManagerNextFollowUp","ManagerAddMember","ManagerTeamLead","ManagerConsultant","ManagerActivityLog","ManagerSetMilestone","ManagerTaskManager","ManagerEditUser","ManagerBulkLeads","ManagerModifyLead","ManagerTeamMember","CPManagerDashboard","CPManagerLeads","CPManagerAddLead","CPManagerLostLeads","CPManagerSiteVisitsLeads","CPManagerCancellationLeads","CPManagerNextFollowUp","CPManagerActivityLog","CPManagerTaskManager","CPManagerBulkLeads","CPManagerModifyLead","TeamLeadDashboard","TeamLeadLeads","TeamLeadAddLead","TeamLeadLostLeads","TeamLeadSiteVisitsLeads","TeamLeadActivityLog","TeamLeadSetMilestone","TeamLeadTaskManager","TeamLeadModifyLead","ConsultantDashboard","ConsultantLeads","ConsultantAddLead","ConsultantLostLeads","ConsultantSiteVisitsLeads","ConsultantActivityLog","ConsultantNextFollowUp","ConsultantTaskManager","ConsultantModifyLead","LeadAssginerDashboard","leadAssignerLeads","LeadAssginerAddLead","leadAssignerBulkLeads","leadAssignerActivityLog","leadAssignerTaskManager","Transactions","Settings","Upgrade","BootstrapTables","Billing","Invoice","Signin","Signup","ForgotPassword","ResetPassword","Lock","NotFound","ServerError","DocsOverview","DocsDownload","DocsQuickStart","DocsLicense","DocsFolderStructure","DocsBuild","DocsChangelog","Accordions","Alerts","Badges","Widgets","Breadcrumbs","Buttons","Forms","Modals","Navs","Navbars","Pagination","Popovers","Progress","Tables","Tabs","Tooltips","Toasts","WidgetsComponent","props","language","useState","copied","setCopied","handleCopy","setTimeout","CodeStyling","className","style","tokens","getLineProps","getTokenProps","Card","Body","line","i","key","token","OverlayTrigger","trigger","placement","overlay","Tooltip","text","onCopy","Button","size","variant","Prism","theme","themeStyle","scope","imports","maxHeight","setCode","noInline","includes","Row","Col","xs","Code","icon","faQuestionCircle","onChange","newCode","OverviewImg","TransactionsImg","SettingsImg","SignInImg","SignUpImg","LockImg","ForgotPasswordImg","ResetPasswordImg","NotFoundImg","ServerErrorImg","faReact","faBootstrap","faSass","faMobileAlt","faGulp","faImages","faFileAlt","faAccessibleIcon","faHtml5","faCalendarAlt","faMapMarkedAlt","faPenFancy","xl","faRocket","Table","faCheckCircle","faTimesCircle","href","target","faDownload","faExternalLinkAlt","SalesValueChart","data","labels","series","leadStats","plugins","ChartistTooltip","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","type","SalesValueChartphone","CircleChart","donutWidth","sum","a","b","high","donut","donutSolid","Math","round","reduce","BarChart","chartClassName","offset","Profile1","faCalendarCheck","Profile2","faComment","Profile3","Profile4","ProfileCardWidget","border","backgroundImage","ProfileCover","Img","src","alt","Title","Subtitle","Text","faUserPlus","ChoosePhotoWidget","title","photo","Image","fluid","rounded","faPaperclip","CounterWidget","iconColor","category","period","percentage","faAngleDown","faAngleUp","CircleChartWidget","d","color","label","BarChartWidget","percentageIcon","percentageColor","TeamMembersWidget","TeamMember","name","statusKey","image","btnText","status","online","inMeeting","offline","statusColor","statusLabel","ListGroup","Item","Header","teamMembers","tm","ProgressTrackWidget","last","extraClassName","ProgressBar","now","min","max","faAngular","faVuejs","RankingWidget","faGlobeEurope","Link","faChartLine","faFlagUsa","faFolderOpen","SalesValueWidget","SalesValueWidgetPhone","AcquisitionWidget","faChartBar","faChartArea","pageVisits","views","returnValue","bounceRate","pageName","pageTraffic","source","sourceType","trafficShare","change","sourceIcon","sourceIconColor","faGoogle","rank","faYoutube","faYahoo","faTwitter","pageRanking","country","countryImage","USAFlag","overallRank","overallRankChange","travelRank","widgetsRank","widgetsRankChange","CanadaFlag","FranceFlag","JapanFlag","travelRankChange","GermanyFlag","ItalyFlag","moment","subtract","format","add","ValueChange","suffix","valueIcon","valueTxtColor","abs","PageVisitsTable","TableRow","bounceIcon","faArrowDown","faArrowUp","bounceTxtColor","responsive","pv","PageTrafficTable","pt","RankingTable","r","TransactionsTable","totalTransactions","transactions","length","invoiceNumber","subscription","price","issueDate","dueDate","statusVariant","as","to","parseFloat","toFixed","Dropdown","ButtonGroup","Toggle","split","faEllipsisH","Menu","faEye","faEdit","faTrashAlt","hover","t","Footer","Nav","Prev","active","Next","CommandsTable","usage","description","link","width","u","whiteSpace","wordWrap","commands","c","trafficShares","faDesktop","faTabletAlt","totalOrders","faPlus","faTasks","faCloudUploadAlt","faUserShield","Divider","sm","faCashRegister","lg","Breadcrumb","listProps","faHome","md","InputGroup","faSearch","Form","Control","placeholder","faCog","faCheck","GeneralInfoForm","birthday","setBirthday","Group","Label","required","timeFormat","renderInput","openCalendar","onFocus","Select","defaultValue","faCommentDots","faBoxOpen","faClipboard","faChevronDown","faStore","faCartArrowDown","faChartPie","Container","faAngleLeft","BgImage","faEnvelope","autoFocus","faUnlockAlt","Check","FormCheck","Input","htmlFor","faFacebookF","faGithub","show","ReactLogo","height","logout","dispatch","localStorage","removeItem","updateUser","user","addToast","getState","userInfo","userLogin","config","headers","Authorization","axios","put","_id","appearance","autoDismiss","message","response","payload","addUser","userData","post","managerList","get","cpmList","teamLeadList","consultantList","deleteUser","delete","console","log","fetchUserList","fetchUserDetail","consultantsUnderManager","history","email","setEmail","password","setPassword","useDispatch","useSelector","state","loading","error","useEffect","isAdmin","role","push","Preloader","onSubmit","preventDefault","setItem","JSON","stringify","login","projects","addProject","project","updateProject","getProjectDetails","setUserData","setName","empCode","setEmpCode","mobile","setMobile","mainProject","setMainProject","projectId","setProjectId","addConsultant","Projects","fetchProjects","projectInfo","manager","teamLead","asm","cpm","setMilestone","bookings","leads","siteVisits","window","location","reload","projectHandler","pro","setRole","useToasts","fetchManagers","managers","teamLeadsUnderManager","teamleadList","Alert","addLeadData","leadData","updateLeadData","lead","fetchleadDetails","fetchLeadList","deleteLead","fetchConsultantLeadList","fetchTeamLeadLeadList","setLead","createdUser","assignedUser","setAssignedUser","consultant","setConsultant","enquiryDate","setEnquiryDate","customer","setCustomer","contactNumber","setContactNumber","alternateNumber","setAlternateNumber","subProject","setSubProject","leadScore","setLeadScore","leadType","setLeadType","setStatus","remarks","setRemarks","nextFollow","setNextFollow","managerRemarks","setManagerRemarks","booked","firstInstallment","setFirstIntallment","secondInstallment","setSecondIntallment","thirdInstallment","setThirdIntallment","totalSqft","setTotalSqft","index","setIndex","addLead","leadInfo","fetchConsultants","consultantsList","consultants","findIndex","element","assignedConsultant","consultantName","customerName","nextFollowUp","payment","submitHandler","filter","consultantId","consultantHandler","disabled","parseInt","addCancelLeadData","cancelLeadData","deleteCancelledLead","match","leadId","params","gapi","DISCOVERY_DOCS","setCreatedUser","setFirstInstallment","setSecondInstallment","setThirdInstallment","remainder","setRemainder","leadDetails","updateLead","successUpdate","success","loadingProject","findSubProject","main","cancellation","onClick","load","client","init","apiKey","clientId","discoveryDocs","auth2","getAuthInstance","signIn","then","event","Date","toISOString","replace","calendar","events","insert","execute","open","htmlLink","confirm","cancelLeadHandler","deleteHandler","Profile5","NOTIFICATIONS_DATA","notifications","acc","notif","read","setUser","createHashHistory","Navbar","expanded","ReactHero","substring","faSignInAlt","faSignOutAlt","users","ReactTable","deleteUserProfile","columns","dataField","formatter","row","sort","cell","bootstrap4","keyField","filterFactory","pagination","paginationFactory","sizePerPage","striped","undefined","fetchTeamLeads","teamlead","leadListd","setLeadList","setLeadData","setTrigger","filterLeadType","setFilterLeadType","startDate","setStartDate","endDate","setEndDate","leadList","leadInfoLead","concat","reverse","updateLeadTypeHandler","updateStatusHandler","handleEdit","CancelledLeads","setLoading","res","ExportCSVButton","CSVExport","textFilter","dateFilter","comparator","Comparator","GT","exportCSV","csvProps","baseProps","table-dark","updateHandler","bookingNumber","setBookingNumber","userDetails","setUserDetails","bookingHandler","userList","projectd","setProject","addMainProject","setAddMainProject","setMain","addSubProject","setAddSubProject","index2","setIndex2","activityLogData","addTask","task","fetchIndividualTasks","deleteTask","updateTask","showDefault","setShowDefault","showEditDefault","setShowEditDefault","setTask","setDueDate","assignTo","setAssignTo","note","setNote","editedTask","setEditedTask","previousTask","setPreviousTask","editedDueDate","setEditedDueDate","editedAssignTo","setEditedAssignTo","editedNote","setEditedNote","editedStatus","setEditedStatus","handleClose","handleEditClose","fetchUserTasks","taskList","addTaskData","addedTask","deleteSuccess","Modal","Dialog","centered","onHide","aria-label","member","addtaskHandler","rows","xmlns","viewBox","fill","aria-hidden","fillRule","clipRule","toLocaleDateString","toLocaleTimeString","taskStatusHandler","cursor","editTaskHandler","deleteTaskHandler","aria-expanded","saveEditedTaskHandler","ProjectTable","projectList","SearchBar","Search","deleteProject","search","searchProps","ProjectList","addedProject","addMainProjectHandler","addTeam","team","fetchTeamList","teamDetails","deleteTeam","updateTeam","showSubProjectDefault","setShowSubProjectDefault","showEditSubProjectDefault","setShowEditSubProjectDefault","showEditTeamDefault","setShowEditTeamDefault","showCpmDefault","setShowCpmDefault","editedSubProject","setEditedSubProject","previousSubProject","setPreviousSubProject","newSubProject","setNewSubProject","selectedManager","setSelectedManager","selectedCPM","setSelectedCPM","selectedTeamLead","setSelectedTeamLead","selectedConsultants","setSelectedConsultants","editManager","setEditManager","editTeamLead","setEditTeamLead","editConsultants","setEditConsultants","consultantArray","setConsultantArray","cons","teamId","setTeamId","cPMWithProject","setCPMWithProject","handleSubProjectClose","handleEditSubProjectClose","handleEditTeamClose","handleCpmClose","projectDetails","projectTeam","projectTeamDetails","addedTeam","teamList","getTeamList","updateSuccess","updateTeamData","cpmListData","isAvailable","editTeamFormHandler","managerId","userId","Tab","defaultActiveKey","eventKey","Content","background","Pane","editSubProjectHandler","saveEditSubProjectHandler","deleteSubProjectHandler","teamData","deleteTeamHandler","managerCheck","teamsData","teamCheck","teamLeads","teamLeadId","consArray","alert","addTeamHandler","isMulti","j","editTeamHandler","addCpmHandler","cp","deleteCpmHandler","setError","catch","csvExport","today","addBulkLeadData","bulkLeadArray","assignBulkLead","getBulkLeadList","editBulkLeadData","getBulkLead","template","download","onFileLoaded","fileInfo","originalFile","bulkLeadList","App","fontSize","React","createRef","UserTable","fetchedLeadList","setFetchedLeadList","bookingMonthlyStatus","setBookingMonthlyStatus","siteVisitsMonthlyStatus","setSiteVisitsMonthlyStatus","leadMonthlyStatus","setLeadMonthlyStatus","activityLogDetail","activityLog","userDetail","consultantLeads","consultantLeadList","teamLeadLeads","teamLeadLeadList","managerLeads","managerLeadList","leadsList","updatedAt","getFullYear","getMonth","charAt","toUpperCase","slice","activity","leadHandler","action","date","createdAt","confirmPassword","setConfirmPassword","bookingTarget","setBookingTarget","bookingDailyStatus","setBookingDailyStatus","siteVisitsDailyStatus","setSiteVisitsDailyStatus","leadDailyStatus","setLeadDailyStatus","minLength","maxLength","leadStatData","bookedData","lostLeadData","siteVisitData","leadCount","bookedCount","lostLeadCount","siteVisitCount","setLeadStats","bookedStats","setBookedStats","bookedAvg","setBookedAvg","thisMonthBooked","setThisMonthBooked","lostLeadStats","setLostLeadStats","lostLeadAvg","setLostLeadAvg","thisMonthLostLead","setThisMonthLostLead","siteVisitStats","setSiteVisitStats","siteVisitAvg","setSiteVisitAvg","thisMonthSiteVisit","setThisMonthSiteVisit","setTotalLeads","forEach","Chart","register","ArcElement","LineElement","BarElement","PointElement","BarController","BubbleController","DoughnutController","LineController","PieController","PolarAreaController","RadarController","ScatterController","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","Decimation","Filler","Legend","datasets","backgroundColor","data1","borderColor","borderWidth","forwardRef","ref","cancelledLeadId","setAssignedConsultant","refundStatus","setRefundStatus","cancelledLeadDetails","cancelledLeadInfo","updateCancelLead","retrieveHandler","nextFollowUpCount","setNextFollowUpCount","fetchConsultantsUnderManager","ReactTable2","fetchTeamLeadsUnderManager","teamLeadsList","up","onlyExportFiltered","exportAll","leadAssignerAddBulkLeadData","assignHandler","leadAssignerAssignBulkLeadData","showPassword","setShowPassword","passwordInputType","passwordIconColor","NotFoundImage","faChevronLeft","ErrorImage","rel","useLocation","pathname","setShow","showClass","onCollapse","CollapsableNavItem","children","defaultKey","indexOf","Accordion","NavItem","external","badgeText","badgeBg","badgeColor","classNames","navItemClassName","linkProps","Badge","pill","bg","expand","collapseOnSelect","Brand","aria-controls","CSSTransition","timeout","in","ProfilePicture","faTimes","faList","faTable","faPeopleArrows","faUserCheck","faUserFriends","faUser","faUpload","AccordionItem","item","example","CodeEditor","Documentation","AccordionComponent","FontAwesomeIcon","faBullhorn","faHeart","faThumbsUp","faAngleRight","Datetime","faTachometerAlt","faComments","faSun","faUserCircle","ReactLogoTransparent","ReactLogoPrimary","faAngleDoubleLeft","faAngleDoubleRight","Popover","finalValue","floor","random","textColor","bgColorClass","UKFlag","faPalette","faLaptopCode","showPrimary","setShowPrimary","showTertiary","setShowTertiary","Toast","handleCloseDefault","handleClosePrimary","handleCloseTertiary","RouteWithLoader","Component","component","rest","loaded","setLoaded","timer","clearTimeout","render","RouteWithSidebar","getItem","Sidebar","TeamLeadSidebar","ConsultantSidebar","exact","AdminDashboardOverview","NotFoundPage","scrollTo","top","left","behavior","reducer","combineReducers","fetchASM","userUpdate","consultantsUnderTeamLead","bulkLeads","deleteCancelLead","addCancelLead","cancelLeadInfo","cancelLeadList","addBulkLead","assignLeads","editBulkLead","fetchTasks","todoData","leadAssignerCreateBulkLead","assignToManagerBulkLead","cpmAddLead","cpmUpdateLead","cpmLeadDetails","cpmLeadList","cpmDeleteLead","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","ScrollToTop","HomePage","document","getElementById"],"mappings":"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","file":"static/js/main.38ecfa50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/themesberg.105e5059.svg\";","module.exports = __webpack_public_path__ + \"static/media/signin.1217b8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bulk_upload_sheet.edab1fdd.csv\";","module.exports = __webpack_public_path__ + \"static/media/profile-picture-1.4d26e151.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap-5-logo.6aae84ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.9675648e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile-picture-2.487133c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile-picture-4.ccd796b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/united-states-of-america.36ab476e.svg\";","module.exports = __webpack_public_path__ + \"static/media/canada.ed3cd4b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/germany.d810f621.svg\";","module.exports = __webpack_public_path__ + \"static/media/france.968aaa24.svg\";","module.exports = __webpack_public_path__ + \"static/media/japan.1f905d23.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.e050a3ab.png\";","module.exports = __webpack_public_path__ + \"static/media/react-hero-logo.9394d800.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-transparent.f7d45c01.svg\";","module.exports = __webpack_public_path__ + \"static/media/themesberg-logo.bbd344a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mockup-presentation.77a4c6a8.png\";","module.exports = __webpack_public_path__ + \"static/media/mockup-map-presentation.fc6d4c75.png\";","module.exports = __webpack_public_path__ + \"static/media/mockup-calendar-presentation.b2d9831a.png\";","module.exports = __webpack_public_path__ + \"static/media/react-mockup.99d034b6.png\";","module.exports = __webpack_public_path__ + \"static/media/bs5-illustrations.95abb40d.svg\";","module.exports = __webpack_public_path__ + \"static/media/overview.00a52613.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transactions.b98aee40.jpg\";","module.exports = __webpack_public_path__ + \"static/media/settings.43fe4184.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in.ea051702.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign-up.6774df14.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lock.69f2db42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/forgot-password.935e7046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reset-password.0a4cc9cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404.9ba4b7cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/500.192d8f70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile-cover.9992e0ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/italy.612e617f.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile-picture-5.baf7bf75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/laravel-logo.9f0623ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.a925745b.svg\";","module.exports = __webpack_public_path__ + \"static/media/500.a621f335.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-primary.5e51d949.svg\";","module.exports = __webpack_public_path__ + \"static/media/united-kingdom.e5564902.svg\";","var map = {\n\t\"./Binary_Property/ASCII.js\": 395,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 396,\n\t\"./Binary_Property/Alphabetic.js\": 397,\n\t\"./Binary_Property/Any.js\": 398,\n\t\"./Binary_Property/Assigned.js\": 399,\n\t\"./Binary_Property/Bidi_Control.js\": 400,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 401,\n\t\"./Binary_Property/Case_Ignorable.js\": 402,\n\t\"./Binary_Property/Cased.js\": 403,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 404,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 405,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 406,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 407,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 408,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 409,\n\t\"./Binary_Property/Dash.js\": 410,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 411,\n\t\"./Binary_Property/Deprecated.js\": 412,\n\t\"./Binary_Property/Diacritic.js\": 413,\n\t\"./Binary_Property/Emoji.js\": 414,\n\t\"./Binary_Property/Emoji_Component.js\": 415,\n\t\"./Binary_Property/Emoji_Modifier.js\": 416,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 417,\n\t\"./Binary_Property/Emoji_Presentation.js\": 418,\n\t\"./Binary_Property/Extended_Pictographic.js\": 419,\n\t\"./Binary_Property/Extender.js\": 420,\n\t\"./Binary_Property/Grapheme_Base.js\": 421,\n\t\"./Binary_Property/Grapheme_Extend.js\": 422,\n\t\"./Binary_Property/Hex_Digit.js\": 423,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 424,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 425,\n\t\"./Binary_Property/ID_Continue.js\": 426,\n\t\"./Binary_Property/ID_Start.js\": 427,\n\t\"./Binary_Property/Ideographic.js\": 428,\n\t\"./Binary_Property/Join_Control.js\": 429,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 430,\n\t\"./Binary_Property/Lowercase.js\": 431,\n\t\"./Binary_Property/Math.js\": 432,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 433,\n\t\"./Binary_Property/Pattern_Syntax.js\": 434,\n\t\"./Binary_Property/Pattern_White_Space.js\": 435,\n\t\"./Binary_Property/Quotation_Mark.js\": 436,\n\t\"./Binary_Property/Radical.js\": 437,\n\t\"./Binary_Property/Regional_Indicator.js\": 438,\n\t\"./Binary_Property/Sentence_Terminal.js\": 439,\n\t\"./Binary_Property/Soft_Dotted.js\": 440,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 441,\n\t\"./Binary_Property/Unified_Ideograph.js\": 442,\n\t\"./Binary_Property/Uppercase.js\": 443,\n\t\"./Binary_Property/Variation_Selector.js\": 444,\n\t\"./Binary_Property/White_Space.js\": 445,\n\t\"./Binary_Property/XID_Continue.js\": 446,\n\t\"./Binary_Property/XID_Start.js\": 447,\n\t\"./General_Category/Cased_Letter.js\": 448,\n\t\"./General_Category/Close_Punctuation.js\": 449,\n\t\"./General_Category/Connector_Punctuation.js\": 450,\n\t\"./General_Category/Control.js\": 451,\n\t\"./General_Category/Currency_Symbol.js\": 452,\n\t\"./General_Category/Dash_Punctuation.js\": 453,\n\t\"./General_Category/Decimal_Number.js\": 454,\n\t\"./General_Category/Enclosing_Mark.js\": 455,\n\t\"./General_Category/Final_Punctuation.js\": 456,\n\t\"./General_Category/Format.js\": 457,\n\t\"./General_Category/Initial_Punctuation.js\": 458,\n\t\"./General_Category/Letter.js\": 459,\n\t\"./General_Category/Letter_Number.js\": 460,\n\t\"./General_Category/Line_Separator.js\": 461,\n\t\"./General_Category/Lowercase_Letter.js\": 462,\n\t\"./General_Category/Mark.js\": 463,\n\t\"./General_Category/Math_Symbol.js\": 464,\n\t\"./General_Category/Modifier_Letter.js\": 465,\n\t\"./General_Category/Modifier_Symbol.js\": 466,\n\t\"./General_Category/Nonspacing_Mark.js\": 467,\n\t\"./General_Category/Number.js\": 468,\n\t\"./General_Category/Open_Punctuation.js\": 469,\n\t\"./General_Category/Other.js\": 470,\n\t\"./General_Category/Other_Letter.js\": 471,\n\t\"./General_Category/Other_Number.js\": 472,\n\t\"./General_Category/Other_Punctuation.js\": 473,\n\t\"./General_Category/Other_Symbol.js\": 474,\n\t\"./General_Category/Paragraph_Separator.js\": 475,\n\t\"./General_Category/Private_Use.js\": 476,\n\t\"./General_Category/Punctuation.js\": 477,\n\t\"./General_Category/Separator.js\": 478,\n\t\"./General_Category/Space_Separator.js\": 479,\n\t\"./General_Category/Spacing_Mark.js\": 480,\n\t\"./General_Category/Surrogate.js\": 481,\n\t\"./General_Category/Symbol.js\": 482,\n\t\"./General_Category/Titlecase_Letter.js\": 483,\n\t\"./General_Category/Unassigned.js\": 484,\n\t\"./General_Category/Uppercase_Letter.js\": 485,\n\t\"./Script/Adlam.js\": 486,\n\t\"./Script/Ahom.js\": 487,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 488,\n\t\"./Script/Arabic.js\": 489,\n\t\"./Script/Armenian.js\": 490,\n\t\"./Script/Avestan.js\": 491,\n\t\"./Script/Balinese.js\": 492,\n\t\"./Script/Bamum.js\": 493,\n\t\"./Script/Bassa_Vah.js\": 494,\n\t\"./Script/Batak.js\": 495,\n\t\"./Script/Bengali.js\": 496,\n\t\"./Script/Bhaiksuki.js\": 497,\n\t\"./Script/Bopomofo.js\": 498,\n\t\"./Script/Brahmi.js\": 499,\n\t\"./Script/Braille.js\": 500,\n\t\"./Script/Buginese.js\": 501,\n\t\"./Script/Buhid.js\": 502,\n\t\"./Script/Canadian_Aboriginal.js\": 503,\n\t\"./Script/Carian.js\": 504,\n\t\"./Script/Caucasian_Albanian.js\": 505,\n\t\"./Script/Chakma.js\": 506,\n\t\"./Script/Cham.js\": 507,\n\t\"./Script/Cherokee.js\": 508,\n\t\"./Script/Chorasmian.js\": 509,\n\t\"./Script/Common.js\": 510,\n\t\"./Script/Coptic.js\": 511,\n\t\"./Script/Cuneiform.js\": 512,\n\t\"./Script/Cypriot.js\": 513,\n\t\"./Script/Cyrillic.js\": 514,\n\t\"./Script/Deseret.js\": 515,\n\t\"./Script/Devanagari.js\": 516,\n\t\"./Script/Dives_Akuru.js\": 517,\n\t\"./Script/Dogra.js\": 518,\n\t\"./Script/Duployan.js\": 519,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 520,\n\t\"./Script/Elbasan.js\": 521,\n\t\"./Script/Elymaic.js\": 522,\n\t\"./Script/Ethiopic.js\": 523,\n\t\"./Script/Georgian.js\": 524,\n\t\"./Script/Glagolitic.js\": 525,\n\t\"./Script/Gothic.js\": 526,\n\t\"./Script/Grantha.js\": 527,\n\t\"./Script/Greek.js\": 528,\n\t\"./Script/Gujarati.js\": 529,\n\t\"./Script/Gunjala_Gondi.js\": 530,\n\t\"./Script/Gurmukhi.js\": 531,\n\t\"./Script/Han.js\": 532,\n\t\"./Script/Hangul.js\": 533,\n\t\"./Script/Hanifi_Rohingya.js\": 534,\n\t\"./Script/Hanunoo.js\": 535,\n\t\"./Script/Hatran.js\": 536,\n\t\"./Script/Hebrew.js\": 537,\n\t\"./Script/Hiragana.js\": 538,\n\t\"./Script/Imperial_Aramaic.js\": 539,\n\t\"./Script/Inherited.js\": 540,\n\t\"./Script/Inscriptional_Pahlavi.js\": 541,\n\t\"./Script/Inscriptional_Parthian.js\": 542,\n\t\"./Script/Javanese.js\": 543,\n\t\"./Script/Kaithi.js\": 544,\n\t\"./Script/Kannada.js\": 545,\n\t\"./Script/Katakana.js\": 546,\n\t\"./Script/Kayah_Li.js\": 547,\n\t\"./Script/Kharoshthi.js\": 548,\n\t\"./Script/Khitan_Small_Script.js\": 549,\n\t\"./Script/Khmer.js\": 550,\n\t\"./Script/Khojki.js\": 551,\n\t\"./Script/Khudawadi.js\": 552,\n\t\"./Script/Lao.js\": 553,\n\t\"./Script/Latin.js\": 554,\n\t\"./Script/Lepcha.js\": 555,\n\t\"./Script/Limbu.js\": 556,\n\t\"./Script/Linear_A.js\": 557,\n\t\"./Script/Linear_B.js\": 558,\n\t\"./Script/Lisu.js\": 559,\n\t\"./Script/Lycian.js\": 560,\n\t\"./Script/Lydian.js\": 561,\n\t\"./Script/Mahajani.js\": 562,\n\t\"./Script/Makasar.js\": 563,\n\t\"./Script/Malayalam.js\": 564,\n\t\"./Script/Mandaic.js\": 565,\n\t\"./Script/Manichaean.js\": 566,\n\t\"./Script/Marchen.js\": 567,\n\t\"./Script/Masaram_Gondi.js\": 568,\n\t\"./Script/Medefaidrin.js\": 569,\n\t\"./Script/Meetei_Mayek.js\": 570,\n\t\"./Script/Mende_Kikakui.js\": 571,\n\t\"./Script/Meroitic_Cursive.js\": 572,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 573,\n\t\"./Script/Miao.js\": 574,\n\t\"./Script/Modi.js\": 575,\n\t\"./Script/Mongolian.js\": 576,\n\t\"./Script/Mro.js\": 577,\n\t\"./Script/Multani.js\": 578,\n\t\"./Script/Myanmar.js\": 579,\n\t\"./Script/Nabataean.js\": 580,\n\t\"./Script/Nandinagari.js\": 581,\n\t\"./Script/New_Tai_Lue.js\": 582,\n\t\"./Script/Newa.js\": 583,\n\t\"./Script/Nko.js\": 584,\n\t\"./Script/Nushu.js\": 585,\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": 586,\n\t\"./Script/Ogham.js\": 587,\n\t\"./Script/Ol_Chiki.js\": 588,\n\t\"./Script/Old_Hungarian.js\": 589,\n\t\"./Script/Old_Italic.js\": 590,\n\t\"./Script/Old_North_Arabian.js\": 591,\n\t\"./Script/Old_Permic.js\": 592,\n\t\"./Script/Old_Persian.js\": 593,\n\t\"./Script/Old_Sogdian.js\": 594,\n\t\"./Script/Old_South_Arabian.js\": 595,\n\t\"./Script/Old_Turkic.js\": 596,\n\t\"./Script/Oriya.js\": 597,\n\t\"./Script/Osage.js\": 598,\n\t\"./Script/Osmanya.js\": 599,\n\t\"./Script/Pahawh_Hmong.js\": 600,\n\t\"./Script/Palmyrene.js\": 601,\n\t\"./Script/Pau_Cin_Hau.js\": 602,\n\t\"./Script/Phags_Pa.js\": 603,\n\t\"./Script/Phoenician.js\": 604,\n\t\"./Script/Psalter_Pahlavi.js\": 605,\n\t\"./Script/Rejang.js\": 606,\n\t\"./Script/Runic.js\": 607,\n\t\"./Script/Samaritan.js\": 608,\n\t\"./Script/Saurashtra.js\": 609,\n\t\"./Script/Sharada.js\": 610,\n\t\"./Script/Shavian.js\": 611,\n\t\"./Script/Siddham.js\": 612,\n\t\"./Script/SignWriting.js\": 613,\n\t\"./Script/Sinhala.js\": 614,\n\t\"./Script/Sogdian.js\": 615,\n\t\"./Script/Sora_Sompeng.js\": 616,\n\t\"./Script/Soyombo.js\": 617,\n\t\"./Script/Sundanese.js\": 618,\n\t\"./Script/Syloti_Nagri.js\": 619,\n\t\"./Script/Syriac.js\": 620,\n\t\"./Script/Tagalog.js\": 621,\n\t\"./Script/Tagbanwa.js\": 622,\n\t\"./Script/Tai_Le.js\": 623,\n\t\"./Script/Tai_Tham.js\": 624,\n\t\"./Script/Tai_Viet.js\": 625,\n\t\"./Script/Takri.js\": 626,\n\t\"./Script/Tamil.js\": 627,\n\t\"./Script/Tangut.js\": 628,\n\t\"./Script/Telugu.js\": 629,\n\t\"./Script/Thaana.js\": 630,\n\t\"./Script/Thai.js\": 631,\n\t\"./Script/Tibetan.js\": 632,\n\t\"./Script/Tifinagh.js\": 633,\n\t\"./Script/Tirhuta.js\": 634,\n\t\"./Script/Ugaritic.js\": 635,\n\t\"./Script/Vai.js\": 636,\n\t\"./Script/Wancho.js\": 637,\n\t\"./Script/Warang_Citi.js\": 638,\n\t\"./Script/Yezidi.js\": 639,\n\t\"./Script/Yi.js\": 640,\n\t\"./Script/Zanabazar_Square.js\": 641,\n\t\"./Script_Extensions/Adlam.js\": 642,\n\t\"./Script_Extensions/Ahom.js\": 643,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 644,\n\t\"./Script_Extensions/Arabic.js\": 645,\n\t\"./Script_Extensions/Armenian.js\": 646,\n\t\"./Script_Extensions/Avestan.js\": 647,\n\t\"./Script_Extensions/Balinese.js\": 648,\n\t\"./Script_Extensions/Bamum.js\": 649,\n\t\"./Script_Extensions/Bassa_Vah.js\": 650,\n\t\"./Script_Extensions/Batak.js\": 651,\n\t\"./Script_Extensions/Bengali.js\": 652,\n\t\"./Script_Extensions/Bhaiksuki.js\": 653,\n\t\"./Script_Extensions/Bopomofo.js\": 654,\n\t\"./Script_Extensions/Brahmi.js\": 655,\n\t\"./Script_Extensions/Braille.js\": 656,\n\t\"./Script_Extensions/Buginese.js\": 657,\n\t\"./Script_Extensions/Buhid.js\": 658,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 659,\n\t\"./Script_Extensions/Carian.js\": 660,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 661,\n\t\"./Script_Extensions/Chakma.js\": 662,\n\t\"./Script_Extensions/Cham.js\": 663,\n\t\"./Script_Extensions/Cherokee.js\": 664,\n\t\"./Script_Extensions/Chorasmian.js\": 665,\n\t\"./Script_Extensions/Common.js\": 666,\n\t\"./Script_Extensions/Coptic.js\": 667,\n\t\"./Script_Extensions/Cuneiform.js\": 668,\n\t\"./Script_Extensions/Cypriot.js\": 669,\n\t\"./Script_Extensions/Cyrillic.js\": 670,\n\t\"./Script_Extensions/Deseret.js\": 671,\n\t\"./Script_Extensions/Devanagari.js\": 672,\n\t\"./Script_Extensions/Dives_Akuru.js\": 673,\n\t\"./Script_Extensions/Dogra.js\": 674,\n\t\"./Script_Extensions/Duployan.js\": 675,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 676,\n\t\"./Script_Extensions/Elbasan.js\": 677,\n\t\"./Script_Extensions/Elymaic.js\": 678,\n\t\"./Script_Extensions/Ethiopic.js\": 679,\n\t\"./Script_Extensions/Georgian.js\": 680,\n\t\"./Script_Extensions/Glagolitic.js\": 681,\n\t\"./Script_Extensions/Gothic.js\": 682,\n\t\"./Script_Extensions/Grantha.js\": 683,\n\t\"./Script_Extensions/Greek.js\": 684,\n\t\"./Script_Extensions/Gujarati.js\": 685,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 686,\n\t\"./Script_Extensions/Gurmukhi.js\": 687,\n\t\"./Script_Extensions/Han.js\": 688,\n\t\"./Script_Extensions/Hangul.js\": 689,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 690,\n\t\"./Script_Extensions/Hanunoo.js\": 691,\n\t\"./Script_Extensions/Hatran.js\": 692,\n\t\"./Script_Extensions/Hebrew.js\": 693,\n\t\"./Script_Extensions/Hiragana.js\": 694,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 695,\n\t\"./Script_Extensions/Inherited.js\": 696,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 697,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 698,\n\t\"./Script_Extensions/Javanese.js\": 699,\n\t\"./Script_Extensions/Kaithi.js\": 700,\n\t\"./Script_Extensions/Kannada.js\": 701,\n\t\"./Script_Extensions/Katakana.js\": 702,\n\t\"./Script_Extensions/Kayah_Li.js\": 703,\n\t\"./Script_Extensions/Kharoshthi.js\": 704,\n\t\"./Script_Extensions/Khitan_Small_Script.js\": 705,\n\t\"./Script_Extensions/Khmer.js\": 706,\n\t\"./Script_Extensions/Khojki.js\": 707,\n\t\"./Script_Extensions/Khudawadi.js\": 708,\n\t\"./Script_Extensions/Lao.js\": 709,\n\t\"./Script_Extensions/Latin.js\": 710,\n\t\"./Script_Extensions/Lepcha.js\": 711,\n\t\"./Script_Extensions/Limbu.js\": 712,\n\t\"./Script_Extensions/Linear_A.js\": 713,\n\t\"./Script_Extensions/Linear_B.js\": 714,\n\t\"./Script_Extensions/Lisu.js\": 715,\n\t\"./Script_Extensions/Lycian.js\": 716,\n\t\"./Script_Extensions/Lydian.js\": 717,\n\t\"./Script_Extensions/Mahajani.js\": 718,\n\t\"./Script_Extensions/Makasar.js\": 719,\n\t\"./Script_Extensions/Malayalam.js\": 720,\n\t\"./Script_Extensions/Mandaic.js\": 721,\n\t\"./Script_Extensions/Manichaean.js\": 722,\n\t\"./Script_Extensions/Marchen.js\": 723,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 724,\n\t\"./Script_Extensions/Medefaidrin.js\": 725,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 726,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 727,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 728,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 729,\n\t\"./Script_Extensions/Miao.js\": 730,\n\t\"./Script_Extensions/Modi.js\": 731,\n\t\"./Script_Extensions/Mongolian.js\": 732,\n\t\"./Script_Extensions/Mro.js\": 733,\n\t\"./Script_Extensions/Multani.js\": 734,\n\t\"./Script_Extensions/Myanmar.js\": 735,\n\t\"./Script_Extensions/Nabataean.js\": 736,\n\t\"./Script_Extensions/Nandinagari.js\": 737,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 738,\n\t\"./Script_Extensions/Newa.js\": 739,\n\t\"./Script_Extensions/Nko.js\": 740,\n\t\"./Script_Extensions/Nushu.js\": 741,\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": 742,\n\t\"./Script_Extensions/Ogham.js\": 743,\n\t\"./Script_Extensions/Ol_Chiki.js\": 744,\n\t\"./Script_Extensions/Old_Hungarian.js\": 745,\n\t\"./Script_Extensions/Old_Italic.js\": 746,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 747,\n\t\"./Script_Extensions/Old_Permic.js\": 748,\n\t\"./Script_Extensions/Old_Persian.js\": 749,\n\t\"./Script_Extensions/Old_Sogdian.js\": 750,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 751,\n\t\"./Script_Extensions/Old_Turkic.js\": 752,\n\t\"./Script_Extensions/Oriya.js\": 753,\n\t\"./Script_Extensions/Osage.js\": 754,\n\t\"./Script_Extensions/Osmanya.js\": 755,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 756,\n\t\"./Script_Extensions/Palmyrene.js\": 757,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 758,\n\t\"./Script_Extensions/Phags_Pa.js\": 759,\n\t\"./Script_Extensions/Phoenician.js\": 760,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 761,\n\t\"./Script_Extensions/Rejang.js\": 762,\n\t\"./Script_Extensions/Runic.js\": 763,\n\t\"./Script_Extensions/Samaritan.js\": 764,\n\t\"./Script_Extensions/Saurashtra.js\": 765,\n\t\"./Script_Extensions/Sharada.js\": 766,\n\t\"./Script_Extensions/Shavian.js\": 767,\n\t\"./Script_Extensions/Siddham.js\": 768,\n\t\"./Script_Extensions/SignWriting.js\": 769,\n\t\"./Script_Extensions/Sinhala.js\": 770,\n\t\"./Script_Extensions/Sogdian.js\": 771,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 772,\n\t\"./Script_Extensions/Soyombo.js\": 773,\n\t\"./Script_Extensions/Sundanese.js\": 774,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 775,\n\t\"./Script_Extensions/Syriac.js\": 776,\n\t\"./Script_Extensions/Tagalog.js\": 777,\n\t\"./Script_Extensions/Tagbanwa.js\": 778,\n\t\"./Script_Extensions/Tai_Le.js\": 779,\n\t\"./Script_Extensions/Tai_Tham.js\": 780,\n\t\"./Script_Extensions/Tai_Viet.js\": 781,\n\t\"./Script_Extensions/Takri.js\": 782,\n\t\"./Script_Extensions/Tamil.js\": 783,\n\t\"./Script_Extensions/Tangut.js\": 784,\n\t\"./Script_Extensions/Telugu.js\": 785,\n\t\"./Script_Extensions/Thaana.js\": 786,\n\t\"./Script_Extensions/Thai.js\": 787,\n\t\"./Script_Extensions/Tibetan.js\": 788,\n\t\"./Script_Extensions/Tifinagh.js\": 789,\n\t\"./Script_Extensions/Tirhuta.js\": 790,\n\t\"./Script_Extensions/Ugaritic.js\": 791,\n\t\"./Script_Extensions/Vai.js\": 792,\n\t\"./Script_Extensions/Wancho.js\": 793,\n\t\"./Script_Extensions/Warang_Citi.js\": 794,\n\t\"./Script_Extensions/Yezidi.js\": 795,\n\t\"./Script_Extensions/Yi.js\": 796,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 797,\n\t\"./index.js\": 798,\n\t\"./unicode-version.js\": 799\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 394;","module.exports = __webpack_public_path__ + \"static/media/profile-picture-3.9a250e5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e7672e7a.png\";","export const Routes = {\r\n    // pages\r\n    // Presentation: { path: \"/\" },\r\n    LoginPage: { path: \"/login\" },\r\n    AddConsultant: { path: \"/addconsultant\" },\r\n    AddMember: { path: \"/addmember\" },\r\n    AddTeamLead: { path: \"/addteamlead\" },\r\n    AddLead: { path: \"/addlead\" },\r\n    AddASM: {path:\"/addasm\"},\r\n    AddCP: {path: \"/addcp\"},\r\n    AddCPM: {path:\"/addcpm\"},\r\n    AddLeadAssigner: {path: \"/addleadassigner\"},\r\n    ModifyLead: { path: \"/leads/:id/edit\" },\r\n    AdminDashboard: {path: \"/\"},\r\n    Dashboard : {path:'/dashboard'},\r\n    Consultant: {path: \"/consultant\"},\r\n    Manager: {path: \"/manager\"},\r\n    TeamLead: {path: \"/teamlead\"},\r\n    TotalLeads: {path: \"/totalleads\"},\r\n    // TotalLeads: {path: \"/leads/page/:pageNumber\"},\r\n    CancellationLeads: {path: \"/cancelledleads\"},\r\n    LostSales: {path: \"/lostsales\"},\r\n    SiteVisits: {path: \"/sitevisits\"},\r\n    SetMilestone: {path: \"/setmilestone\"},\r\n    Promotion: {path: \"/promotion\"},\r\n    AddProject: {path: \"/addproject\"},\r\n    TaskManager: {path: \"/taskmanager\"},\r\n    AllProjects: {path: \"/allprojects\"},\r\n    ProjectDetails: {path: \"/projectdetails/:id\"},\r\n    Demotwo: {path:\"/demo\"},\r\n    Leads: {path:\"/leads\"},\r\n    LostLeads: {path:\"/lostleads\"},\r\n    SiteVisitsLeads: {path: \"/sitevisitedleads\"},\r\n    NextFollowUp : {path: \"/nextfollowup\"},\r\n    UploadLeads: {path: \"/uploadleads\"},\r\n    BulkLeads: {path: \"/bulkleads\"},\r\n    Calendar: {path: \"/calendar\"},\r\n    UserList:{path: \"/activitylog\"},\r\n    ActivityLog:{path: \"/activitylog/:id\"},\r\n    EditUser:{path: \"/user/:id/edit\"},\r\n    CancelledLeadEdit:{path: \"/cancelledleads/:id/edit\"},\r\n    \r\n    DashboardOverview: { path: \"/dashboard/overview\" },\r\n\r\n    // manager routes\r\n    ManagerDashboard: { path: \"/manager/dashboard\" },\r\n    ManagerLeads: { path: \"/manager/leads\" },\r\n    ManagerAddLead: { path: \"/manager/addlead\" },\r\n    ManagerLostLeads: { path: \"/manager/lostleads\" },\r\n    ManagerSiteVisitsLeads: { path: \"/manager/sitevisitedleads\" },\r\n    ManagerCancellationLeads: {path: \"/manager/cancelledleads\"},\r\n    ManagerNextFollowUp : {path: \"/manager/nextfollowup\"},\r\n    ManagerAddMember : {path: \"/manager/addmember\"},\r\n    ManagerTeamLead: {path: \"/manager/teamlead\"},\r\n    ManagerConsultant: {path: \"/manager/consultant\"},\r\n    ManagerActivityLog:{path: \"/manager/activitylog\"},\r\n    ManagerSetMilestone: {path: \"/manager/setmilestone\"},\r\n    ManagerTaskManager: {path: \"/manager/taskmanager\"},\r\n    ManagerEditUser:{path: \"/manager/user/:id/edit\"},\r\n    ManagerBulkLeads: {path: \"/manager/bulkleads\"},\r\n    ManagerModifyLead: { path: \"/manager/leads/:id/edit\" },\r\n    ManagerTeamMember: { path: \"/manager/team\" },\r\n\r\n    // channel partner manager routes\r\n    CPManagerDashboard: { path: \"/cpmanager/dashboard\" },\r\n    CPManagerLeads: { path: \"/cpmanager/leads\" },\r\n    CPManagerAddLead: { path: \"/cpmanager/addlead\" },\r\n    CPManagerLostLeads: { path: \"/cpmanager/lostleads\" },\r\n    CPManagerSiteVisitsLeads: { path: \"/cpmanager/sitevisitedleads\" },\r\n    CPManagerCancellationLeads: {path: \"/cpmanager/cancelledleads\"},\r\n    CPManagerNextFollowUp : {path: \"/cpmanager/nextfollowup\"},\r\n    CPManagerActivityLog:{path: \"/cpmanager/activitylog\"},\r\n    CPManagerTaskManager: {path: \"/cpmanager/taskmanager\"},\r\n    CPManagerBulkLeads: {path: \"/cpmanager/bulkleads\"},\r\n    CPManagerModifyLead: { path: \"/cpmanager/leads/:id/edit\" },\r\n\r\n    //teamlead routes\r\n    TeamLeadDashboard: {path: \"/teamlead/dashboard\"},\r\n    TeamLeadLeads: { path: \"/teamlead/leads\" },\r\n    TeamLeadAddLead: { path: \"/teamlead/addlead\" },\r\n    TeamLeadLostLeads: { path: \"/teamlead/lostleads\" },\r\n    TeamLeadSiteVisitsLeads: { path: \"/teamlead/sitevisitedleads\" },\r\n    TeamLeadActivityLog:{path: \"/teamlead/activitylog\"},\r\n    TeamLeadSetMilestone: {path: \"/teamlead/setmilestone\"},\r\n    TeamLeadTaskManager: {path: \"/teamlead/taskmanager\"},\r\n    TeamLeadModifyLead: { path: \"/teamlead/leads/:id/edit\" },\r\n\r\n    //consultant routes\r\n    ConsultantDashboard: {path: \"/consultant/dashboard\"},\r\n    ConsultantLeads: { path: \"/consultant/leads\" },\r\n    ConsultantAddLead: { path: \"/consultant/addlead\" },\r\n    ConsultantLostLeads: { path: \"/consultant/lostleads\" },\r\n    ConsultantSiteVisitsLeads: { path: \"/consultant/sitevisitedleads\" },\r\n    ConsultantActivityLog:{path: \"/consultant/activitylog\"},\r\n    ConsultantNextFollowUp: {path: \"/consultant/nextfollowup\"},\r\n    ConsultantTaskManager: {path: \"/consultant/taskmanager\"},\r\n    ConsultantModifyLead: { path: \"/consultant/leads/:id/edit\" },\r\n\r\n    //lead Assigner routes\r\n    LeadAssginerDashboard: {path: \"/leadassigner/dashboard\"},\r\n    leadAssignerLeads: { path: \"/leadassigner/leads\" },\r\n    LeadAssginerAddLead: { path: \"/leadassigner/addlead\" },\r\n    leadAssignerBulkLeads: { path: \"/leadassigner/bulkleads\" },\r\n    leadAssignerActivityLog: { path: \"/leadassigner/activitylog\" },\r\n    leadAssignerTaskManager: {path: \"/leadassigner/taskmanager\"},\r\n\r\n    Transactions: { path: \"/transactions\" },\r\n    Settings: { path: \"/settings\" },\r\n    Upgrade: { path: \"/upgrade\" },\r\n    BootstrapTables: { path: \"/tables/bootstrap-tables\" },\r\n    Billing: { path: \"/examples/billing\" },\r\n    Invoice: { path: \"/examples/invoice\" },\r\n    Signin: { path: \"/examples/sign-in\" },\r\n    Signup: { path: \"/examples/sign-up\" },\r\n    ForgotPassword: { path: \"/examples/forgot-password\" },\r\n    ResetPassword: { path: \"/examples/reset-password\" },\r\n    Lock: { path: \"/examples/lock\" },\r\n    NotFound: { path: \"/examples/404\" },\r\n    ServerError: { path: \"/examples/500\" },\r\n\r\n    // docs\r\n    DocsOverview: { path: \"/documentation/overview\" },\r\n    DocsDownload: { path: \"/documentation/download\" },\r\n    DocsQuickStart: { path: \"/documentation/quick-start\" },\r\n    DocsLicense: { path: \"/documentation/license\" },\r\n    DocsFolderStructure: { path: \"/documentation/folder-structure\" },\r\n    DocsBuild: { path: \"/documentation/build-tools\" },\r\n    DocsChangelog: { path: \"/documentation/changelog\" },\r\n\r\n    // components\r\n    Accordions: { path: \"/components/accordions\" },\r\n    Alerts: { path: \"/components/alerts\" },\r\n    Badges: { path: \"/components/badges\" },\r\n    Widgets: { path: \"/widgets\" },\r\n    Breadcrumbs: { path: \"/components/breadcrumbs\" },\r\n    Buttons: { path: \"/components/buttons\" },\r\n    Forms: { path: \"/components/forms\" },\r\n    Modals: { path: \"/components/modals\" },\r\n    Navs: { path: \"/components/navs\" },\r\n    Navbars: { path: \"/components/navbars\" },\r\n    Pagination: { path: \"/components/pagination\" },\r\n    Popovers: { path: \"/components/popovers\" },\r\n    Progress: { path: \"/components/progress\" },\r\n    Tables: { path: \"/components/tables\" },\r\n    Tabs: { path: \"/components/tabs\" },\r\n    Tooltips: { path: \"/components/tooltips\" },\r\n    Toasts: { path: \"/components/toasts\" },\r\n    WidgetsComponent: { path: \"/components/widgets\" }\r\n};","\r\nimport React, { useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\r\nimport Highlight, { Prism } from 'prism-react-renderer';\r\n\r\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\r\n\r\nexport default (props) => {\r\n  const { code = \"\", language = \"jsx\" } = props;\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000);\r\n  };\r\n\r\n  const CodeStyling = ({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n    <Card className=\"position-relative pe-8 mb-2\">\r\n      <Card.Body>\r\n        <pre className={className} style={style}>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\r\n            </div>\r\n          ))}\r\n        </pre>\r\n\r\n        {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\r\n\r\n        <OverlayTrigger\r\n          trigger={['hover', 'focus']}\r\n          placement=\"top\"\r\n          overlay={<Tooltip>Copy to clipboard</Tooltip>}\r\n        >\r\n          <CopyToClipboard text={code} onCopy={handleCopy}>\r\n            <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\r\n          </CopyToClipboard>\r\n        </OverlayTrigger>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Highlight Prism={Prism} code={code} language={language} theme={themeStyle}>\r\n      {CodeStyling}\r\n    </Highlight>\r\n  );\r\n};\r\n\r\n","\r\nimport React, { useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Col, Row, Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\r\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport Code from \"./Code\";\r\n\r\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\r\n\r\nexport default (props) => {\r\n  const { language = \"jsx\", scope = {}, imports = null, maxHeight = 'none' } = props;\r\n  const [code, setCode] = useState(props.code);\r\n  const [copied, setCopied] = useState(false);\r\n  const noInline = code.includes('render(');\r\n\r\n  const handleCodeChange = (newCode) => {\r\n    setCode(newCode);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000);\r\n  };\r\n\r\n  return (\r\n    <LiveProvider noInline={noInline} code={code} language={language} theme={themeStyle} scope={scope}>\r\n      <Row>\r\n        <Col xs={12} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Body style={{ maxHeight: maxHeight }}>\r\n              <LivePreview />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        {imports ? (\r\n          <Col xs={12} className=\"mb-4\">\r\n            <Code code={imports} />\r\n          </Col>\r\n        ) : null}\r\n        <Col xs={12} className=\"mb-4\">\r\n          <LiveError className=\"alert alert-danger\" />\r\n\r\n          <span className=\"fs-7 mb-2 d-block text-gray-600\">\r\n            <OverlayTrigger trigger={['hover', 'focus']} placement=\"top\" overlay={<Tooltip>You can edit the code below and the changes will be seen in the example above.</Tooltip>}>\r\n              <FontAwesomeIcon icon={faQuestionCircle} className=\"me-2\" />\r\n            </OverlayTrigger>\r\n            Live React Code Editor\r\n          </span>\r\n\r\n          <Card>\r\n            <Card.Body className=\"position-relative\">\r\n\r\n              <LiveEditor onChange={handleCodeChange} className=\"live-editor\" />\r\n\r\n              {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\r\n\r\n              <OverlayTrigger\r\n                trigger={['hover', 'focus']}\r\n                placement=\"top\"\r\n                overlay={<Tooltip>Copy to clipboard</Tooltip>}\r\n              >\r\n                <CopyToClipboard text={code} onCopy={handleCopy}>\r\n                  <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\r\n                </CopyToClipboard>\r\n              </OverlayTrigger>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </LiveProvider>\r\n  );\r\n};\r\n\r\n","\r\nimport OverviewImg from \"../assets/img/pages/overview.jpg\";\r\nimport TransactionsImg from \"../assets/img/pages/transactions.jpg\";\r\nimport SettingsImg from \"../assets/img/pages/settings.jpg\";\r\nimport SignInImg from \"../assets/img/pages/sign-in.jpg\";\r\nimport SignUpImg from \"../assets/img/pages/sign-up.jpg\";\r\nimport LockImg from \"../assets/img/pages/lock.jpg\";\r\nimport ForgotPasswordImg from \"../assets/img/pages/forgot-password.jpg\";\r\nimport ResetPasswordImg from \"../assets/img/pages/reset-password.jpg\";\r\nimport NotFoundImg from \"../assets/img/pages/404.jpg\";\r\nimport ServerErrorImg from \"../assets/img/pages/500.jpg\";\r\n\r\nimport { Routes } from \"../routes\";\r\n\r\n\r\nexport default [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Overview\",\r\n        \"image\": OverviewImg,\r\n        \"link\": Routes.DashboardOverview.path\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Transactions\",\r\n        \"image\": TransactionsImg,\r\n        \"link\": Routes.Transactions.path\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"name\": \"Settings\",\r\n        \"image\": SettingsImg,\r\n        \"link\": Routes.Settings.path\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"name\": \"Sign In\",\r\n        \"image\": SignInImg,\r\n        \"link\": Routes.Signin\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"name\": \"Sign Up\",\r\n        \"image\": SignUpImg,\r\n        \"link\": Routes.Signup.path\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"name\": \"Lock\",\r\n        \"image\": LockImg,\r\n        \"link\": Routes.Lock.path\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"name\": \"Forgot password\",\r\n        \"image\": ForgotPasswordImg,\r\n        \"link\": Routes.ForgotPassword.path\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"name\": \"Reset password\",\r\n        \"image\": ResetPasswordImg,\r\n        \"link\": Routes.ResetPassword.path\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"name\": \"404\",\r\n        \"image\": NotFoundImg,\r\n        \"link\": Routes.NotFound.path\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"name\": \"500\",\r\n        \"image\": ServerErrorImg,\r\n        \"link\": Routes.ServerError.path\r\n    }\r\n];","\r\nimport { faCalendarAlt, faFileAlt, faImages, faMapMarkedAlt, faMobileAlt, faPenFancy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faAccessibleIcon, faBootstrap, faGulp, faHtml5, faReact, faSass } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default [\r\n    {\r\n        \"id\": 0,\r\n        \"title\": \"React.js\",\r\n        \"icon\": faReact,\r\n        \"description\": \"The most popular front-end library in the world\"\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"Bootstrap 5\",\r\n        \"icon\": faBootstrap,\r\n        \"description\": \"Built with the most popular CSS Framework\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"title\": \"Sass\",\r\n        \"icon\": faSass,\r\n        \"description\": \"Variables and mixins to empower development\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"title\": \"Responsive\",\r\n        \"icon\": faMobileAlt,\r\n        \"description\": \"All pages and components are 100% responsive\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"title\": \"Gulp\",\r\n        \"icon\": faGulp,\r\n        \"description\": \"Gulp & BrowserSync for a flawless workflow\"\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"title\": \"Creative rights\",\r\n        \"icon\": faImages,\r\n        \"description\": \"All images, icons and fonts are licensed & free to use\"\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"title\": \"Documentation\",\r\n        \"icon\": faFileAlt,\r\n        \"description\": \"Everything that comes with Rocket is well documented\"\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"title\": \"WCAG Accessibility\",\r\n        \"icon\": faAccessibleIcon,\r\n        \"description\": \"Accessibility oriented design and functionality\"\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"title\": \"W3C Validated\",\r\n        \"icon\": faHtml5,\r\n        \"description\": \"HTML pages are all valid by W3C Standards\"\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"title\": \"Calendar\",\r\n        \"icon\": faCalendarAlt,\r\n        \"description\": \"Advanced integration with FullCalendar.js\"\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"title\": \"Mapbox\",\r\n        \"icon\": faMapMarkedAlt,\r\n        \"description\": \"Custom integration with markers and cards\"\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"title\": \"Design\",\r\n        \"icon\": faPenFancy,\r\n        \"description\": \"Crafted by professional UI/UX designers\"\r\n    }\r\n];","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt, faDownload, faCheckCircle, faRocket, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button } from '@themesberg/react-bootstrap';\r\nimport { Table } from '@themesberg/react-bootstrap';\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <Row className=\"mt-lg-5 mt-4 d-flex justify-content-center\">\r\n                <Col xl={8}>\r\n                    <h1 className=\"text-center fw-bolder\">Upgrade to Pro <FontAwesomeIcon icon={faRocket} className=\"ms-1\" /></h1>\r\n                    <p className=\"text-center lead mb-lg-5 mb-4\">Looking to take React development to the next level? Check out the premium version of Volt React Dashboard.</p>\r\n                    <Table className=\"comparison-table table-striped\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th className=\"border-0\"></th>\r\n                                <th className=\"border-0\"><h6 className=\"fw-bolder\">What is in demo?</h6></th>\r\n                                <th className=\"border-0 fw-bolder\"><h6 className=\"fw-bolder\">What is in Pro version?</h6></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"border-0\">React Components</td>\r\n                                <td className=\"border-0\">100</td>\r\n                                <td className=\"border-0\">200+</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Dashboard Pages</td>\r\n                                <td className=\"border-0\">10</td>\r\n                                <td className=\"border-0\">20</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Customized Plugins</td>\r\n                                <td className=\"border-0\">2</td>\r\n                                <td className=\"border-0\">6</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Sass Source Files</td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Documentation</td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Advanced Sidebar</td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faTimesCircle} className=\"ms-1 text-danger\" /></td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Calendar</td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faTimesCircle} className=\"ms-1 text-danger\" /></td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Mapbox</td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faTimesCircle} className=\"ms-1 text-danger\" /></td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\">Tech Support</td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faTimesCircle} className=\"ms-1 text-danger\" /></td>\r\n                                <td className=\"border-0\"><FontAwesomeIcon icon={faCheckCircle} className=\"ms-1 text-success\" /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0\"></td>\r\n                                <td className=\"border-0\">\r\n                                    <Button href=\"https://themesberg.com/product/dashboard/volt-react\" target=\"_blank\" variant=\"primary\" className=\"m-0 mt-3 mb-3\"><FontAwesomeIcon icon={faDownload} className=\"me-1\" /> Download</Button>\r\n                                </td>\r\n                                <td className=\"border-0\">\r\n                                    <Button href=\"https://demo.themesberg.com/volt-pro-react/#/\" target=\"_blank\" variant=\"secondary\" className=\"m-0 mt-3\">Demo Volt React Pro <FontAwesomeIcon icon={faExternalLinkAlt} className=\"ms-1\" /></Button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n","\r\nimport React from \"react\";\r\nimport Chartist from \"react-chartist\";\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\r\n\r\nexport const SalesValueChart = ({leadStats}) => {\r\n  const data = {\r\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    series: [leadStats]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: true,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\r\n  );\r\n};\r\n\r\nexport const SalesValueChartphone = () => {\r\n  const data = {\r\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n    series: [[1, 2, 2, 3, 3, 4, 3]]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: false,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `$${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\r\n  );\r\n};\r\n\r\nexport const CircleChart = (props) => {\r\n  const { series = [], donutWidth = 20 } = props;\r\n  const sum = (a, b) => a + b;\r\n\r\n  const options = {\r\n    low: 0,\r\n    high: 8,\r\n    donutWidth,\r\n    donut: true,\r\n    donutSolid: true,\r\n    fullWidth: false,\r\n    showLabel: false,\r\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\r\n  }\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\r\n  );\r\n};\r\n\r\nexport const BarChart = (props) => {\r\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\r\n  const data = { labels, series };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    axisX: {\r\n      position: 'end'\r\n    },\r\n    axisY: {\r\n      showGrid: false,\r\n      showLabel: false,\r\n      offset: 0\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { faCalendarCheck, faComment } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Profile1 from \"../assets/img/team/profile-picture-1.jpg\"\r\nimport Profile2 from \"../assets/img/team/profile-picture-2.jpg\"\r\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\"\r\nimport Profile4 from \"../assets/img/team/profile-picture-4.jpg\"\r\n\r\nexport default [\r\n    {\r\n        \"id\": 1,\r\n        \"image\": Profile1,\r\n        \"name\": \"Christopher Wood\",\r\n        \"statusKey\": \"online\",\r\n        \"icon\": faCalendarCheck,\r\n        \"btnText\": \"Invite\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"image\": Profile2,\r\n        \"name\": \"Jose Leos\",\r\n        \"statusKey\": \"inMeeting\",\r\n        \"icon\": faComment,\r\n        \"btnText\": \"Message\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"image\": Profile3,\r\n        \"name\": \"Bonnie Green\",\r\n        \"statusKey\": \"offline\",\r\n        \"icon\": faCalendarCheck,\r\n        \"btnText\": \"Invite\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"image\": Profile4,\r\n        \"name\": \"Neil Sims\",\r\n        \"statusKey\": \"online\",\r\n        \"icon\": faComment,\r\n        \"btnText\": \"Message\"\r\n    }\r\n]","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faChartArea, faChartBar, faChartLine, faFlagUsa, faFolderOpen, faGlobeEurope, faPaperclip, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faAngular, faBootstrap, faReact, faVuejs } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Col, Row, Card, Image, Button, ListGroup, ProgressBar } from '@themesberg/react-bootstrap';\r\nimport { CircleChart, BarChart, SalesValueChart, SalesValueChartphone } from \"./Charts\";\r\n\r\nimport Profile1 from \"../assets/img/team/profile-picture-1.jpg\";\r\nimport ProfileCover from \"../assets/img/profile-cover.jpg\";\r\n\r\nimport teamMembers from \"../data/teamMembers\";\r\n\r\n\r\nexport const ProfileCardWidget = () => {\r\n  return (\r\n    <Card border=\"light\" className=\"text-center p-0 mb-4\">\r\n      <div style={{ backgroundImage: `url(${ProfileCover})` }} className=\"profile-cover rounded-top\" />\r\n      <Card.Body className=\"pb-5\">\r\n        <Card.Img src={Profile1} alt=\"Neil Portrait\" className=\"user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-4\" />\r\n        <Card.Title>Neil Sims</Card.Title>\r\n        <Card.Subtitle className=\"fw-normal\">Senior Software Engineer</Card.Subtitle>\r\n        <Card.Text className=\"text-gray mb-4\">New York, USA</Card.Text>\r\n\r\n        <Button variant=\"primary\" size=\"sm\" className=\"me-2\">\r\n          <FontAwesomeIcon icon={faUserPlus} className=\"me-1\" /> Connect\r\n        </Button>\r\n        <Button variant=\"secondary\" size=\"sm\">Send Message</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const ChoosePhotoWidget = (props) => {\r\n  const { title, photo } = props;\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">{title}</h5>\r\n        <div className=\"d-xl-flex align-items-center\">\r\n          <div className=\"user-avatar xl-avatar\">\r\n            <Image fluid rounded src={photo} />\r\n          </div>\r\n          <div className=\"file-field\">\r\n            <div className=\"d-flex justify-content-xl-center ms-xl-3\">\r\n              <div className=\"d-flex\">\r\n                <span className=\"icon icon-md\">\r\n                  <FontAwesomeIcon icon={faPaperclip} className=\"me-3\" />\r\n                </span>\r\n                <input type=\"file\" />\r\n                <div className=\"d-md-block text-start\">\r\n                  <div className=\"fw-normal text-dark mb-1\">Choose Image</div>\r\n                  <div className=\"text-gray small\">JPG, GIF or PNG. Max size of 800K</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const CounterWidget = (props) => {\r\n  const { icon, iconColor, category, title, period, percentage } = props;\r\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\r\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body>\r\n        <Row className=\"d-block d-xl-flex align-items-center\">\r\n          <Col xl={5} className=\"text-xl-center d-flex align-items-center justify-content-xl-center mb-3 mb-xl-0\">\r\n            <div className={`icon icon-shape icon-md icon-${iconColor} rounded me-4 me-sm-0`}>\r\n              <FontAwesomeIcon icon={icon} />\r\n            </div>\r\n            <div className=\"d-sm-none\">\r\n              <h5>{category}</h5>\r\n              <h3 className=\"mb-1\">{title}</h3>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} xl={7} className=\"px-xl-0\">\r\n            <div className=\"d-none d-sm-block\">\r\n              <h5>{category}</h5>\r\n              <h3 className=\"mb-1\">{title}</h3>\r\n            </div>\r\n            <small>{period}</small>\r\n            {/* <small>{period}, <FontAwesomeIcon icon={faGlobeEurope} size=\"xs\" /> WorldWide</small> */}\r\n            {/* <div className=\"small mt-2\">\r\n              <FontAwesomeIcon icon={percentageIcon} className={`${percentageColor} me-1`} />\r\n              <span className={`${percentageColor} fw-bold`}>\r\n                {percentage}%\r\n              </span> Since last month\r\n            </div> */}\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const CircleChartWidget = (props) => {\r\n  const { title, data = [] } = props;\r\n  const series = data.map(d => d.value);\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body>\r\n        <Row className=\"d-block d-xl-flex align-items-center\">\r\n          <Col xs={12} xl={5} className=\"text-xl-center d-flex align-items-center justify-content-xl-center mb-3 mb-xl-0\">\r\n            <CircleChart series={series} />\r\n          </Col>\r\n          <Col xs={12} xl={7} className=\"px-xl-0\">\r\n            <h5 className=\"mb-3\">{title}</h5>\r\n\r\n            {data.map(d => (\r\n              <h6 key={`circle-element-${d.id}`} className=\"fw-normal text-gray\">\r\n                <FontAwesomeIcon icon={d.icon} className={`icon icon-xs text-${d.color} w-20 me-1`} />\r\n                {` ${d.label} `}{`${d.value}%`}\r\n              </h6>\r\n            ))}\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const BarChartWidget = (props) => {\r\n  const { title, value, percentage, data = [] } = props;\r\n  const labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const series = data.map(d => d.value);\r\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\r\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body className=\"d-flex flex-row align-items-center flex-0 border-bottom\">\r\n        <div className=\"d-block\">\r\n          <h6 className=\"fw-normal text-gray mb-2\">{title}</h6>\r\n          <h3>{value}</h3>\r\n          <small className=\"mt-2\">\r\n            <FontAwesomeIcon icon={percentageIcon} className={`${percentageColor} me-1`} />\r\n            <span className={`${percentageColor} fw-bold`}>\r\n              {percentage}%\r\n            </span>\r\n          </small>\r\n        </div>\r\n        <div className=\"d-block ms-auto\">\r\n          {data.map(d => (\r\n            <div key={`bar-element-${d.id}`} className=\"d-flex align-items-center text-end mb-2\">\r\n              <span className={`shape-xs rounded-circle bg-${d.color} me-2`} />\r\n              <small className=\"fw-normal\">{d.label}</small>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card.Body>\r\n      <Card.Body className=\"p-2\">\r\n        <BarChart labels={labels} series={series} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const TeamMembersWidget = () => {\r\n  const TeamMember = (props) => {\r\n    const { name, statusKey, image, icon, btnText } = props;\r\n    const status = {\r\n      online: { color: \"success\", label: \"Online\" },\r\n      inMeeting: { color: \"warning\", label: \"In a meeting\" },\r\n      offline: { color: \"danger\", label: \"Offline\" }\r\n    };\r\n\r\n    const statusColor = status[statusKey] ? status[statusKey].color : 'danger'\r\n      , statusLabel = status[statusKey] ? status[statusKey].label : 'Offline';\r\n\r\n    return (\r\n      <ListGroup.Item className=\"px-0\">\r\n        <Row className=\"align-items-center\">\r\n          <Col className=\"col-auto\">\r\n            <a href=\"#top\" className=\"user-avatar\">\r\n              <Image src={image} className=\"rounded-circle\" />\r\n            </a>\r\n          </Col>\r\n          <Col className=\"ms--2\">\r\n            <h4 className=\"h6 mb-0\">\r\n              <a href=\"#!\">{name}</a>\r\n            </h4>\r\n            <span className={`text-${statusColor}`}>● </span>\r\n            <small>{statusLabel}</small>\r\n          </Col>\r\n          <Col className=\"col-auto\">\r\n            <Button variant=\"tertiary\" size=\"sm\">\r\n              <FontAwesomeIcon icon={icon} className=\"me-1\" /> {btnText}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Header className=\"border-bottom border-light d-flex justify-content-between\">\r\n        <h5 className=\"mb-0\">Team members</h5>\r\n        <Button variant=\"secondary\" size=\"sm\">See all</Button>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <ListGroup className=\"list-group-flush list my--3\">\r\n          {teamMembers.map(tm => <TeamMember key={`team-member-${tm.id}`} {...tm} />)}\r\n        </ListGroup>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const ProgressTrackWidget = () => {\r\n  const Progress = (props) => {\r\n    const { title, percentage, icon, color, last = false } = props;\r\n    const extraClassName = last ? \"\" : \"mb-2\";\r\n\r\n    return (\r\n      <Row className={`align-items-center ${extraClassName}`}>\r\n        <Col xs=\"auto\">\r\n          <span className={`icon icon-md text-${color}`}>\r\n            <FontAwesomeIcon icon={icon} className=\"me-1\" />\r\n          </span>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"progress-wrapper\">\r\n            <div className=\"progress-info\">\r\n              <h6 className=\"mb-0\">{title}</h6>\r\n              <small className=\"fw-bold text-dark\">\r\n                <span>{percentage} %</span>\r\n              </small>\r\n            </div>\r\n            <ProgressBar variant={color} now={percentage} min={0} max={100} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Header className=\"border-bottom border-light\">\r\n        <h5 className=\"mb-0\">Progress track</h5>\r\n      </Card.Header>\r\n      <Card.Body>\r\n\r\n        <Progress title=\"Rocket - SaaS Template\" color=\"purple\" icon={faBootstrap} percentage={34} />\r\n        <Progress title=\"Pixel - Design System\" color=\"danger\" icon={faAngular} percentage={60} />\r\n        <Progress title=\"Spaces - Listings Template\" color=\"tertiary\" icon={faVuejs} percentage={45} />\r\n        <Progress title=\"Stellar - Dashboard\" color=\"info\" icon={faReact} percentage={35} />\r\n        <Progress last title=\"Volt - Dashboard\" color=\"purple\" icon={faBootstrap} percentage={34} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const RankingWidget = () => {\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body>\r\n        <div className=\"d-flex align-items-center justify-content-between border-bottom border-light pb-3\">\r\n          <div>\r\n            <h6><FontAwesomeIcon icon={faGlobeEurope} className=\"icon icon-xs me-3\" /> Global Rank</h6>\r\n          </div>\r\n          <div>\r\n            <Card.Link href=\"#\" className=\"text-primary fw-bold\">\r\n              #755 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\r\n            </Card.Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex align-items-center justify-content-between border-bottom border-light py-3\">\r\n          <div>\r\n            <h6 className=\"mb-0\"><FontAwesomeIcon icon={faFlagUsa} className=\"icon icon-xs me-3\" />Country Rank</h6>\r\n            <div className=\"small card-stats\">\r\n              United States <FontAwesomeIcon icon={faAngleUp} className=\"icon icon-xs text-success ms-2\" />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Card.Link href=\"#top\" className=\"text-primary fw-bold\">\r\n              #32 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\r\n            </Card.Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex align-items-center justify-content-between pt-3\">\r\n          <div>\r\n            <h6 className=\"mb-0\"><FontAwesomeIcon icon={faFolderOpen} className=\"icon icon-xs me-3\" />Category Rank</h6>\r\n            <Card.Link href=\"#top\" className=\"small card-stats\">\r\n              Travel &gt; Accomodation\r\n            </Card.Link>\r\n          </div>\r\n          <div>\r\n            <Card.Link href=\"#top\" className=\"text-primary fw-bold\">\r\n              #16 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\r\n            </Card.Link>\r\n          </div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const SalesValueWidget = (props) => {\r\n  const { title, value, percentage, leadStats } = props;\r\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\r\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    <Card className=\"bg-secondary-alt shadow-sm\">\r\n      <Card.Header className=\"d-flex flex-row align-items-center flex-0\">\r\n        <div className=\"d-block\">\r\n          <h5 className=\"fw-normal mb-2\">\r\n            {title}\r\n          </h5>\r\n          <h3>{value}</h3>\r\n          {/* <small className=\"fw-bold mt-2\">\r\n            <span className=\"me-2\">Yesterday</span>\r\n            <FontAwesomeIcon icon={percentageIcon} className={`${percentageColor} me-1`} />\r\n            <span className={percentageColor}>\r\n              {percentage}%\r\n            </span>\r\n          </small> */}\r\n        </div>\r\n        {/* <div className=\"d-flex ms-auto\">\r\n          <Button variant=\"secondary\" size=\"sm\" className=\"me-2\">Month</Button>\r\n          <Button variant=\"primary\" size=\"sm\" className=\"me-3\">Week</Button>\r\n        </div> */}\r\n      </Card.Header>\r\n      <Card.Body className=\"p-2\">\r\n        <SalesValueChart leadStats={leadStats}/>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const SalesValueWidgetPhone = (props) => {\r\n  const { title, value, percentage } = props;\r\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\r\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    <Card className=\"bg-secondary-alt shadow-sm\">\r\n      <Card.Header className=\"d-md-flex flex-row align-items-center flex-0\">\r\n        <div className=\"d-block mb-3 mb-md-0\">\r\n          <h5 className=\"fw-normal mb-2\">\r\n            {title}\r\n          </h5>\r\n          <h3>${value}</h3>\r\n          <small className=\"fw-bold mt-2\">\r\n            <span className=\"me-2\">Yesterday</span>\r\n            <FontAwesomeIcon icon={percentageIcon} className={`${percentageColor} me-1`} />\r\n            <span className={percentageColor}>\r\n              {percentage}%\r\n            </span>\r\n          </small>\r\n        </div>\r\n        <div className=\"d-flex ms-auto\">\r\n          <Button variant=\"secondary\" size=\"sm\" className=\"me-2\">Month</Button>\r\n          <Button variant=\"primary\" size=\"sm\" className=\"me-3\">Week</Button>\r\n        </div>\r\n      </Card.Header>\r\n      <Card.Body className=\"p-2\">\r\n        <SalesValueChartphone />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const AcquisitionWidget = () => {\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body>\r\n        <h5>Acquisition</h5>\r\n        <p>Tells you where your visitors originated from, such as search engines, social networks or website referrals.</p>\r\n        <div className=\"d-block\">\r\n          <div className=\"d-flex align-items-center pt-3 me-5\">\r\n            <div className=\"icon icon-shape icon-sm icon-shape-danger rounded me-3\">\r\n              <FontAwesomeIcon icon={faChartBar} />\r\n            </div>\r\n            <div className=\"d-block\">\r\n              <label className=\"mb-0\">Bounce Rate</label>\r\n              <h4 className=\"mb-0\">33.50%</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex align-items-center pt-3\">\r\n            <div className=\"icon icon-shape icon-sm icon-shape-quaternary rounded me-3\">\r\n              <FontAwesomeIcon icon={faChartArea} />\r\n            </div>\r\n            <div className=\"d-block\">\r\n              <label className=\"mb-0\">Sessions</label>\r\n              <h4 className=\"mb-0\">9,567</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n","\r\nimport { faGoogle, faTwitter, faYahoo, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\nimport { faGlobeEurope, } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport USAFlag from '../assets/img/flags/united-states-of-america.svg';\r\nimport CanadaFlag from '../assets/img/flags/canada.svg';\r\nimport GermanyFlag from '../assets/img/flags/germany.svg';\r\nimport FranceFlag from '../assets/img/flags/france.svg';\r\nimport JapanFlag from '../assets/img/flags/japan.svg';\r\nimport ItalyFlag from '../assets/img/flags/italy.svg';\r\n\r\n\r\nconst pageVisits = [\r\n    { id: 1, views: 4.525, returnValue: 255, bounceRate: 42.55, pageName: \"/demo/admin/index.html\" },\r\n    { id: 2, views: 2.987, returnValue: 139, bounceRate: -43.52, pageName: \"/demo/admin/forms.html\" },\r\n    { id: 3, views: 2.844, returnValue: 124, bounceRate: -32.35, pageName: \"/demo/admin/util.html\" },\r\n    { id: 4, views: 1.220, returnValue: 55, bounceRate: 15.78, pageName: \"/demo/admin/validation.html\" },\r\n    { id: 5, views: 505, returnValue: 3, bounceRate: -75.12, pageName: \"/demo/admin/modals.html\" }\r\n];\r\n\r\nconst pageTraffic = [\r\n    { id: 1, source: \"Direct\", sourceType: \"Direct\", trafficShare: 51, change: 2.45, sourceIcon: faGlobeEurope, sourceIconColor: \"gray\" },\r\n    { id: 2, source: \"Google Search\", sourceType: \"Search / Organic\", trafficShare: 18, change: 17.67, sourceIcon: faGoogle, sourceIconColor: \"info\" },\r\n    { id: 3, source: \"youtube.com\", sourceType: \"Social\", category: \"Arts and Entertainment\", rank: 2, trafficShare: 27, sourceIcon: faYoutube, sourceIconColor: \"danger\" },\r\n    { id: 4, source: \"yahoo.com\", sourceType: \"Referral\", category: \"News and Media\", rank: 11, trafficShare: 8, change: -9.30, sourceIcon: faYahoo, sourceIconColor: \"purple\" },\r\n    { id: 5, source: \"twitter.com\", sourceType: \"Social\", category: \"Social Networks\", rank: 4, trafficShare: 4, sourceIcon: faTwitter, sourceIconColor: \"info\" }\r\n];\r\n\r\nconst pageRanking = [\r\n    { id: 1, country: \"United States\", countryImage: USAFlag, overallRank: 76, overallRankChange: -5, travelRank: 3, widgetsRank: 32, widgetsRankChange: 3 },\r\n    { id: 2, country: \"Canada\", countryImage: CanadaFlag, overallRank: 106, overallRankChange: 17, travelRank: 4, widgetsRank: 30, widgetsRankChange: 3 },\r\n    { id: 4, country: \"France\", countryImage: FranceFlag, overallRank: 112, overallRankChange: 10, travelRank: 5, widgetsRank: 34, widgetsRankChange: 7 },\r\n    { id: 5, country: \"Japan\", countryImage: JapanFlag, overallRank: 115, overallRankChange: 3, travelRank: 7, travelRankChange: 1, widgetsRank: 39, widgetsRankChange: -2 },\r\n    { id: 3, country: \"Germany\", countryImage: GermanyFlag, overallRank: 147, overallRankChange: -12, travelRank: 10, travelRankChange: -1, widgetsRank: 12, widgetsRankChange: -5 },\r\n    { id: 6, country: \"Italy\", countryImage: ItalyFlag, overallRank: 220, overallRankChange: -56, travelRank: 11, travelRankChange: -3, widgetsRank: 89, widgetsRankChange: 2 }\r\n];\r\n\r\nconst invoiceItems = [\r\n    { id: 1, item: \"Origin License\", description: \"Extended License\", price: \"999,00\", quantity: 1 },\r\n    { id: 2, item: \"Custom Services\", description: \"Instalation and Customization (cost per hour)\", price: \"150,00\", quantity: 20 },\r\n    { id: 3, item: \"Hosting\", description: \"1 year subcription\", price: \"499,00\", quantity: 1 },\r\n    { id: 4, item: \"Platinum Support\", description: \"1 year subcription 24/7\", price: \"3999,00\", quantity: 1 },\r\n];\r\n\r\nexport {\r\n    pageVisits,\r\n    pageTraffic,\r\n    pageRanking,\r\n    invoiceItems,\r\n};","\r\nimport moment from \"moment-timezone\";\r\n\r\nexport default [\r\n    {\r\n        \"invoiceNumber\": 300500,\r\n        \"status\": \"Paid\",\r\n        \"subscription\": \"Platinum Subscription Plan\",\r\n        \"price\": \"799,00\",\r\n        \"issueDate\": moment().subtract(1, \"days\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(1, \"days\").add(1, \"month\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300499,\r\n        \"status\": \"Paid\",\r\n        \"subscription\": \"Platinum Subscription Plan\",\r\n        \"price\": \"799,00\",\r\n        \"issueDate\": moment().subtract(2, \"days\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(2, \"days\").add(1, \"month\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300498,\r\n        \"status\": \"Paid\",\r\n        \"subscription\": \"Platinum Subscription Plan\",\r\n        \"price\": \"799,00\",\r\n        \"issueDate\": moment().subtract(2, \"days\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(2, \"days\").add(1, \"month\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300497,\r\n        \"status\": \"Paid\",\r\n        \"subscription\": \"Flexible Subscription Plan\",\r\n        \"price\": \"233,42\",\r\n        \"issueDate\": moment().subtract(3, \"days\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(3, \"days\").add(1, \"month\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300496,\r\n        \"status\": \"Due\",\r\n        \"subscription\": \"Gold Subscription Plan\",\r\n        \"price\": \"533,42\",\r\n        \"issueDate\": moment().subtract(1, \"day\").subtract(1, \"month\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(1, \"day\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300495,\r\n        \"status\": \"Due\",\r\n        \"subscription\": \"Gold Subscription Plan\",\r\n        \"price\": \"533,42\",\r\n        \"issueDate\": moment().subtract(3, \"days\").subtract(1, \"month\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(3, \"days\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300494,\r\n        \"status\": \"Due\",\r\n        \"subscription\": \"Flexible Subscription Plan\",\r\n        \"price\": \"233,42\",\r\n        \"issueDate\": moment().subtract(4, \"days\").subtract(1, \"month\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(4, \"days\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300493,\r\n        \"status\": \"Canceled\",\r\n        \"subscription\": \"Gold Subscription Plan\",\r\n        \"price\": \"533,42\",\r\n        \"issueDate\": moment().subtract(20, \"days\").subtract(1, \"month\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(20, \"days\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300492,\r\n        \"status\": \"Canceled\",\r\n        \"subscription\": \"Platinum Subscription Plan\",\r\n        \"price\": \"799,00\",\r\n        \"issueDate\": moment().subtract(2, \"months\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(3, \"months\").format(\"DD MMM YYYY\")\r\n    },\r\n    {\r\n        \"invoiceNumber\": 300491,\r\n        \"status\": \"Paid\",\r\n        \"subscription\": \"Platinum Subscription Plan\",\r\n        \"price\": \"799,00\",\r\n        \"issueDate\": moment().subtract(6, \"days\").format(\"DD MMM YYYY\"),\r\n        \"dueDate\": moment().subtract(6, \"days\").add(1, \"month\").format(\"DD MMM YYYY\")\r\n    }\r\n]","\r\nexport default [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"install\",\r\n        \"usage\": [\"yarn install\", \"npm install\"],\r\n        \"description\": \"This command installs a package, and any packages that it depends on.\",\r\n        \"link\": \"https://docs.npmjs.com/cli/v6/commands/npm-install\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"start\",\r\n        \"usage\": [\"yarn start\", \"npm start\"],\r\n        \"description\": \"This will determinate the start of your development server.\",\r\n        \"link\": \"https://create-react-app.dev/docs/available-scripts/#npm-start\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"name\": \"build\",\r\n        \"usage\": [\"yarn build\", \"npm build\"],\r\n        \"description\": \"Builds the app for production to the build folder. \\nIt correctly bundles React in production mode and optimizes the build \\nfor the best performance.\",\r\n        \"link\": \"https://create-react-app.dev/docs/available-scripts/#npm-run-build\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"name\": \"test\",\r\n        \"usage\": [\"yarn test\", \"npm run test\"],\r\n        \"description\": \"Runs the test watcher in an interactive mode. \\n(Note that we haven't implemented any tests - this command is by default \\nfrom the create-react-app)\",\r\n        \"link\": \"https://create-react-app.dev/docs/available-scripts/#npm-test\"\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"name\": \"eject\",\r\n        \"usage\": [\"yarn eject\", \"npm run eject\"],\r\n        \"description\": \"This command will remove the single build dependency from your project. \\nImportant! We don't recommend using this command because \\nour product may break after using it.\",\r\n        \"link\": 7\r\n    }\r\n];","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\n\r\nconst ValueChange = ({ value, suffix }) => {\r\n  const valueIcon = value < 0 ? faAngleDown : faAngleUp;\r\n  const valueTxtColor = value < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    value ? <span className={valueTxtColor}>\r\n      <FontAwesomeIcon icon={valueIcon} />\r\n      <span className=\"fw-bold ms-1\">\r\n        {Math.abs(value)}{suffix}\r\n      </span>\r\n    </span> : \"--\"\r\n  );\r\n};\r\n\r\nexport const PageVisitsTable = () => {\r\n  const TableRow = (props) => {\r\n    const { pageName, views, returnValue, bounceRate } = props;\r\n    const bounceIcon = bounceRate < 0 ? faArrowDown : faArrowUp;\r\n    const bounceTxtColor = bounceRate < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n    return (\r\n      <tr>\r\n        <th scope=\"row\">{pageName}</th>\r\n        <td>{views}</td>\r\n        <td>${returnValue}</td>\r\n        <td>\r\n          <FontAwesomeIcon icon={bounceIcon} className={`${bounceTxtColor} me-3`} />\r\n          {Math.abs(bounceRate)}%\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Header>\r\n        <Row className=\"align-items-center\">\r\n          <Col>\r\n            <h5>Page visits</h5>\r\n          </Col>\r\n          <Col className=\"text-end\">\r\n            <Button variant=\"secondary\" size=\"sm\">See all</Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Table responsive className=\"align-items-center table-flush\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Page name</th>\r\n            <th scope=\"col\">Page Views</th>\r\n            <th scope=\"col\">Page Value</th>\r\n            <th scope=\"col\">Bounce rate</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pageVisits.map(pv => <TableRow key={`page-visit-${pv.id}`} {...pv} />)}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const PageTrafficTable = () => {\r\n  const TableRow = (props) => {\r\n    const { id, source, sourceIcon, sourceIconColor, sourceType, category, rank, trafficShare, change } = props;\r\n\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Card.Link href=\"#\" className=\"text-primary fw-bold\">{id}</Card.Link>\r\n        </td>\r\n        <td className=\"fw-bold\">\r\n          <FontAwesomeIcon icon={sourceIcon} className={`icon icon-xs text-${sourceIconColor} w-30`} />\r\n          {source}\r\n        </td>\r\n        <td>{sourceType}</td>\r\n        <td>{category ? category : \"--\"}</td>\r\n        <td>{rank ? rank : \"--\"}</td>\r\n        <td>\r\n          <Row className=\"d-flex align-items-center\">\r\n            <Col xs={12} xl={2} className=\"px-0\">\r\n              <small className=\"fw-bold\">{trafficShare}%</small>\r\n            </Col>\r\n            <Col xs={12} xl={10} className=\"px-0 px-xl-1\">\r\n              <ProgressBar variant=\"primary\" className=\"progress-lg mb-0\" now={trafficShare} min={0} max={100} />\r\n            </Col>\r\n          </Row>\r\n        </td>\r\n        <td>\r\n          <ValueChange value={change} suffix=\"%\" />\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm mb-4\">\r\n      <Card.Body className=\"pb-0\">\r\n        <Table responsive className=\"table-centered table-nowrap rounded mb-0\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th className=\"border-0\">#</th>\r\n              <th className=\"border-0\">Traffic Source</th>\r\n              <th className=\"border-0\">Source Type</th>\r\n              <th className=\"border-0\">Category</th>\r\n              <th className=\"border-0\">Global Rank</th>\r\n              <th className=\"border-0\">Traffic Share</th>\r\n              <th className=\"border-0\">Change</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pageTraffic.map(pt => <TableRow key={`page-traffic-${pt.id}`} {...pt} />)}\r\n          </tbody>\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const RankingTable = () => {\r\n  const TableRow = (props) => {\r\n    const { country, countryImage, overallRank, overallRankChange, travelRank, travelRankChange, widgetsRank, widgetsRankChange } = props;\r\n\r\n    return (\r\n      <tr>\r\n        <td className=\"border-0\">\r\n          <Card.Link href=\"#\" className=\"d-flex align-items-center\">\r\n            <Image src={countryImage} className=\"image-small rounded-circle me-2\" />\r\n            <div><span className=\"h6\">{country}</span></div>\r\n          </Card.Link>\r\n        </td>\r\n        <td className=\"fw-bold border-0\">\r\n          {overallRank ? overallRank : \"-\"}\r\n        </td>\r\n        <td className=\"border-0\">\r\n          <ValueChange value={overallRankChange} />\r\n        </td>\r\n        <td className=\"fw-bold border-0\">\r\n          {travelRank ? travelRank : \"-\"}\r\n        </td>\r\n        <td className=\"border-0\">\r\n          <ValueChange value={travelRankChange} />\r\n        </td>\r\n        <td className=\"fw-bold border-0\">\r\n          {widgetsRank ? widgetsRank : \"-\"}\r\n        </td>\r\n        <td className=\"border-0\">\r\n          <ValueChange value={widgetsRankChange} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body className=\"pb-0\">\r\n        <Table responsive className=\"table-centered table-nowrap rounded mb-0\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th className=\"border-0\">Country</th>\r\n              <th className=\"border-0\">All</th>\r\n              <th className=\"border-0\">All Change</th>\r\n              <th className=\"border-0\">Travel & Local</th>\r\n              <th className=\"border-0\">Travel & Local Change</th>\r\n              <th className=\"border-0\">Widgets</th>\r\n              <th className=\"border-0\">Widgets Change</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pageRanking.map(r => <TableRow key={`ranking-${r.id}`} {...r} />)}\r\n          </tbody>\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const TransactionsTable = () => {\r\n  const totalTransactions = transactions.length;\r\n\r\n  const TableRow = (props) => {\r\n    const { invoiceNumber, subscription, price, issueDate, dueDate, status } = props;\r\n    const statusVariant = status === \"Paid\" ? \"success\"\r\n      : status === \"Due\" ? \"warning\"\r\n        : status === \"Canceled\" ? \"danger\" : \"primary\";\r\n\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <Card.Link as={Link} to={Routes.Invoice.path} className=\"fw-normal\">\r\n            {invoiceNumber}\r\n          </Card.Link>\r\n        </td>\r\n        <td>\r\n          <span className=\"fw-normal\">\r\n            {subscription}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          <span className=\"fw-normal\">\r\n            {issueDate}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          <span className=\"fw-normal\">\r\n            {dueDate}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          <span className=\"fw-normal\">\r\n            ${parseFloat(price).toFixed(2)}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          <span className={`fw-normal text-${statusVariant}`}>\r\n            {status}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          <Dropdown as={ButtonGroup}>\r\n            <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n              <span className=\"icon icon-sm\">\r\n                <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n              </span>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item>\r\n                <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n              </Dropdown.Item>\r\n              <Dropdown.Item className=\"text-danger\">\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n      <Card.Body className=\"pt-0\">\r\n        <Table hover className=\"user-table align-items-center\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"border-bottom\">#</th>\r\n              <th className=\"border-bottom\">Bill For</th>\r\n              <th className=\"border-bottom\">Issue Date</th>\r\n              <th className=\"border-bottom\">Due Date</th>\r\n              <th className=\"border-bottom\">Total</th>\r\n              <th className=\"border-bottom\">Status</th>\r\n              <th className=\"border-bottom\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map(t => <TableRow key={`transaction-${t.invoiceNumber}`} {...t} />)}\r\n          </tbody>\r\n        </Table>\r\n        <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n          <Nav>\r\n            <Pagination className=\"mb-2 mb-lg-0\">\r\n              <Pagination.Prev>\r\n                Previous\r\n              </Pagination.Prev>\r\n              <Pagination.Item active>1</Pagination.Item>\r\n              <Pagination.Item>2</Pagination.Item>\r\n              <Pagination.Item>3</Pagination.Item>\r\n              <Pagination.Item>4</Pagination.Item>\r\n              <Pagination.Item>5</Pagination.Item>\r\n              <Pagination.Next>\r\n                Next\r\n              </Pagination.Next>\r\n            </Pagination>\r\n          </Nav>\r\n          <small className=\"fw-bold\">\r\n            Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n          </small>\r\n        </Card.Footer>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const CommandsTable = () => {\r\n  const TableRow = (props) => {\r\n    const { name, usage = [], description, link } = props;\r\n\r\n    return (\r\n      <tr>\r\n        <td className=\"border-0\" style={{ width: '5%' }}>\r\n          <code>{name}</code>\r\n        </td>\r\n        <td className=\"fw-bold border-0\" style={{ width: '5%' }}>\r\n          <ul className=\"ps-0\">\r\n            {usage.map(u => (\r\n              <ol key={u} className=\"ps-0\">\r\n                <code>{u}</code>\r\n              </ol>\r\n            ))}\r\n          </ul>\r\n        </td>\r\n        <td className=\"border-0\" style={{ width: '50%' }}>\r\n          <pre className=\"m-0 p-0\">{description}</pre>\r\n        </td>\r\n        <td className=\"border-0\" style={{ width: '40%' }}>\r\n          <pre><Card.Link href={link} target=\"_blank\">Read More <FontAwesomeIcon icon={faExternalLinkAlt} className=\"ms-1\" /></Card.Link></pre>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body className=\"p-0\">\r\n        <Table responsive className=\"table-centered rounded\" style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th className=\"border-0\" style={{ width: '5%' }}>Name</th>\r\n              <th className=\"border-0\" style={{ width: '5%' }}>Usage</th>\r\n              <th className=\"border-0\" style={{ width: '50%' }}>Description</th>\r\n              <th className=\"border-0\" style={{ width: '40%' }}>Extra</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {commands.map(c => <TableRow key={`command-${c.id}`} {...c} />)}\r\n          </tbody>\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};","\r\nimport { faDesktop, faMobileAlt, faTabletAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst trafficShares = [\r\n    { id: 1, label: \"Desktop\", value: 60, color: \"secondary\", icon: faDesktop },\r\n    { id: 2, label: \"Mobile Web\", value: 30, color: \"primary\", icon: faMobileAlt },\r\n    { id: 3, label: \"Tablet Web\", value: 10, color: \"tertiary\", icon: faTabletAlt }\r\n];\r\n\r\nconst totalOrders = [\r\n    { id: 1, label: \"July\", value: [1, 5, 2, 5, 4, 3], color: \"primary\" },\r\n    { id: 2, label: \"August\", value: [2, 3, 4, 8, 1, 2], color: \"secondary\" }\r\n];\r\n\r\nexport {\r\n    trafficShares,\r\n    totalOrders\r\n};","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCashRegister, faChartLine, faCloudUploadAlt, faPlus, faRocket, faTasks, faUserShield } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../../components/Widgets\";\r\nimport { PageVisitsTable } from \"../../components/Tables\";\r\nimport { trafficShares, totalOrders } from \"../../data/charts\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <Dropdown className=\"btn-toolbar\">\r\n          <Dropdown.Toggle as={Button} variant=\"primary\" size=\"sm\" className=\"me-2\">\r\n            <FontAwesomeIcon icon={faPlus} className=\"me-2\" />New Task\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu className=\"dashboard-dropdown dropdown-menu-left mt-2\">\r\n            <Dropdown.Item className=\"fw-bold\">\r\n              <FontAwesomeIcon icon={faTasks} className=\"me-2\" /> New Task\r\n            </Dropdown.Item>\r\n            <Dropdown.Item className=\"fw-bold\">\r\n              <FontAwesomeIcon icon={faCloudUploadAlt} className=\"me-2\" /> Upload Files\r\n            </Dropdown.Item>\r\n            <Dropdown.Item className=\"fw-bold\">\r\n              <FontAwesomeIcon icon={faUserShield} className=\"me-2\" /> Preview Security\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n\r\n            <Dropdown.Item className=\"fw-bold\">\r\n              <FontAwesomeIcon icon={faRocket} className=\"text-danger me-2\" /> Upgrade to Pro\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <ButtonGroup>\r\n          <Button variant=\"outline-primary\" size=\"sm\">Share</Button>\r\n          <Button variant=\"outline-primary\" size=\"sm\">Export</Button>\r\n        </ButtonGroup>\r\n      </div>\r\n\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Sales Value\"\r\n            value=\"10,567\"\r\n            percentage={10.57}\r\n          />\r\n        </Col>\r\n        <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Sales Value\"\r\n            value=\"10,567\"\r\n            percentage={10.57}\r\n          />\r\n        </Col>\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Customers\"\r\n            title=\"345k\"\r\n            period=\"Feb 1 - Apr 1\"\r\n            percentage={18.2}\r\n            icon={faChartLine}\r\n            iconColor=\"shape-secondary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Revenue\"\r\n            title=\"$43,594\"\r\n            period=\"Feb 1 - Apr 1\"\r\n            percentage={28.4}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CircleChartWidget\r\n            title=\"Traffic Share\"\r\n            data={trafficShares} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xs={12} xl={12} className=\"mb-4\">\r\n          <Row>\r\n            <Col xs={12} xl={8} className=\"mb-4\">\r\n              <Row>\r\n                <Col xs={12} className=\"mb-4\">\r\n                  <PageVisitsTable />\r\n                </Col>\r\n\r\n                <Col xs={12} lg={6} className=\"mb-4\">\r\n                  <TeamMembersWidget />\r\n                </Col>\r\n\r\n                <Col xs={12} lg={6} className=\"mb-4\">\r\n                  <ProgressTrackWidget />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} xl={4}>\r\n              <Row>\r\n                <Col xs={12} className=\"mb-4\">\r\n                  <BarChartWidget\r\n                    title=\"Total orders\"\r\n                    value={452}\r\n                    percentage={18.2}\r\n                    data={totalOrders} />\r\n                </Col>\r\n\r\n                <Col xs={12} className=\"px-0 mb-4\">\r\n                  <RankingWidget />\r\n                </Col>\r\n\r\n                <Col xs={12} className=\"px-0\">\r\n                  <AcquisitionWidget />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faCog, faHome, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Form, Button, ButtonGroup, Breadcrumb, InputGroup, Dropdown } from '@themesberg/react-bootstrap';\r\n\r\nimport { TransactionsTable } from \"../components/Tables\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Breadcrumb className=\"d-none d-md-inline-block\" listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}>\r\n            <Breadcrumb.Item><FontAwesomeIcon icon={faHome} /></Breadcrumb.Item>\r\n            <Breadcrumb.Item>Volt</Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Transactions</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <h4>Transactions</h4>\r\n          <p className=\"mb-0\">Your web analytics dashboard template.</p>\r\n        </div>\r\n        <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n          <ButtonGroup>\r\n            <Button variant=\"outline-primary\" size=\"sm\">Share</Button>\r\n            <Button variant=\"outline-primary\" size=\"sm\">Export</Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table-settings mb-4\">\r\n        <Row className=\"justify-content-between align-items-center\">\r\n          <Col xs={8} md={6} lg={3} xl={4}>\r\n            <InputGroup>\r\n              <InputGroup.Text>\r\n                <FontAwesomeIcon icon={faSearch} />\r\n              </InputGroup.Text>\r\n              <Form.Control type=\"text\" placeholder=\"Search\" />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs={4} md={2} xl={1} className=\"ps-md-0 text-end\">\r\n            <Dropdown as={ButtonGroup}>\r\n              <Dropdown.Toggle split as={Button} variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                <span className=\"icon icon-sm icon-gray\">\r\n                  <FontAwesomeIcon icon={faCog} />\r\n                </span>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"dropdown-menu-xs dropdown-menu-right\">\r\n                <Dropdown.Item className=\"fw-bold text-dark\">Show</Dropdown.Item>\r\n                <Dropdown.Item className=\"d-flex fw-bold\">\r\n                  10 <span className=\"icon icon-small ms-auto\"><FontAwesomeIcon icon={faCheck} /></span>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"fw-bold\">20</Dropdown.Item>\r\n                <Dropdown.Item className=\"fw-bold\">30</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <TransactionsTable />\r\n    </>\r\n  );\r\n};\r\n","\r\nimport React, { useState } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\n\r\nexport const GeneralInfoForm = () => {\r\n  const [birthday, setBirthday] = useState(\"\");\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your first name\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Also your last name\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <h5 className=\"my-4\">Address</h5>\r\n          <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save All</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBoxOpen, faCartArrowDown, faChartPie, faChevronDown, faClipboard, faCommentDots, faFileAlt, faPlus, faRocket, faStore } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button, Dropdown } from '@themesberg/react-bootstrap';\r\nimport { ChoosePhotoWidget, ProfileCardWidget } from \"../components/Widgets\";\r\nimport { GeneralInfoForm } from \"../components/Forms\";\r\n\r\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <Dropdown>\r\n          <Dropdown.Toggle as={Button} variant=\"secondary\" className=\"text-dark me-2\">\r\n            <FontAwesomeIcon icon={faPlus} className=\"me-2\" />\r\n            <span>New</span>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu className=\"dashboard-dropdown dropdown-menu-left mt-2\">\r\n            <Dropdown.Item>\r\n              <FontAwesomeIcon icon={faFileAlt} className=\"me-2\" /> Document\r\n            </Dropdown.Item>\r\n            <Dropdown.Item>\r\n              <FontAwesomeIcon icon={faCommentDots} className=\"me-2\" /> Message\r\n            </Dropdown.Item>\r\n            <Dropdown.Item>\r\n              <FontAwesomeIcon icon={faBoxOpen} className=\"me-2\" /> Product\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n\r\n            <Dropdown.Item>\r\n              <FontAwesomeIcon icon={faRocket} className=\"text-danger me-2\" /> Subscription Plan\r\n              </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <div className=\"d-flex\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle as={Button} variant=\"primary\">\r\n              <FontAwesomeIcon icon={faClipboard} className=\"me-2\" /> Reports\r\n              <span className=\"icon icon-small ms-1\"><FontAwesomeIcon icon={faChevronDown} /></span>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"dashboard-dropdown dropdown-menu-left mt-1\">\r\n              <Dropdown.Item>\r\n                <FontAwesomeIcon icon={faBoxOpen} className=\"me-2\" /> Products\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <FontAwesomeIcon icon={faStore} className=\"me-2\" /> Customers\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <FontAwesomeIcon icon={faCartArrowDown} className=\"me-2\" /> Orders\r\n              </Dropdown.Item>\r\n              <Dropdown.Item>\r\n                <FontAwesomeIcon icon={faChartPie} className=\"me-2\" /> Console\r\n              </Dropdown.Item>\r\n\r\n              <Dropdown.Divider />\r\n\r\n              <Dropdown.Item>\r\n                <FontAwesomeIcon icon={faRocket} className=\"text-success me-2\" /> All Reports\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n\r\n      <Row>\r\n        <Col xs={12} xl={8}>\r\n          <GeneralInfoForm />\r\n        </Col>\r\n\r\n        <Col xs={12} xl={4}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <ProfileCardWidget />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <ChoosePhotoWidget\r\n                title=\"Select profile photo\"\r\n                photo={Profile3}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Breadcrumb } from '@themesberg/react-bootstrap';\r\n\r\nimport { PageTrafficTable, RankingTable } from \"../../components/Tables\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-xl-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-xl-0\">\r\n          <Breadcrumb className=\"d-none d-md-inline-block\" listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}>\r\n            <Breadcrumb.Item><FontAwesomeIcon icon={faHome} /></Breadcrumb.Item>\r\n            <Breadcrumb.Item>Tables</Breadcrumb.Item>\r\n            <Breadcrumb.Item active>Bootstrap tables</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <h4>Bootstrap tables</h4>\r\n          <p className=\"mb-0\">\r\n            Dozens of reusable components built to provide buttons, alerts, popovers, and more.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <PageTrafficTable />\r\n      <RankingTable />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebookF, faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, FormCheck, Container, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link as={Link} to={Routes.DashboardOverview.path} className=\"text-gray-700\">\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">Sign in to our platform</h3>\r\n                </div>\r\n                <Form className=\"mt-4\">\r\n                  <Form.Group id=\"email\" className=\"mb-4\">\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control autoFocus required type=\"email\" placeholder=\"example@company.com\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Group id=\"password\" className=\"mb-4\">\r\n                      <Form.Label>Your Password</Form.Label>\r\n                      <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" />\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                      <Form.Check type=\"checkbox\">\r\n                        <FormCheck.Input id=\"defaultCheck5\" className=\"me-2\" />\r\n                        <FormCheck.Label htmlFor=\"defaultCheck5\" className=\"mb-0\">Remember me</FormCheck.Label>\r\n                      </Form.Check>\r\n                      <Card.Link className=\"small text-end\">Lost password?</Card.Link>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Sign in\r\n                  </Button>\r\n                </Form>\r\n\r\n                <div className=\"mt-3 mb-4 text-center\">\r\n                  <span className=\"fw-normal\">or login with</span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-facebook me-2\">\r\n                    <FontAwesomeIcon icon={faFacebookF} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-twitter me-2\">\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pil text-dark\">\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n                  <span className=\"fw-normal\">\r\n                    Not registered?\r\n                    <Card.Link as={Link} to={Routes.Signup.path} className=\"fw-bold\">\r\n                      {` Create account `}\r\n                    </Card.Link>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport ReactLogo from \"../assets/img/technologies/loader.png\";\r\n\r\nexport default (props) => {\r\n\r\n  const { show } = props;\r\n\r\n  return (\r\n    <div className={`preloader bg-soft flex-column justify-content-center align-items-center ${show ? \"\" : \"show\"}`}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n    </div>\r\n  );\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  ADD_USER_REQUEST,\r\n  ADD_USER_FAIL,\r\n  ADD_USER_SUCCESS,\r\n  MANAGERS_DETAILS_FAIL,\r\n  MANAGERS_DETAILS_REQUEST,\r\n  MANAGERS_DETAILS_SUCCESS,\r\n  TEAMLEADS_DETAILS_REQUEST,\r\n  TEAMLEADS_DETAILS_SUCCESS,\r\n  TEAMLEADS_DETAILS_FAIL,\r\n  TEAMLEAD_CONSULTANTS_DETAILS_REQUEST,\r\n  TEAMLEAD_CONSULTANTS_DETAILS_SUCCESS,\r\n  TEAMLEAD_CONSULTANTS_DETAILS_FAIL,\r\n  MANAGER_CONSULTANTS_DETAILS_REQUEST,\r\n  MANAGER_CONSULTANTS_DETAILS_SUCCESS,\r\n  MANAGER_CONSULTANTS_DETAILS_FAIL,\r\n  MANAGER_TEAMLEADS_DETAILS_REQUEST,\r\n  MANAGER_TEAMLEADS_DETAILS_SUCCESS,\r\n  MANAGER_TEAMLEADS_DETAILS_FAIL,\r\n  ASMS_DETAILS_REQUEST,\r\n  ASMS_DETAILS_SUCCESS,\r\n  ASMS_DETAILS_FAIL,\r\n  CONSULTANTS_DETAILS_REQUEST,\r\n  CONSULTANTS_DETAILS_SUCCESS,\r\n  CONSULTANTS_DETAILS_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_DETAIL_REQUEST,\r\n  USER_DETAIL_SUCCESS,\r\n  USER_DETAIL_FAIL,\r\n  CPM_LIST_REQUEST,\r\n  CPM_LIST_SUCCESS,\r\n  CPM_LIST_FAIL,\r\n} from '../constants/usersConstants'\r\n\r\n/* Login */\r\nexport const login = (email, password, addToast) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n      })\r\n  \r\n   \r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/users/login',\r\n        { email, password },\r\n        config\r\n      )\r\n\r\n      if (addToast) {\r\n        addToast(\"Login Successful\", { appearance: \"success\", autoDismiss: true });\r\n      }\r\n  \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  /* Logout */\r\n  export const logout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n  }\r\n\r\n  /* Update User */\r\n  export const updateUser = (user, addToast) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/users/${user._id}`,\r\n        user,\r\n        config\r\n      )\r\n\r\n      if (addToast) {\r\n        addToast(\"User Profile Updated\", { appearance: \"success\", autoDismiss: true });\r\n      }\r\n\r\n      dispatch({ \r\n        type: USER_UPDATE_SUCCESS \r\n      })\r\n      \r\n    } catch (error) {\r\n      const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Add Consultant */\r\nexport const addUser = (userData, addToast) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ADD_USER_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/users/register',\r\n        userData,\r\n        config\r\n      )\r\n\r\n      if (addToast) {\r\n        addToast(\"User Added\", { appearance: \"success\", autoDismiss: true });\r\n      }\r\n  \r\n      dispatch({\r\n        type: ADD_USER_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      if (addToast) {\r\n        addToast(\"Not successful\", { appearance: \"error\", autoDismiss: true });\r\n      }\r\n      dispatch({\r\n        type: ADD_USER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /* Fetch Managers */\r\nexport const managerList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MANAGERS_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      '/api/users/manager',\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: MANAGERS_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MANAGERS_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n  /* Fetch Managers */\r\n  export const cpmList = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CPM_LIST_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(\r\n        '/api/users/cpm',\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: CPM_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: CPM_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n /* Fetch Team Leads */\r\n export const teamLeadList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TEAMLEADS_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      '/api/users/teamlead',\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: TEAMLEADS_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TEAMLEADS_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch ASMs */\r\n export const asmList = (email, password) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ASMS_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      '/api/users/teamlead',\r\n      {email, password},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ASMS_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ASMS_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch Consultants */\r\nexport const consultantList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CONSULTANTS_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      '/api/users/consultant',\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: CONSULTANTS_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CONSULTANTS_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Delete user */\r\nexport const deleteUser = (id, addToast) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    if (addToast) {\r\n      addToast(\"User Deleted\", { appearance: \"success\", autoDismiss: true });\r\n    }\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      console.log('Not authorized, token failed')\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch User List */\r\nexport const fetchUserList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      '/api/users',\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch User List */\r\nexport const fetchUserDetail = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAIL_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/users/${id}`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_DETAIL_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAIL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const teamLeadsUnderManager = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MANAGER_TEAMLEADS_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/manager/teamLeads/${id}`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: MANAGER_TEAMLEADS_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MANAGER_TEAMLEADS_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const consultantsUnderTeamLead = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TEAMLEAD_CONSULTANTS_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/manager/teamLeads/${id}`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: TEAMLEAD_CONSULTANTS_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TEAMLEAD_CONSULTANTS_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const consultantsUnderManager = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: MANAGER_CONSULTANTS_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `/api/manager/consultants/${id}`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: MANAGER_CONSULTANTS_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MANAGER_CONSULTANTS_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n ","/* Login */\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n/* Add User */\r\nexport const ADD_USER_REQUEST = 'ADD_USER_REQUEST'\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS'\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL'\r\nexport const ADD_USER_RESET = 'ADD_USER_RESET'\r\n\r\n/* Add Manager */\r\nexport const ADD_MANAGER_REQUEST = 'ADD_MANAGER_REQUEST'\r\nexport const ADD_MANAGER_SUCCESS = 'ADD_MANAGER_SUCCESS'\r\nexport const ADD_MANAGER_FAIL = 'ADD_MANAGER_FAIL'\r\n\r\n/* Add TeamLead */\r\nexport const ADD_TEAMLEAD_REQUEST = 'ADD_TEAMLEAD_REQUEST'\r\nexport const ADD_TEAMLEAD_SUCCESS = 'ADD_TEAMLEAD_SUCCESS'\r\nexport const ADD_TEAMLEAD_FAIL = 'ADD_TEAMLEAD_FAIL'\r\n\r\n/* Add CHANNEL PATNER MANAGER */\r\nexport const ADD_CPM_REQUEST = 'ADD_CPM_REQUEST'\r\nexport const ADD_CPM_SUCCESS = 'ADD_CPM_SUCCESS'\r\nexport const ADD_CPM_FAIL = 'ADD_CPM_FAIL'\r\n\r\n/* Add CHANNEL PATNER */\r\nexport const ADD_CP_REQUEST = 'ADD_CP_REQUEST'\r\nexport const ADD_CP_SUCCESS = 'ADD_CP_SUCCESS'\r\nexport const ADD_CP_FAIL = 'ADD_CP_FAIL'\r\n\r\n/* Managers details */\r\nexport const MANAGERS_DETAILS_REQUEST = 'MANAGERS_DETAILS_REQUEST'\r\nexport const MANAGERS_DETAILS_SUCCESS = 'MANAGERS_DETAILS_SUCCESS'\r\nexport const MANAGERS_DETAILS_FAIL = 'MANAGERS_DETAILS_FAIL'\r\n\r\n/* TeamLeads details */\r\nexport const TEAMLEADS_DETAILS_REQUEST = 'TEAMLEADS_DETAILS_REQUEST'\r\nexport const TEAMLEADS_DETAILS_SUCCESS = 'TEAMLEADS_DETAILS_SUCCESS'\r\nexport const TEAMLEADS_DETAILS_FAIL = 'TEAMLEADS_DETAILS_FAIL'\r\n\r\n/* ASMs details */\r\nexport const ASMS_DETAILS_REQUEST = 'ASMS_DETAILS_REQUEST'\r\nexport const ASMS_DETAILS_SUCCESS = 'ASMS_DETAILS_SUCCESS'\r\nexport const ASMS_DETAILS_FAIL = 'ASMS_DETAILS_FAIL'\r\n\r\n/* Consultant details */\r\nexport const CONSULTANTS_DETAILS_REQUEST = 'CONSULTANTS_DETAILS_REQUEST'\r\nexport const CONSULTANTS_DETAILS_SUCCESS = 'CONSULTANTS_DETAILS_SUCCESS'\r\nexport const CONSULTANTS_DETAILS_FAIL = 'CONSULTANTS_DETAILS_FAIL'\r\n\r\n/* Remove User */\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n/* Update User */\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\n\r\n/* User List */\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\n\r\n/* User List */\r\nexport const USER_DETAIL_REQUEST = 'USER_DETAIL_REQUEST'\r\nexport const USER_DETAIL_SUCCESS = 'USER_DETAIL_SUCCESS'\r\nexport const USER_DETAIL_FAIL = 'USER_DETAIL_FAIL'\r\n\r\n/* TeamLeads under Manager details */\r\nexport const MANAGER_TEAMLEADS_DETAILS_REQUEST = 'MANAGER_TEAMLEADS_DETAILS_REQUEST'\r\nexport const MANAGER_TEAMLEADS_DETAILS_SUCCESS = 'MANAGER_TEAMLEADS_DETAILS_SUCCESS'\r\nexport const MANAGER_TEAMLEADS_DETAILS_FAIL = 'MANAGER_TEAMLEADS_DETAILS_FAIL'\r\n\r\n/* Consultants under TeamLead details */\r\nexport const TEAMLEAD_CONSULTANTS_DETAILS_REQUEST = 'TEAMLEAD_CONSULTANTS_DETAILS_REQUEST'\r\nexport const TEAMLEAD_CONSULTANTS_DETAILS_SUCCESS = 'TEAMLEAD_CONSULTANTS_DETAILS_SUCCESS'\r\nexport const TEAMLEAD_CONSULTANTS_DETAILS_FAIL = 'TEAMLEAD_CONSULTANTS_DETAILS_FAIL'\r\n\r\n/* Consultants under Manager details */\r\nexport const MANAGER_CONSULTANTS_DETAILS_REQUEST = 'MANAGER_CONSULTANTS_DETAILS_REQUEST'\r\nexport const MANAGER_CONSULTANTS_DETAILS_SUCCESS = 'MANAGER_CONSULTANTS_DETAILS_SUCCESS'\r\nexport const MANAGER_CONSULTANTS_DETAILS_FAIL = 'MANAGER_CONSULTANTS_DETAILS_FAIL'\r\n\r\n/* User List */\r\nexport const CPM_LIST_REQUEST = 'CPM_LIST_REQUEST'\r\nexport const CPM_LIST_SUCCESS = 'CPM_LIST_SUCCESS'\r\nexport const CPM_LIST_FAIL = 'CPM_LIST_FAIL'","import React, {useState, useEffect} from \"react\";\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebookF, faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, FormCheck, Container, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport BgImage from \"../assets/img/illustrations/signin.svg\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport {login} from '../actions/userActions';\r\n\r\n\r\n\r\n\r\nexport default ({history}) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n\r\n  if(userInfo){\r\n   \r\n    if(userInfo.isAdmin && userInfo.role === 'Admin') {\r\n      history.push('/dashboard')\r\n      }\r\n    else if(userInfo.role === \"Manager\"){\r\n      history.push('/manager/dashboard')\r\n    }else if(userInfo.role === \"TeamLead\"){\r\n      history.push('/teamlead/dashboard')\r\n    }else if(userInfo.role === \"Consultant\"){\r\n      history.push('/consultant/dashboard')\r\n    }else if(userInfo.role === \"CPM\"){\r\n      history.push('/cpmanager/dashboard')\r\n    }else if(userInfo.role === \"LeadAssigner\"){\r\n      history.push('/leadassigner/bulkleads')\r\n    }\r\n  }\r\n}, [history, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n  \r\n\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n        {loading && <Preloader />}\r\n          {/* <p className=\"text-center\">\r\n            <Card.Link as={Link} to={Routes.DashboardOverview.path} className=\"text-gray-700\">\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\r\n            </Card.Link>\r\n          </p> */}\r\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0 mt-3\">Sign in to our platform</h3>\r\n                </div>\r\n                <Form className=\"mt-4\" onSubmit={submitHandler}>\r\n                  <Form.Group id=\"email\" className=\"mb-4\">\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control autoFocus required type=\"email\" placeholder=\"example@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Group id=\"password\" className=\"mb-4\">\r\n                      <Form.Label>Your Password</Form.Label>\r\n                      <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                    \r\n                    {/* <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                      <Form.Check type=\"checkbox\">\r\n                        <FormCheck.Input id=\"defaultCheck5\" className=\"me-2\" />\r\n                        <FormCheck.Label htmlFor=\"defaultCheck5\" className=\"mb-0\">Remember me</FormCheck.Label>\r\n                      </Form.Check>\r\n                      <Card.Link className=\"small text-end\">Lost password?</Card.Link>\r\n                    </div> */}\r\n                  </Form.Group>\r\n                  {error && <span>\"Invalid emailId or password\"</span>}\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100 mt-3\">\r\n                    Sign in\r\n                  </Button>\r\n                </Form>\r\n                <div className=\"my-5 pt-1\"></div>\r\n\r\n                {/* <div className=\"mt-3 mb-4 text-center\">\r\n                  <span className=\"fw-normal\">or login with</span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-facebook me-2\">\r\n                    <FontAwesomeIcon icon={faFacebookF} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-twitter me-2\">\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pil text-dark\">\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n                  <span className=\"fw-normal\">\r\n                    Not registered?\r\n                    <Card.Link as={Link} to={Routes.Signup.path} className=\"fw-bold\">\r\n                      {` Create account `}\r\n                    </Card.Link>\r\n                  </span>\r\n                </div> */}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React, {useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCashRegister, faChartLine, faCloudUploadAlt, faPlus, faRocket, faTasks, faUserShield } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport { PageVisitsTable } from \"../components/Tables\";\r\nimport { trafficShares, totalOrders } from \"../data/charts\";\r\n\r\nexport default ({history}) => {\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  useEffect(()=>{\r\n    if (user && user.isAdmin) {\r\n     \r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Sales Value\"\r\n            value=\"10,567\"\r\n            percentage={10.57}\r\n          />\r\n        </Col>\r\n        <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Sales Value\"\r\n            value=\"10,567\"\r\n            percentage={10.57}\r\n          />\r\n        </Col>\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Customers\"\r\n            title=\"345k\"\r\n            period=\"Feb 1 - Apr 1\"\r\n            percentage={18.2}\r\n            icon={faChartLine}\r\n            iconColor=\"shape-secondary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Revenue\"\r\n            title=\"$43,594\"\r\n            period=\"Feb 1 - Apr 1\"\r\n            percentage={28.4}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CircleChartWidget\r\n            title=\"Traffic Share\"\r\n            data={trafficShares} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xs={12} xl={12} className=\"mb-4\">\r\n          <Row>\r\n            <Col xs={12} xl={8} className=\"mb-4\">\r\n              <Row>\r\n                <Col xs={12} className=\"mb-4\">\r\n                  <PageVisitsTable />\r\n                </Col>\r\n\r\n                <Col xs={12} lg={6} className=\"mb-4\">\r\n                  <TeamMembersWidget />\r\n                </Col>\r\n\r\n                <Col xs={12} lg={6} className=\"mb-4\">\r\n                  <ProgressTrackWidget />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} xl={4}>\r\n              <Row>\r\n                <Col xs={12} className=\"mb-4\">\r\n                  <BarChartWidget\r\n                    title=\"Total orders\"\r\n                    value={452}\r\n                    percentage={18.2}\r\n                    data={totalOrders} />\r\n                </Col>\r\n\r\n                <Col xs={12} className=\"px-0 mb-4\">\r\n                  <RankingWidget />\r\n                </Col>\r\n\r\n                <Col xs={12} className=\"px-0\">\r\n                  <AcquisitionWidget />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n    PROJECT_LIST_REQUEST,\r\n    PROJECT_LIST_SUCCESS,\r\n    PROJECT_LIST_FAIL,\r\n    PROJECT_DETAILS_REQUEST,\r\n    PROJECT_DETAILS_SUCCESS,\r\n    PROJECT_DETAILS_FAIL,\r\n    PROJECT_UPDATE_REQUEST,\r\n    PROJECT_UPDATE_SUCCESS,\r\n    PROJECT_UPDATE_FAIL,\r\n    PROJECT_ADD_REQUEST,\r\n    PROJECT_ADD_SUCCESS,\r\n    PROJECT_ADD_FAIL,\r\n    PROJECT_DELETE_REQUEST,\r\n    PROJECT_DELETE_SUCCESS,\r\n    PROJECT_DELETE_FAIL\r\n} from '../constants/projectsConstants';\r\n\r\n\r\n/* Fetch Projects */\r\nexport const projects = () => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: PROJECT_LIST_REQUEST,\r\n      })\r\n\r\n      \r\n  \r\n      const { data } = await axios.get(\r\n        '/api/projects'\r\n      )\r\n  \r\n      dispatch({\r\n        type: PROJECT_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: PROJECT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  /* Add Project */\r\nexport const addProject = (project) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_ADD_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      `/api/projects`,\r\n      project,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PROJECT_ADD_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_ADD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n  /* Update Projects */\r\nexport const updateProject = (project) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    console.log(project)\r\n    const { data } = await axios.put(\r\n      `/api/projects/${project._id}`,\r\n      project,\r\n      config\r\n\r\n    )\r\n\r\n    dispatch({\r\n      type: PROJECT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Get Project details */\r\nexport const getProjectDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    \r\n\r\n    const { data } = await axios.get(\r\n      `/api/projects/${id}`,config\r\n    )\r\n\r\n    dispatch({\r\n      type: PROJECT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Delete Project by id */\r\nexport const deleteProject= (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n    }\r\n\r\n\r\n    \r\n\r\n    const { data } = await axios.delete(\r\n      `/api/projects/${id}`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PROJECT_DELETE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","/* Managers details */\r\nexport const PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST'\r\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS'\r\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL'\r\n\r\nexport const PROJECT_DETAILS_REQUEST = 'PROJECT_DETAILS_REQUEST'\r\nexport const PROJECT_DETAILS_SUCCESS = 'PROJECT_DETAILS_SUCCESS'\r\nexport const PROJECT_DETAILS_FAIL = 'PROJECT_DETAILS_FAIL'\r\n\r\nexport const PROJECT_UPDATE_REQUEST = 'PROJECT_UPDATE_REQUEST'\r\nexport const PROJECT_UPDATE_SUCCESS = 'PROJECT_UPDATE_SUCCESS'\r\nexport const PROJECT_UPDATE_FAIL = 'PROJECT_UPDATE_FAIL'\r\n\r\nexport const PROJECT_ADD_REQUEST = 'PROJECT_ADD_REQUEST'\r\nexport const PROJECT_ADD_SUCCESS = 'PROJECT_ADD_SUCCESS'\r\nexport const PROJECT_ADD_FAIL = 'PROJECT_ADD_FAIL'\r\n\r\nexport const PROJECT_DELETE_REQUEST = 'PROJECT_DELETE_REQUEST'\r\nexport const PROJECT_DELETE_SUCCESS = 'PROJECT_DELETE_SUCCESS'\r\nexport const PROJECT_DELETE_FAIL = 'PROJECT_DELETE_FAIL'","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport { addUser } from \"./../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\n\r\n\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    \r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n \r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addConsultant = useSelector((state) => state.addConsultant)\r\n    const { loading, error, userInfo } = addConsultant\r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n  \r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      if (userInfo) {\r\n        history.push('/')\r\n      }\r\n    }, [history, userData])\r\n\r\n    useEffect(() => {\r\n      if(projectInfo){\r\n      setMainProject(projectInfo[0].mainProject)\r\n      setProjectId(projectInfo[0].projectId)\r\n      }\r\n    }, [projectInfo])\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.password= password,\r\n            userData.role= \"consultant\",\r\n            userData.manager= \"null\",\r\n            userData.teamLead= \"null\",\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            userData.project={\r\n              mainProject : mainProject,\r\n              projectId : projectId\r\n          },\r\n          userData.setMilestone={\r\n            bookings : 0,\r\n            leads : 0,\r\n            siteVisits: 0\r\n        }\r\n        )\r\n        dispatch(addUser(userData))\r\n        window.location.reload();\r\n    }\r\n\r\n    const projectHandler = (e) => {\r\n      console.log(e)\r\n      setMainProject(e.mainProject)\r\n      setProjectId(e.projectId)\r\n      console.log(mainProject, projectId)\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={submitHandler}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n             <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Project Assign</Form.Label>\r\n                <Form.Select required defaultValue={mainProject ? mainProject : ' '} onChange={(e) => projectHandler(e.target.value)}>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          \r\n\r\n        {/*  <h5 className=\"my-4\">Address</h5>\r\n           <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n           */}\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup, Alert } from '@themesberg/react-bootstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\nimport { addUser, managerList, teamLeadList, teamLeadsUnderManager} from \"../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    // const [underManager, setUnderManager] = useState('')\r\n    // const [underTeamLead, setUnderTeamLead] = useState('')\r\n    const [role, setRole] = useState('')\r\n    // const [mainProject, setMainProject] = useState('')\r\n \r\n    const { addToast } = useToasts();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    const { loading, error, managers } = fetchManagers\r\n\r\n    const teamLeads = useSelector((state) => state.teamLeadsUnderManager)\r\n    const { teamleadList : teamlead } = teamLeads\r\n    \r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n  \r\n    // useEffect(() => {\r\n    //   if (userInfo) {\r\n    //     history.push('/')\r\n    //   }\r\n    // }, [history, userData])\r\n\r\n    // useEffect(()=>{\r\n    //   if(!managers){\r\n    //     dispatch(managerList())\r\n    //   }\r\n    //   if(underManager){\r\n    //     dispatch(teamLeadsUnderManager(underManager))\r\n    //   }\r\n    //   if(!projectInfo){\r\n    //     dispatch(projects())\r\n    //   }\r\n    //   if(underManager){\r\n    //     setMainProject(managers.filter(m => m._id === underManager)[0].project.mainProject)\r\n    //   }\r\n    // },[underManager, role ])\r\n\r\n    // useEffect(() => {\r\n    //   if(projectInfo){\r\n    //   setMainProject(projectInfo[0].mainProject)\r\n    //   setProjectId(projectInfo[0].projectId)\r\n    //   }\r\n    // }, [projectInfo])\r\n\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.password= password,\r\n            userData.role= role,\r\n            // userData.managerId= underManager? underManager : null,\r\n            // userData.teamLeadId= underTeamLead ? underTeamLead : null,\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            // userData.project=mainProject? mainProject : null,\r\n          userData.setMilestone = {\r\n            bookings: 0,\r\n            leads: 0,\r\n            siteVisits: 0\r\n          }\r\n        )\r\n        dispatch(addUser(userData, addToast))\r\n        setName('')\r\n        setEmail('')\r\n        setMobile('')\r\n        setUserData({})\r\n        setRole('')\r\n        // setMainProject('')\r\n        // setUnderManager('')\r\n        // setUnderTeamLead('')\r\n        setPassword('')\r\n        window.location.reload();\r\n    }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={submitHandler}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n             {/* <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Project Assign</Form.Label>\r\n                <Form.Select defaultValue={mainProject ? mainProject : ' '} onChange={(e) => projectHandler(e.target.value)}>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col> */}\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group className=\"mb-2\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Select id=\"state\" onChange={e=> setRole(e.target.value)} required>\r\n                <option>Select</option>\r\n                  <option value=\"Manager\">Manager</option>\r\n                  <option value=\"TeamLead\">TeamLead</option>\r\n                  {/* <option value=\"ASM\">ASM</option> */}\r\n                  <option value=\"Consultant\">Consultant</option>\r\n                  <option value=\"CPM\">Channel Partner Manager</option>\r\n                  {/* <option value=\"cp\">Channel Partner</option> */}\r\n                  <option value=\"LeadAssigner\">Lead Assigner</option>\r\n                </Form.Select>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n           {/* <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Manager</Form.Label>\r\n\r\n                  <Form.Select required id=\"state\" defaultValue={underManager} onChange={e=> setUnderManager(e.target.value)}  disabled={(role==='Consultant' || role==='TeamLead') ? false:true}>\r\n\r\n                <option>Select</option>\r\n                <>\r\n                  {managers && managers.map((manager,i)=>{return (<option key={i} value={manager._id}>{manager.name}</option>)})}\r\n                  </>\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>TeamLead</Form.Label>\r\n\r\n                  <Form.Select required id=\"state\" defaultValue={underTeamLead} onChange={e=> setUnderTeamLead(e.target.value)} disabled={role==='Consultant'? false:true}>\r\n                  <option>Select</option>\r\n                  {(teamlead && teamlead.teamLeadsList.length>0)&& teamlead.teamLeadsList.map((lead,i)=><option value={lead.userId._id}>{lead.userId.name}</option>)}\r\n\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Project</Form.Label>\r\n                  <Form.Select id=\"state\" defaultValue={mainProject} onChange={e=> setMainProject(e.target.value)} required disabled={(role==='Manager' || role==='CPM') ? false:true}>\r\n                  <option>Select</option>\r\n                  {projectInfo && projectInfo.map((pro,i)=><option key={i} value={pro._id}>{pro.mainProject}</option>)}\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>  */}\r\n\r\n          \r\n\r\n        {/*  <h5 className=\"my-4\">Address</h5>\r\n           <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n           */}\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport { addUser } from \"./../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\n\r\n\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    // const [mainProject, setMainProject] = useState('')\r\n    // const [projectId, setProjectId] = useState('')\r\n \r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addConsultant = useSelector((state) => state.addConsultant)\r\n    const { loading, error, userInfo } = addConsultant\r\n\r\n    // const Projects = useSelector((state) => state.fetchProjects)\r\n    // const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n  \r\n    useEffect(() => {\r\n      if (userInfo) {\r\n        history.push('/')\r\n      }\r\n    }, [history, userData])\r\n\r\n    // useEffect(() => {\r\n    //   if(projectInfo){\r\n    //   setMainProject(projectInfo[0].mainProject)\r\n    //   setProjectId(projectInfo[0].projectId)\r\n    //   }\r\n    // }, [projectInfo])\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.password= password,\r\n            userData.role= \"teamlead\",\r\n            userData.manager= \"null\",\r\n            userData.teamLead= \"null\",\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            userData.project={\r\n              mainProject : \"null\",\r\n              projectId : \"null\"\r\n          },\r\n          userData.setMilestone={\r\n            bookings : 0,\r\n            leads : 0,\r\n            siteVisits: 0\r\n        }\r\n        )\r\n        dispatch(addUser(userData))\r\n        window.location.reload();\r\n    }\r\n\r\n    // const projectHandler = (e) => {\r\n    //   console.log(e)\r\n    //   setMainProject(e.mainProject)\r\n    //   setProjectId(e.projectId)\r\n    //   console.log(mainProject, projectId)\r\n    // }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={submitHandler}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n             {/* <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Project Assign</Form.Label>\r\n                <Form.Select defaultValue={mainProject ? mainProject : ' '} onChange={(e) => projectHandler(e.target.value)}>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col> */}\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          \r\n\r\n        {/*  <h5 className=\"my-4\">Address</h5>\r\n           <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n           */}\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n  LEAD_ADD_REQUEST,\r\n  LEAD_ADD_FAIL,\r\n  LEAD_ADD_SUCCESS,\r\n  LEAD_UPDATE_REQUEST,\r\n  LEAD_UPDATE_SUCCESS,\r\n  LEAD_UPDATE_FAIL,\r\n  LEAD_UPDATE_RESET,\r\n  LEAD_DETAILS_REQUEST,\r\n  LEAD_DETAILS_SUCCESS,\r\n  LEAD_DETAILS_FAIL,\r\n  LEAD_DETAILS_RESET,\r\n  LEAD_LIST_REQUEST,\r\n  LEAD_LIST_SUCCESS,\r\n  LEAD_LIST_FAIL,\r\n  CONSULTANT_LEAD_LIST_REQUEST,\r\n  CONSULTANT_LEAD_LIST_SUCCESS,\r\n  CONSULTANT_LEAD_LIST_FAIL,\r\n  TEAMLEAD_LEAD_LIST_REQUEST,\r\n  TEAMLEAD_LEAD_LIST_SUCCESS,\r\n  TEAMLEAD_LEAD_LIST_FAIL,\r\n  MANAGER_LEAD_LIST_REQUEST,\r\n  MANAGER_LEAD_LIST_SUCCESS,\r\n  MANAGER_LEAD_LIST_FAIL,\r\n  LEAD_DELETE_REQUEST,\r\n  LEAD_DELETE_SUCCESS,\r\n  LEAD_DELETE_FAIL,\r\n  BULK_UPLOAD_REQUEST,\r\n  BULK_UPLOAD_FAIL,\r\n  BULK_UPLOAD_SUCCESS,\r\n\r\n} from '../constants/leadsConstants'\r\n\r\n/* Add Lead */\r\nexport const addLeadData = (leadData) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: LEAD_ADD_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/leads',\r\n        leadData,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: LEAD_ADD_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: LEAD_ADD_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Update Lead */\r\nexport const updateLeadData = (lead) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: LEAD_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/leads/${lead._id}`,\r\n        lead,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: LEAD_UPDATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      dispatch({\r\n        type: LEAD_UPDATE_RESET\r\n      })\r\n\r\n      dispatch({\r\n        type: LEAD_DETAILS_RESET\r\n      })\r\n      // dispatch({ type: LEAD_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      // if (message === 'Not authorized, token failed') {\r\n      //   dispatch(logout())\r\n      // }\r\n      dispatch({\r\n        type: LEAD_UPDATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Fetch a Lead Details */\r\nexport const fetchleadDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: LEAD_DETAILS_REQUEST })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/leads/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: LEAD_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LEAD_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Fetch all Leads */\r\nexport const fetchLeadList = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAD_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/leads`)\r\n\r\n    dispatch({\r\n      type: LEAD_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LEAD_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Delete lead */\r\nexport const deleteLead = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: LEAD_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/leads/${id}`, config)\r\n\r\n    dispatch({ type: LEAD_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      console.log('Not authorized, token failed')\r\n    }\r\n    dispatch({\r\n      type: LEAD_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Add Bulk Leads */\r\nexport const addbulkLeads = (leadData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: BULK_UPLOAD_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/leads/bulkupload',\r\n      leadData,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: BULK_UPLOAD_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: BULK_UPLOAD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch consultant Leads */\r\nexport const fetchConsultantLeadList = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CONSULTANT_LEAD_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/leads/consultant/${id}`, config)\r\n\r\n    dispatch({\r\n      type: CONSULTANT_LEAD_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CONSULTANT_LEAD_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch teamlead Leads */\r\nexport const fetchTeamLeadLeadList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TEAMLEAD_LEAD_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n\r\n\r\n    const { data } = await axios.get(`/api/leads/teamlead`, config)\r\n\r\n    dispatch({\r\n      type: TEAMLEAD_LEAD_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TEAMLEAD_LEAD_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch manager Leads */\r\nexport const fetchManagerLeadList = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: MANAGER_LEAD_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/leads/manager`, config)\r\n\r\n    dispatch({\r\n      type: MANAGER_LEAD_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MANAGER_LEAD_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","export const LEAD_ADD_REQUEST = 'LEAD_ADD_REQUEST'\r\nexport const LEAD_ADD_SUCCESS = 'LEAD_ADD_SUCCESS'\r\nexport const LEAD_ADD_FAIL = 'LEAD_ADD_FAIL'\r\n\r\nexport const LEAD_UPDATE_REQUEST = 'LEAD_UPDATE_REQUEST'\r\nexport const LEAD_UPDATE_SUCCESS = 'LEAD_UPDATE_SUCCESS'\r\nexport const LEAD_UPDATE_FAIL = 'LEAD_UPDATE_FAIL'\r\nexport const LEAD_UPDATE_RESET = 'LEAD_UPDATE_RESET'\r\n\r\nexport const LEAD_DETAILS_REQUEST = 'LEAD_DETAILS_REQUEST'\r\nexport const LEAD_DETAILS_SUCCESS = 'LEAD_DETAILS_SUCCESS'\r\nexport const LEAD_DETAILS_FAIL = 'LEAD_DETAILS_FAIL'\r\nexport const LEAD_DETAILS_RESET = 'LEAD_DETAILS_RESET'\r\n\r\nexport const LEAD_LIST_REQUEST = 'LEAD_LIST_REQUEST'\r\nexport const LEAD_LIST_SUCCESS = 'LEAD_LIST_SUCCESS'\r\nexport const LEAD_LIST_FAIL = 'LEAD_LIST_FAIL'\r\n\r\nexport const CONSULTANT_LEAD_LIST_REQUEST = 'CONSULTANT_LEAD_LIST_REQUEST'\r\nexport const CONSULTANT_LEAD_LIST_SUCCESS = 'CONSULTANT_LEAD_LIST_SUCCESS'\r\nexport const CONSULTANT_LEAD_LIST_FAIL = 'CONSULTANT_LEAD_LIST_FAIL'\r\n\r\nexport const MANAGER_LEAD_LIST_REQUEST = 'MANAGER_LEAD_LIST_REQUEST'\r\nexport const MANAGER_LEAD_LIST_SUCCESS = 'MANAGER_LEAD_LIST_SUCCESS'\r\nexport const MANAGER_LEAD_LIST_FAIL = 'MANAGER_LEAD_LIST_FAIL'\r\n\r\nexport const TEAMLEAD_LEAD_LIST_REQUEST = 'TEAMLEAD_LEAD_LIST_REQUEST'\r\nexport const TEAMLEAD_LEAD_LIST_SUCCESS = 'TEAMLEAD_LEAD_LIST_SUCCESS'\r\nexport const TEAMLEAD_LEAD_LIST_FAIL = 'TEAMLEAD_LEAD_LIST_FAIL'\r\n\r\nexport const LEAD_DELETE_REQUEST = 'LEAD_DELETE_REQUEST'\r\nexport const LEAD_DELETE_SUCCESS = 'LEAD_DELETE_SUCCESS'\r\nexport const LEAD_DELETE_FAIL = 'LEAD_DELETE_FAIL'\r\n\r\nexport const BULK_UPLOAD_REQUEST = 'BULK_UPLOAD_REQUEST'\r\nexport const BULK_UPLOAD_SUCCESS = 'BULK_UPLOAD_SUCCESS'\r\nexport const BULK_UPLOAD_FAIL = 'BULK_UPLOAD_FAIL'\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { managerList, teamLeadList, asmList, consultantList } from \"./../actions/userActions\";\r\nimport { addLeadData} from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n \r\nexport default ({history}) => {\r\n    const [lead, setLead] = useState({})\r\n    const [createdUser, setCreatedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [assignedUser, setAssignedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    // var [projectData, setProjectData] = useState({\r\n    //   mainProject: \"\",\r\n    //   subporject: \"\",\r\n    //   projectId: \"\"\r\n    // })\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    const [booked, setBooked] = useState(false)\r\n    // const [payment, setPayment] = useState({\r\n    //   firstInstallment: 0,\r\n    //   secondInstallment: 0,\r\n    //   thirdInstallment: 0\r\n    // })\r\n    var [firstInstallment, setFirstIntallment] = useState(0)\r\n    var [secondInstallment, setSecondIntallment] = useState(0) \r\n    var [thirdInstallment, setThirdIntallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [teamLead, setTeamLead] = useState('')\r\n    const [index, setIndex] = useState(0);\r\n    const [manager, setManager] = useState('');\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addLead = useSelector((state) => state.addLead)\r\n    const { loading, error, leadInfo } = addLead\r\n\r\n    const fetchProjects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = fetchProjects\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading: loadingConsultants, error: errorConsultants, consultants: consultantsList } = fetchConsultants\r\n\r\n    // const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    // const { loading: loadingManager, error: errorManager, managers: managersList } = fetchManagers\r\n\r\n    // const fetchTeamLeads = useSelector((state) => state.fetchTeamLeads)\r\n    // const { loading: loadingTeamLead, error: errorTeamLead, teamleads: teamleadsList } = fetchTeamLeads\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantList())\r\n      setStatus('Yet to Visit')\r\n        setLeadType('Hot')\r\n    },[])\r\n\r\n    // useEffect(()=>{\r\n    //   if(projectInfo){\r\n    //     setMainProject(projectInfo[0].mainProject)\r\n    //     setProjectId(projectInfo[0].projectId)\r\n    //     setSubProject(projectInfo[0].subProject[0])\r\n    //     setStatus('Yet to Visit')\r\n    //     setLeadType('Hot')\r\n    //   }\r\n    // }, [dispatch, projectInfo])\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()  \r\n      setLead(\r\n        lead.createdUser = createdUser, \r\n        lead.assignedConsultant = assignedUser,\r\n        lead.consultantName= consultant,\r\n        lead.enquiryDate= enquiryDate,\r\n        lead.customerName= customer,\r\n        lead.contactNumber= contactNumber,\r\n        lead.alternateNumber= alternateNumber,\r\n        lead.project ={\r\n          mainProject: mainProject,\r\n          subProject: subProject,\r\n          projectId: projectId\r\n        },\r\n        lead.leadScore= leadScore,\r\n        lead.leadType= leadType,\r\n        lead.status= status,\r\n        lead.remarks= remarks,\r\n        lead.nextFollowUp= nextFollow,\r\n        lead.managerRemarks= managerRemarks,\r\n        lead.booked= booked,\r\n        lead.payment = {\r\n          firstInstallment: firstInstallment,\r\n          secondInstallment: secondInstallment,\r\n          thirdInstallment: thirdInstallment,\r\n        },\r\n        lead.totalSqft= totalSqft\r\n        )\r\n      dispatch(addLeadData(lead))\r\n      history.push('/leads')\r\n  }\r\n\r\n    const projectHandler = () => {\r\n      if(projectInfo && mainProject){\r\n      const i = projectInfo.findIndex((element,i) => {\r\n        if (element.mainProject === mainProject){\r\n          // console.log(i)\r\n          setProjectId(element._id)\r\n        return true\r\n        }\r\n      })\r\n      setIndex(i);  \r\n      \r\n      }      \r\n    }\r\n\r\n    useEffect(()=> {\r\n      projectHandler()\r\n   }, [mainProject])\r\n\r\n   const consultantHandler = (e) => {\r\n     if(consultantsList[e.target.value]){\r\n     let a = projectInfo.filter(pro => pro._id === consultantsList[e.target.value].projectId)[0]\r\n    \r\n    setMainProject(a.mainProject)\r\n    setProjectId(a.projectId)\r\n    setSubProject(a.subProject[0])\r\n    setAssignedUser(consultantsList[e.target.value].consultantId)\r\n      setConsultant(consultantsList[e.target.value].name)\r\n     }else{\r\n      setConsultant('')\r\n\r\n    }\r\n   }\r\n\r\n\r\n    // useEffect(()=>{\r\n    //   console.log(\"hello1\")\r\n    //   if(customer){\r\n    //     console.log(\"hello2\")\r\n    //     dispatch(addLeadData(lead))\r\n    //         console.log(lead)\r\n    //         console.log(`3${mainProject}`)\r\n    //   }\r\n    // }, [ dispatch])\r\n\r\n\r\n  \r\n\r\n    // const submitHandler = ()=>{\r\n    //   console.log(mainProject, subProject)\r\n    // }\r\n\r\n    // const findSubProject = (element, i) => {\r\n    //   console.log(`${element.mainProject} = ${mainProject}`)\r\n    //   if (element.mainProject === mainProject){\r\n    //     return true\r\n    //   }else{\r\n    //     return false\r\n    //   }\r\n    // }\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e) =>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" value={enquiryDate} onChange={(e) => setEnquiryDate(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={contactNumber} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n           \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select defaultValue={consultant ? consultant : ' '} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Main Project\" value={mainProject} disabled/>\r\n                {/* <Form.Select required defaultValue={mainProject? mainProject : 'Not Found'} onChange={(e) => setMainProject(e.target.value)}>\r\n                <option key={2001} value=''>Select</option>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro.mainProject}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select> */}\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                  <Form.Label>Sub Project</Form.Label>\r\n                  <Form.Select required defaultValue={subProject? subProject : 'Not Found'} onChange={(e) => setSubProject(e.target.value)}>\r\n                    <option key={2001} value=''>Select</option>\r\n                  {\r\n                      projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                  </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Scource</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>Lead Type</Form.Label>\r\n                <Form.Select required value={leadType} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Select required value={status} onChange={(e) => setStatus(e.target.value)}>\r\n                  <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                  <option value=\"Visited\">Visited</option>\r\n                  <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                  <option value=\"Detail Shared\">Detail Shared</option>\r\n                  <option value=\"Not Interested\">Not Interested</option>\r\n                  <option value=\"RFR\">RFR</option>\r\n                  <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" value={nextFollow} min={enquiryDate} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n                                 \r\n         </Row>\r\n\r\n         <Row>\r\n\r\n        \r\n            \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                      \r\n         </Row>\r\n\r\n          <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstIntallment(e.target.value && (firstInstallment = parseInt(e.target.value)))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondIntallment(secondInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdIntallment(thirdInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Add Lead & Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n   )}\r\n   </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { addUser } from \"./../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    // const [mainProject, setMainProject] = useState('')\r\n    // const [projectId, setProjectId] = useState('')\r\n \r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    const addConsultant = useSelector((state) => state.addConsultant)\r\n    const { loading, error, userInfo } = addConsultant\r\n\r\n    // const Projects = useSelector((state) => state.fetchProjects)\r\n    // const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n  \r\n  \r\n    useEffect(() => {\r\n      if (userInfo) {\r\n        history.push('/')\r\n      }\r\n    }, [history, userData])\r\n\r\n    // useEffect(() => {\r\n    //   if(projectInfo){\r\n    //   setMainProject(projectInfo[0].mainProject)\r\n    //   setProjectId(projectInfo[0].projectId)\r\n    //   }\r\n    // }, [projectInfo])\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.password= password,\r\n            userData.role= \"asm\",\r\n            userData.manager= \"null\",\r\n            userData.teamLead= \"null\",\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            userData.project={\r\n              mainProject : \"null\",\r\n              projectId : \"null\"\r\n          },\r\n          userData.setMilestone={\r\n            bookings : 0,\r\n            leads : 0,\r\n            siteVisits: 0\r\n        }\r\n        )\r\n        dispatch(addUser(userData))\r\n        window.location.reload();\r\n    }\r\n\r\n    // const projectHandler = (e) => {\r\n    //   console.log(e)\r\n    //   setMainProject(e.mainProject)\r\n    //   setProjectId(e.projectId)\r\n    //   console.log(mainProject, projectId)\r\n    // }\r\n\r\n\r\n  return (\r\n    <>\r\n      { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n      <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n        <Card.Body>\r\n          <h5 className=\"mb-4\">General information</h5>\r\n          <Form onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"firstName\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"lastName\">\r\n                  <Form.Label>Employee Code</Form.Label>\r\n                  <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            {/* <Row className=\"align-items-center\">\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"birthday\">\r\n                  <Form.Label>Birthday</Form.Label>\r\n                  <Datetime\r\n                    timeFormat={false}\r\n                    onChange={setBirthday}\r\n                    renderInput={(props, openCalendar) => (\r\n                      <InputGroup>\r\n                        <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                        <Form.Control\r\n                          required\r\n                          type=\"text\"\r\n                          value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                          placeholder=\"mm/dd/yyyy\"\r\n                          onFocus={openCalendar}\r\n                          onChange={() => { }} />\r\n                      </InputGroup>\r\n                    )} />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"gender\">\r\n                  <Form.Label>Gender</Form.Label>\r\n                  <Form.Select defaultValue=\"0\">\r\n                    <option value=\"0\">Gender</option>\r\n                    <option value=\"1\">Female</option>\r\n                    <option value=\"2\">Male</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"emal\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"phone\">\r\n                  <Form.Label>Phone</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              {/* <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"gender\">\r\n                  <Form.Label>Project Assign</Form.Label>\r\n                  <Form.Select defaultValue={mainProject ? mainProject : ' '} onChange={(e) => projectHandler(e.target.value)}>\r\n                    {\r\n                      projectInfo && (projectInfo.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro.mainProject}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                    \r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col> */}\r\n              <Col md={6} className=\"mb-3\">\r\n                  <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>Your Password</Form.Label>\r\n                      <InputGroup>\r\n                          <InputGroup.Text>\r\n                            <FontAwesomeIcon icon={faUnlockAlt} />\r\n                          </InputGroup.Text>\r\n                          <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                      </InputGroup>\r\n                  </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            \r\n\r\n          {/*  <h5 className=\"my-4\">Address</h5>\r\n            <Row>\r\n              <Col sm={9} className=\"mb-3\">\r\n                <Form.Group id=\"address\">\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={3} className=\"mb-3\">\r\n                <Form.Group id=\"addressNumber\">\r\n                  <Form.Label>Number</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={4} className=\"mb-3\">\r\n                <Form.Group id=\"city\">\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control required type=\"text\" placeholder=\"City\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={4} className=\"mb-3\">\r\n                <Form.Group className=\"mb-2\">\r\n                  <Form.Label>Select state</Form.Label>\r\n                  <Form.Select id=\"state\" defaultValue=\"0\">\r\n                    <option value=\"0\">State</option>\r\n                    <option value=\"AL\">Alabama</option>\r\n                    <option value=\"AK\">Alaska</option>\r\n                    <option value=\"AZ\">Arizona</option>\r\n                    <option value=\"AR\">Arkansas</option>\r\n                    <option value=\"CA\">California</option>\r\n                    <option value=\"CO\">Colorado</option>\r\n                    <option value=\"CT\">Connecticut</option>\r\n                    <option value=\"DE\">Delaware</option>\r\n                    <option value=\"DC\">District Of Columbia</option>\r\n                    <option value=\"FL\">Florida</option>\r\n                    <option value=\"GA\">Georgia</option>\r\n                    <option value=\"HI\">Hawaii</option>\r\n                    <option value=\"ID\">Idaho</option>\r\n                    <option value=\"IL\">Illinois</option>\r\n                    <option value=\"IN\">Indiana</option>\r\n                    <option value=\"IA\">Iowa</option>\r\n                    <option value=\"KS\">Kansas</option>\r\n                    <option value=\"KY\">Kentucky</option>\r\n                    <option value=\"LA\">Louisiana</option>\r\n                    <option value=\"ME\">Maine</option>\r\n                    <option value=\"MD\">Maryland</option>\r\n                    <option value=\"MA\">Massachusetts</option>\r\n                    <option value=\"MI\">Michigan</option>\r\n                    <option value=\"MN\">Minnesota</option>\r\n                    <option value=\"MS\">Mississippi</option>\r\n                    <option value=\"MO\">Missouri</option>\r\n                    <option value=\"MT\">Montana</option>\r\n                    <option value=\"NE\">Nebraska</option>\r\n                    <option value=\"NV\">Nevada</option>\r\n                    <option value=\"NH\">New Hampshire</option>\r\n                    <option value=\"NJ\">New Jersey</option>\r\n                    <option value=\"NM\">New Mexico</option>\r\n                    <option value=\"NY\">New York</option>\r\n                    <option value=\"NC\">North Carolina</option>\r\n                    <option value=\"ND\">North Dakota</option>\r\n                    <option value=\"OH\">Ohio</option>\r\n                    <option value=\"OK\">Oklahoma</option>\r\n                    <option value=\"OR\">Oregon</option>\r\n                    <option value=\"PA\">Pennsylvania</option>\r\n                    <option value=\"RI\">Rhode Island</option>\r\n                    <option value=\"SC\">South Carolina</option>\r\n                    <option value=\"SD\">South Dakota</option>\r\n                    <option value=\"TN\">Tennessee</option>\r\n                    <option value=\"TX\">Texas</option>\r\n                    <option value=\"UT\">Utah</option>\r\n                    <option value=\"VT\">Vermont</option>\r\n                    <option value=\"VA\">Virginia</option>\r\n                    <option value=\"WA\">Washington</option>\r\n                    <option value=\"WV\">West Virginia</option>\r\n                    <option value=\"WI\">Wisconsin</option>\r\n                    <option value=\"WY\">Wyoming</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={4}>\r\n                <Form.Group id=\"zip\">\r\n                  <Form.Label>ZIP</Form.Label>\r\n                  <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            */}\r\n            <div className=\"mt-3\">\r\n              <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport { addUser } from \"./../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\n\r\n\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [project, setProject] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n \r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addConsultant = useSelector((state) => state.addConsultant)\r\n    const { loading, error, userInfo } = addConsultant\r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n  \r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      if (userInfo) {\r\n        history.push('/')\r\n      }\r\n    }, [history, userData])\r\n\r\n    useEffect(() => {\r\n      if(projectInfo){\r\n      setMainProject(projectInfo[0].mainProject)\r\n      setProjectId(projectInfo[0].projectId)\r\n      }\r\n    }, [projectInfo])\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.project= project,\r\n            userData.password= password,\r\n            userData.role= \"Channel Patner\",\r\n            userData.manager= \"null\",\r\n            userData.teamLead= \"null\",\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            userData.project={\r\n              mainProject : mainProject,\r\n              projectId : projectId\r\n          },\r\n          userData.setMilestone={\r\n            bookings : 0,\r\n            leads : 0,\r\n            siteVisits: 0\r\n        }\r\n        )\r\n        dispatch(addUser(userData))\r\n        window.location.reload();\r\n    }\r\n\r\n    const projectHandler = (e) => {\r\n      console.log(e)\r\n      setMainProject(e.mainProject)\r\n      setProjectId(e.projectId)\r\n      console.log(mainProject, projectId)\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={submitHandler}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n             <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Project Assign</Form.Label>\r\n                <Form.Select required defaultValue={mainProject ? mainProject : ' '} onChange={(e) => projectHandler(e.target.value)}>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          \r\n\r\n        {/*  <h5 className=\"my-4\">Address</h5>\r\n           <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n           */}\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from '../components/Preloader';\r\n\r\nimport { addUser } from \"./../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\n\r\n\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    // const [mainProject, setMainProject] = useState('')\r\n    // const [projectId, setProjectId] = useState('')\r\n \r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addConsultant = useSelector((state) => state.addConsultant)\r\n    const { loading, error, userInfo } = addConsultant\r\n\r\n    // const Projects = useSelector((state) => state.fetchProjects)\r\n    // const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n  \r\n    useEffect(() => {\r\n      if (userInfo) {\r\n        history.push('/')\r\n      }\r\n    }, [history, userData])\r\n\r\n    // useEffect(() => {\r\n    //   if(projectInfo){\r\n    //   setMainProject(projectInfo[0].mainProject)\r\n    //   setProjectId(projectInfo[0].projectId)\r\n    //   }\r\n    // }, [projectInfo])\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.password= password,\r\n            userData.role= \"Channel Patner Manager\",\r\n            userData.manager= \"null\",\r\n            userData.teamLead= \"null\",\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            userData.project={\r\n              mainProject : \"null\",\r\n              projectId : \"null\"\r\n          },\r\n          userData.setMilestone={\r\n            bookings : 0,\r\n            leads : 0,\r\n            siteVisits: 0\r\n        }\r\n        )\r\n        dispatch(addUser(userData))\r\n        window.location.reload();\r\n    }\r\n\r\n    // const projectHandler = (e) => {\r\n    //   console.log(e)\r\n    //   setMainProject(e.mainProject)\r\n    //   setProjectId(e.projectId)\r\n    //   console.log(mainProject, projectId)\r\n    // }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={submitHandler}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n             {/* <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Project Assign</Form.Label>\r\n                <Form.Select defaultValue={mainProject ? mainProject : ' '} onChange={(e) => projectHandler(e.target.value)}>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col> */}\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          \r\n\r\n        {/*  <h5 className=\"my-4\">Address</h5>\r\n           <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n           */}\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport { addUser } from \"./../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\n\r\n\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    // const [mainProject, setMainProject] = useState('')\r\n    // const [projectId, setProjectId] = useState('')\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n \r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addConsultant = useSelector((state) => state.addConsultant)\r\n    const { loading, error, userInfo } = addConsultant\r\n\r\n    // const Projects = useSelector((state) => state.fetchProjects)\r\n    // const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n  \r\n  \r\n    useEffect(() => {\r\n      if (userInfo) {\r\n        history.push('/')\r\n      }\r\n    }, [history, userData])\r\n\r\n    // useEffect(() => {\r\n    //   if(projectInfo){\r\n    //   setMainProject(projectInfo[0].mainProject)\r\n    //   setProjectId(projectInfo[0].projectId)\r\n    //   }\r\n    // }, [projectInfo])\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.password= password,\r\n            userData.role= \"Lead Assigner\",\r\n            userData.manager= \"null\",\r\n            userData.teamLead= \"null\",\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            userData.project={\r\n              mainProject : \"null\",\r\n              projectId : \"null\"\r\n          },\r\n          userData.setMilestone={\r\n            bookings : 0,\r\n            leads : 0,\r\n            siteVisits: 0\r\n        }\r\n        )\r\n        dispatch(addUser(userData))\r\n        window.location.reload();\r\n    }\r\n\r\n    // const projectHandler = (e) => {\r\n    //   console.log(e)\r\n    //   setMainProject(e.mainProject)\r\n    //   setProjectId(e.projectId)\r\n    //   console.log(mainProject, projectId)\r\n    // }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={submitHandler}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n             {/* <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Project Assign</Form.Label>\r\n                <Form.Select defaultValue={mainProject ? mainProject : ' '} onChange={(e) => projectHandler(e.target.value)}>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col> */}\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          \r\n\r\n        {/*  <h5 className=\"my-4\">Address</h5>\r\n           <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n           */}\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n  CANCEL_LEAD_ADD_REQUEST,\r\n  CANCEL_LEAD_ADD_FAIL,\r\n  CANCEL_LEAD_ADD_SUCCESS,\r\n  CANCEL_LEAD_LIST_REQUEST,\r\n  CANCEL_LEAD_LIST_SUCCESS,\r\n  CANCEL_LEAD_LIST_FAIL,\r\n  CANCEL_LEAD_DELETE_REQUEST,\r\n  CANCEL_LEAD_DELETE_SUCCESS,\r\n  CANCEL_LEAD_DELETE_FAIL,\r\n  CANCEL_LEAD_UPDATE_REQUEST,\r\n  CANCEL_LEAD_UPDATE_SUCCESS,\r\n  CANCEL_LEAD_UPDATE_FAIL,\r\n  CANCEL_LEAD_UPDATE_RESET,\r\n  CANCEL_LEAD_DETAIL_REQUEST,\r\n  CANCEL_LEAD_DETAIL_SUCCESS,\r\n  CANCEL_LEAD_DETAIL_FAIL,\r\n  CANCEL_LEAD_DETAIL_RESET\r\n} from '../constants/cancellationLeadsConstants'\r\n\r\n/* Add Cancelled Lead */\r\nexport const addCancelLeadData = (cancelLeadData, addToast) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CANCEL_LEAD_ADD_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/cancelledleads',\r\n        cancelLeadData,\r\n        config\r\n      )\r\n\r\n      if (addToast) {\r\n        addToast(\"Added Lead to Cancelled Leads Successful\", { appearance: \"success\", autoDismiss: true });\r\n      }\r\n  \r\n      dispatch({\r\n        type: CANCEL_LEAD_ADD_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      if (addToast) {\r\n        addToast(\"Not Successful\", { appearance: \"error\", autoDismiss: true });\r\n      }\r\n      dispatch({\r\n        type: CANCEL_LEAD_ADD_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Fetch all Cancelled Leads */\r\nexport const fetchCancelLeadList = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: CANCEL_LEAD_LIST_REQUEST })\r\n  \r\n      const { data } = await axios.get(`/api/cancelledleads`)\r\n  \r\n      dispatch({\r\n        type: CANCEL_LEAD_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CANCEL_LEAD_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Delete Cancelled lead */\r\nexport const deleteCancelledLead = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CANCEL_LEAD_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/cancelledleads/${id}`, config)\r\n\r\n    dispatch({ type: CANCEL_LEAD_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      console.log('Not authorized, token failed')\r\n    }\r\n    dispatch({\r\n      type: CANCEL_LEAD_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Update Cancelled Lead */\r\nexport const updateCancelledLeadData = (lead, addToast) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CANCEL_LEAD_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/cancelledleads/${lead._id}`,\r\n      lead,\r\n      config\r\n    )\r\n    if (addToast) {\r\n      addToast(\"Cancelled Lead Update Successful\", { appearance: \"success\", autoDismiss: true });\r\n    }\r\n\r\n    dispatch({\r\n      type: CANCEL_LEAD_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: CANCEL_LEAD_UPDATE_RESET\r\n    })\r\n\r\n    // dispatch({\r\n    //   type: LEAD_DETAILS_RESET\r\n    // })\r\n    // dispatch({ type: LEAD_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    if (addToast) {\r\n      addToast(\"Update not Successful\", { appearance: \"error\", autoDismiss: true });\r\n    }\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    dispatch({\r\n      type: CANCEL_LEAD_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n/* Fetch a Cancelled Lead Details */\r\nexport const fetchCancelledLeadDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CANCEL_LEAD_DETAIL_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/cancelledleads/${id}`, config)\r\n\r\n    dispatch({\r\n      type: CANCEL_LEAD_DETAIL_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CANCEL_LEAD_DETAIL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","export const CANCEL_LEAD_ADD_REQUEST = 'CANCEL_LEAD_ADD_REQUEST'\r\nexport const CANCEL_LEAD_ADD_SUCCESS = 'CANCEL_LEAD_ADD_SUCCESS'\r\nexport const CANCEL_LEAD_ADD_FAIL = 'CANCEL_LEAD_ADD_FAIL'\r\n\r\nexport const CANCEL_LEAD_LIST_REQUEST = 'CANCEL_LEAD_LIST_REQUEST'\r\nexport const CANCEL_LEAD_LIST_SUCCESS = 'CANCEL_LEAD_LIST_SUCCESS'\r\nexport const CANCEL_LEAD_LIST_FAIL = 'CANCEL_LEAD_LIST_FAIL'\r\n\r\nexport const CANCEL_LEAD_DELETE_REQUEST = 'CANCEL_LEAD_DELETE_REQUEST'\r\nexport const CANCEL_LEAD_DELETE_SUCCESS = 'CANCEL_LEAD_DELETE_SUCCESS'\r\nexport const CANCEL_LEAD_DELETE_FAIL = 'CANCEL_LEAD_DELETE_FAIL'\r\n\r\nexport const CANCEL_LEAD_UPDATE_REQUEST = 'CANCEL_LEAD_UPDATE_REQUEST'\r\nexport const CANCEL_LEAD_UPDATE_SUCCESS = 'CANCEL_LEAD_UPDATE_SUCCESS'\r\nexport const CANCEL_LEAD_UPDATE_FAIL = 'CANCEL_LEAD_UPDATE_FAIL'\r\nexport const CANCEL_LEAD_UPDATE_RESET = 'CANCEL_LEAD_UPDATE_RESET'\r\n\r\nexport const CANCEL_LEAD_DETAIL_REQUEST = 'CANCEL_LEAD_DETAIL_REQUEST'\r\nexport const CANCEL_LEAD_DETAIL_SUCCESS = 'CANCEL_LEAD_DETAIL_SUCCESS'\r\nexport const CANCEL_LEAD_DETAIL_FAIL = 'CANCEL_LEAD_DETAIL_FAIL'\r\nexport const CANCEL_LEAD_DETAIL_RESET = 'CANCEL_LEAD_DETAIL_RESET'","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nimport {fetchleadDetails, updateLeadData, deleteLead } from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport { addCancelLeadData } from \"../actions/cancellationLeadActions\";\r\nimport { consultantList } from \"../actions/userActions\";\r\n\r\n\r\n\r\nexport default ({match, history}) => {\r\n    const leadId = match.params.id\r\n\r\n    var gapi = window.gapi\r\n\r\n    var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n    const [createdUser, setCreatedUser] = useState('')\r\n    const [assignedUser, setAssignedUser] = useState('')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    var [firstInstallment, setFirstInstallment] = useState(0)\r\n    var [secondInstallment, setSecondInstallment] = useState(0)\r\n    var [thirdInstallment, setThirdInstallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [index, setIndex] = useState(0)\r\n    const [remainder, setRemainder] = useState(false)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const leadDetails = useSelector((state) => state.leadDetails)\r\n    const { loading, error, leadInfo } = leadDetails\r\n\r\n    const updateLead = useSelector((state) => state.updateLead)\r\n    const { loading: loadingUpdate, error: errorUpdate , success: successUpdate } = updateLead\r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading: loadingConsultants, error: errorConsultants, consultants: consultantsList } = fetchConsultants\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n\r\n    useEffect(() => {\r\n      if(successUpdate){\r\n        history.push('/leads')\r\n      }\r\n    },[successUpdate])\r\n\r\n    useEffect(()=>{\r\n    }, [mainProject, subProject])\r\n\r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantList())\r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n  \r\n    useEffect(() => {\r\n     \r\n      if (!leadInfo || leadInfo._id !== leadId) {\r\n        dispatch(fetchleadDetails(leadId))\r\n      }else{ \r\n        setCreatedUser(leadInfo.createdUser)\r\n        setAssignedUser(leadInfo.assignedConsultant)\r\n        setConsultant(leadInfo.consultantName)\r\n        setCustomer(leadInfo.customerName)\r\n        setEnquiryDate(leadInfo.enquiryDate)\r\n        setContactNumber(leadInfo.contactNumber)\r\n        setAlternateNumber(leadInfo.alternateNumber)\r\n        setMainProject(leadInfo.project.mainProject)\r\n        setSubProject(leadInfo.project.subProject)\r\n        setProjectId(leadInfo.project.projectId)\r\n        setLeadType(leadInfo.leadType)\r\n        setLeadScore(leadInfo.leadScore)\r\n        setStatus(leadInfo.status)\r\n        setRemarks(leadInfo.remarks)\r\n        setNextFollow(leadInfo.nextFollowUp)\r\n        setManagerRemarks(leadInfo.managerRemarks)\r\n        setFirstInstallment(leadInfo.payment.firstInstallment)\r\n        setSecondInstallment(leadInfo.payment.secondInstallment)\r\n        setThirdInstallment(leadInfo.payment.thirdInstallment)\r\n        setTotalSqft(leadInfo.totalSqft? leadInfo.totalSqft : 0)\r\n        setRemainder(leadInfo.remainder? leadInfo.remainder : false)\r\n      }\r\n    }, [dispatch, leadInfo, successUpdate])\r\n\r\n    \r\n\r\n    function findSubProject(project) {\r\n      return project.mainProject === mainProject\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(mainProject){\r\n        if(projectInfo)\r\n        {\r\n          const main = projectInfo.findIndex(findSubProject);\r\n        setIndex(main)\r\n\r\n      }\r\n      }\r\n    },[mainProject])\r\n\r\n\r\n    // const subProjectHandler = () => {\r\n    //   if(projectInfo)\r\n    //   {\r\n    //     const main = projectInfo.findIndex(findSubProject);\r\n    //   setIndex(main)\r\n    // }\r\n      \r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //   subProjectHandler()\r\n    // }, [mainProject])\r\n    console.log(enquiryDate, nextFollow)\r\n    const consultantHandler = (e) => {\r\n      if(consultantsList[e.target.value]){\r\n        let a = projectInfo.filter(pro => pro._id === consultantsList[e.target.value].project)[0]\r\n       \r\n       setMainProject(a.mainProject)\r\n       setProjectId(a.projectId)\r\n       setSubProject(a.subProject[0])\r\n       setAssignedUser(consultantsList[e.target.value].consultantId)\r\n         setConsultant(consultantsList[e.target.value].name)\r\n        }else{\r\n          setConsultant('')\r\n\r\n        }\r\n     }\r\n\r\n     const deleteHandler = (e) => {\r\n       e.preventDefault()\r\n      if (window.confirm('Are you sure?')){\r\n      dispatch(deleteLead(leadId))\r\n      }\r\n     }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n        dispatch(\r\n          updateLeadData({\r\n            _id: leadId,\r\n            createdUser,\r\n            assignedConsultant: assignedUser,\r\n            customerName:customer,\r\n            consultantName:consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            alternateNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : false,\r\n            remainder\r\n          }))\r\n    }\r\n\r\n    const projectHandler = (e) => {\r\n      setMainProject(e.target.value)\r\n    }\r\n\r\n    const cancelLeadHandler = (e, id) => {\r\n      e.preventDefault()\r\n      if (window.confirm('Are you sure')) {\r\n          dispatch(addCancelLeadData({\r\n            _id: leadId,\r\n            createdUser,\r\n            assignedConsultant: assignedUser,\r\n            customerName:customer,\r\n            consultantName: consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            alternateNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : true\r\n          }))\r\n          dispatch(deleteLead(leadId)) \r\n          history.push('/leads')\r\n        }\r\n\r\n  }\r\n\r\n  const handleClick = () => {\r\n    gapi.load('client:auth2', () => {\r\n      // console.log('loaded client')\r\n\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n\r\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n      gapi.auth2.getAuthInstance().signIn()\r\n      .then(() => {\r\n        \r\n        var event = {\r\n          'summary': leadInfo.customerName,\r\n          'location': '',\r\n          'description': leadInfo.project.subProject,\r\n          'start': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'end': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'recurrence': [\r\n            'RRULE:FREQ=DAILY;COUNT=1'\r\n          ],\r\n          'attendees': [\r\n            {'email': 'deve.metromindz@gmail.com'}\r\n          ],\r\n          'reminders': {\r\n            'useDefault': false,\r\n            'overrides': [\r\n              {'method': 'email', 'minutes': 24 * 60},\r\n              {'method': 'popup', 'minutes': 10}\r\n            ]\r\n          }\r\n        }\r\n\r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event,\r\n        })\r\n\r\n        request.execute(event => {\r\n          console.log(event)\r\n          window.open(event.htmlLink)\r\n        })\r\n        \r\n\r\n        /*\r\n            Uncomment the following block to get events\r\n        */\r\n        /*\r\n        // get events\r\n        gapi.client.calendar.events.list({\r\n          'calendarId': 'primary',\r\n          'timeMin': (new Date()).toISOString(),\r\n          'showDeleted': false,\r\n          'singleEvents': true,\r\n          'maxResults': 10,\r\n          'orderBy': 'startTime'\r\n        }).then(response => {\r\n          const events = response.result.items\r\n          console.log('EVENTS: ', events)\r\n        })\r\n        */\r\n    \r\n\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading && loadingProject ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e)=>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer || ''} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" defaultValue={enquiryDate.split('.')[0]}  onChange={(e) => {setEnquiryDate(e.target.value)}}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n          \r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"contact\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"987654321\" value={contactNumber || ''} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select value={consultantsList && consultantsList.findIndex(c=>c.name===consultant)} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                 \r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n            </Row>\r\n\r\n            <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Main Project\" value={mainProject} disabled/>\r\n                {/* <Form.Select value={mainProject? mainProject : ''} onChange={(e) => projectHandler(e)}>\r\n                <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro.mainProject}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select> */}\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                <Form.Label>Sub Project</Form.Label>\r\n                <Form.Select value={subProject} onChange={(e) => setSubProject(e.target.value)}>\r\n                  <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore || ''} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>LEAD TYPE</Form.Label>\r\n                <Form.Select value={leadType || ''} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>STATUS</Form.Label>\r\n                <Form.Select value={status || ''} onChange={(e) => setStatus(e.target.value)}>\r\n                    <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                    <option value=\"Visited\">Visited</option>\r\n                    <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                    <option value=\"Detail Shared\">Detail Shared</option>\r\n                    <option value=\"Not Interested\">Not Interested</option>\r\n                    <option value=\"RFR\">RFR</option>\r\n                    <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" min={enquiryDate} defaultValue={nextFollow.split('.')[0]} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                     \r\n         </Row>\r\n\r\n         <Row>  \r\n        \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks || ''} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstInstallment(firstInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondInstallment(secondInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdInstallment(thirdInstallment = parseInt(e.target.value ) || 0)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3 d-flex justify-content-between\">\r\n            <div>\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n            <Button variant=\"primary\" className=\"ms-3\" type=\"submit\" onClick={handleClick} disabled={!nextFollow}>Reminder</Button>\r\n            <Button className=\"ms-3\"  variant=\"primary\" type=\"button\" onClick = {(e)=>cancelLeadHandler(e, leadId)}>Cancellation</Button>\r\n            </div>\r\n            <div>\r\n            <Button variant =\"danger\" onClick={(e)=>{deleteHandler(e)}}>Delete</Button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  \r\n    )}\r\n    </>\r\n  );\r\n};\r\n","\r\nimport Profile1 from \"../assets/img/team/profile-picture-1.jpg\"\r\nimport Profile2 from \"../assets/img/team/profile-picture-2.jpg\"\r\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\"\r\nimport Profile4 from \"../assets/img/team/profile-picture-4.jpg\"\r\nimport Profile5 from \"../assets/img/team/profile-picture-5.jpg\"\r\n\r\nexport default [\r\n    {\r\n        \"id\": 1,\r\n        \"read\": false,\r\n        \"image\": Profile1,\r\n        \"sender\": \"Jose Leos\",\r\n        \"time\": \"a few moments ago\",\r\n        \"link\": \"#\",\r\n        \"message\": `Added you to an event \"Project stand-up\" tomorrow at 12:30 AM.`\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"read\": false,\r\n        \"image\": Profile2,\r\n        \"sender\": \"Neil Sims\",\r\n        \"time\": \"2 hrs ago\",\r\n        \"link\": \"#\",\r\n        \"message\": `You've been assigned a task for \"Awesome new project\".`\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"read\": false,\r\n        \"image\": Profile3,\r\n        \"sender\": \"Roberta Casas\",\r\n        \"time\": \"5 hrs ago\",\r\n        \"link\": \"#\",\r\n        \"message\": `Tagged you in a document called \"First quarter financial plans\".`\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"read\": true,\r\n        \"image\": Profile4,\r\n        \"sender\": \"Joseph Garth\",\r\n        \"time\": \"1 day ago\",\r\n        \"link\": \"#\",\r\n        \"message\": `New message: \"Hey, what's up? All set for the presentation?\"`\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"read\": true,\r\n        \"image\": Profile5,\r\n        \"sender\": \"Jose Leos\",\r\n        \"time\": \"2 days ago\",\r\n        \"link\": \"#\",\r\n        \"message\": `New message: \"We need to improve the UI/UX for the landing page.\"`\r\n    },\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell, faCog, faEnvelopeOpen, faSearch, faSignOutAlt, faUserShield, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Row, Col, Nav, Form, Image, Navbar, Dropdown, Container, ListGroup, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { createHashHistory } from 'history'\r\nimport ReactHero from \"../assets/img/technologies/logo.png\";\r\n\r\nimport NOTIFICATIONS_DATA from \"../data/notifications\";\r\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\";\r\n\r\nimport { logout } from \"../actions/userActions\";\r\nimport './style.css'\r\n\r\n\r\nexport default (props) => {\r\n  const [notifications, setNotifications] = useState(NOTIFICATIONS_DATA);\r\n  const areNotificationsRead = notifications.reduce((acc, notif) => acc && notif.read, true);\r\n  const [user, setUser] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if(userInfo){\r\n      setUser(userInfo.name)\r\n    }\r\n  }, [])\r\n\r\n  const markNotificationsAsRead = () => {\r\n    setTimeout(() => {\r\n      setNotifications(notifications.map(n => ({ ...n, read: true })));\r\n    }, 300);\r\n  };\r\n\r\n  const history = createHashHistory()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/login')\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    history.push('/login')\r\n  }\r\n\r\n\r\n  const Notification = (props) => {\r\n    const { link, sender, image, time, message, read = false} = props;\r\n    const readClassName = read ? \"\" : \"text-danger\";\r\n\r\n    return (\r\n      <ListGroup.Item action href={link} className=\"border-bottom border-light\">\r\n        <Row className=\"align-items-center\">\r\n          <Col className=\"col-auto\">\r\n            <Image src={image} className=\"user-avatar lg-avatar rounded-circle\" />\r\n          </Col>\r\n          <Col className=\"ps-0 ms--2\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <div>\r\n                <h4 className=\"h6 mb-0 text-small\">{sender}</h4>\r\n              </div>\r\n              <div className=\"text-end\">\r\n                <small className={readClassName}>{time}</small>\r\n              </div>\r\n            </div>\r\n            <p className=\"font-small mt-1 mb-0\">{message}</p>\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Navbar variant=\"dark\" expanded className=\"ps-0 pe-2 pb-0\">\r\n      <Container fluid className=\"px-0\">\r\n      <Image src={ReactHero} className=\"logomain\" />\r\n\r\n        <div className=\"d-flex justify-content-end w-100\">\r\n          {/* <div className=\"d-flex align-items-center\">\r\n            <Form className=\"navbar-search\">\r\n              <Form.Group id=\"topbarSearch\">\r\n                <InputGroup className=\"input-group-merge search-bar\">\r\n                  <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\r\n                  <Form.Control type=\"text\" placeholder=\"Search\" />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form>\r\n          </div> */}\r\n          <Nav className=\"align-items-center\">\r\n            {/* <Dropdown as={Nav.Item} onToggle={markNotificationsAsRead} >\r\n              <Dropdown.Toggle as={Nav.Link} className=\"text-dark icon-notifications me-lg-3\">\r\n                <span className=\"icon icon-sm\">\r\n                  <FontAwesomeIcon icon={faBell} className=\"bell-shake\" />\r\n                  {areNotificationsRead ? null : <span className=\"icon-badge rounded-circle unread-notifications\" />}\r\n                </span>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"dashboard-dropdown notifications-dropdown dropdown-menu-lg dropdown-menu-center mt-2 py-0\">\r\n                <ListGroup className=\"list-group-flush\">\r\n                  <Nav.Link href=\"#\" className=\"text-center text-primary fw-bold border-bottom border-light py-3\">\r\n                    Notifications\r\n                  </Nav.Link>\r\n\r\n                  {notifications.map(n => <Notification key={`notification-${n.id}`} {...n} />)}\r\n\r\n                  <Dropdown.Item className=\"text-center text-primary fw-bold py-3\">\r\n                    View all\r\n                  </Dropdown.Item>\r\n                </ListGroup>\r\n              </Dropdown.Menu>\r\n            </Dropdown> */}\r\n\r\n            <Dropdown as={Nav.Item}>\r\n              <Dropdown.Toggle as={Nav.Link} className=\"pt-1 px-0\">\r\n                <div className=\"media d-flex align-items-center\">\r\n                  {/* <Image src={Profile3} className=\"user-avatar md-avatar rounded-circle\" /> */}\r\n                  {user? <span className=\"profile-img\">{user.substring(0,1)}</span> : \r\n                  (\r\n                    <Dropdown.Item className=\"fw-bold\" onClick={loginHandler}>\r\n                      <FontAwesomeIcon icon={faSignInAlt} className=\"text-danger me-2\" /> Login\r\n                    </Dropdown.Item>\r\n                  )\r\n                  }\r\n                  <div className=\"media-body ms-2 text-dark align-items-center d-none d-lg-block\">\r\n                    <span className=\"mb-0 font-small fw-bold\">{user}</span>\r\n                  </div>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"user-dropdown dropdown-menu-right mt-2\">\r\n                {/* <Dropdown.Item className=\"fw-bold\">\r\n                  <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" /> My Profile\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"fw-bold\">\r\n                  <FontAwesomeIcon icon={faCog} className=\"me-2\" /> Settings\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"fw-bold\">\r\n                  <FontAwesomeIcon icon={faEnvelopeOpen} className=\"me-2\" /> Messages\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"fw-bold\">\r\n                  <FontAwesomeIcon icon={faUserShield} className=\"me-2\" /> Support\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Divider /> */}\r\n\r\n                <Dropdown.Item className=\"fw-bold\" onClick={logoutHandler}>\r\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"text-danger me-2\"/> Logout\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport { Button } from '@themesberg/react-bootstrap';\r\n\r\n\r\nconst AdminDashboard = ({history}) => {\r\n\r\n\r\n    // const RouteWithLoader = ({ component: Component, ...rest }) => {\r\n    //       const [loaded, setLoaded] = useState(false);\r\n        \r\n    //       useEffect(() => {\r\n    //         const timer = setTimeout(() => setLoaded(true), 1000);\r\n    //         return () => clearTimeout(timer);\r\n    //       }, []);\r\n        \r\n    //       return (\r\n    //         <Route {...rest} render={props => ( <> <Preloader show={loaded ? false : true} /> <Component {...props} /> </> ) } />\r\n    //       );\r\n    //     };\r\n        \r\n        // const RouteWithSidebar = ({ component: Component, ...rest }) => {\r\n        //   const [loaded, setLoaded] = useState(false);\r\n        \r\n        //   useEffect(() => {\r\n        //     const timer = setTimeout(() => setLoaded(true), 1000);\r\n        //     return () => clearTimeout(timer);\r\n        //   }, []);\r\n        \r\n        //   const localStorageIsSettingsVisible = () => {\r\n        //     return localStorage.getItem('settingsVisible') === 'false' ? false : true\r\n        //   }\r\n        \r\n        //   const [showSettings, setShowSettings] = useState(localStorageIsSettingsVisible);\r\n        \r\n        //   const toggleSettings = () => {\r\n        //     setShowSettings(!showSettings);\r\n        //     localStorage.setItem('settingsVisible', !showSettings);\r\n        //   }\r\n\r\n        const users = useSelector((state) => state.userLogin)\r\n        const { loading, error, userInfo } = users\r\n\r\n        const redirectHandler = () => {\r\n           if(userInfo){\r\n            if(userInfo.isAdmin){\r\n                history.push('/dashboard')\r\n            }else if(userInfo.role === \"Manager\"){\r\n                history.push('/manager/dashboard')\r\n            }else if(userInfo.role === \"TeamLead\"){\r\n                history.push('/teamlead/dashboard')\r\n            }else if(userInfo.role === \"Consultant\"){\r\n                history.push('/consultant/dashboard')\r\n            }else if(userInfo.role === \"CPM\"){\r\n                history.push('/cpmanager/dashboard')\r\n            }else if(userInfo.role === \"LeadAssigner\"){\r\n                history.push('/leadassigner/bulkleads')\r\n            }else{\r\n                history.push('/login')\r\n            }\r\n           }\r\n        }\r\n        \r\n\r\n    return (\r\n        <>\r\n            {/* <Preloader show={loaded ? false : true} /> */}\r\n            \r\n            <main className=\"content\">\r\n                <Navbar />\r\n                <div className=\"home\">\r\n                <h1>CRM</h1>\r\n                <div className=\"mt-3\">\r\n                    <Button variant=\"primary\" type=\"submit\" onClick= {()=>redirectHandler()}>Dashboard</Button>\r\n                </div>\r\n                </div>  \r\n\r\n            </main>\r\n        \r\n       </>\r\n    )\r\n}\r\n\r\n\r\nexport default AdminDashboard\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport { deleteUser } from '../actions/userActions';\r\nimport axios from 'axios';\r\nimport { createHashHistory } from 'history'\r\n\r\n\r\nconst ReactTable = ({users}) => {\r\n    const dispatch = useDispatch()\r\n    const history = createHashHistory()\r\n\r\n    const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n    const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n         dispatch(deleteUser(id))\r\n        //  history.push('/remove/consultant')\r\n        window.location.reload()\r\n        }\r\n    }\r\n\r\n    const editHandler = (id) => {\r\n      history.push(`/user/${id}/edit`)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"users\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, users) => {\r\n            console.log(row, index)\r\n            return users+1\r\n          },\r\n        },\r\n        {\r\n          dataField: \"empCode\",\r\n          text: \"Employee Code\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"name\",\r\n          text: \"Name\",\r\n          sort: true,\r\n          \r\n        },\r\n        {\r\n          dataField: \"mobile\",\r\n          text: \"Mobile no.\"\r\n        },\r\n        {\r\n          dataField: \"email\",\r\n          text: \"Email Id\",\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          formatter: (cell,row) => {\r\n            return (\r\n              // <button className=\"btn btn-primary\" onClick={ ()=>deleteHandler(row._id) }>Remove</button>\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editHandler(row._id) }>Edit</button>\r\n\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n    return (\r\n        <div>\r\n            <BootstrapTable\r\n                 \r\n                 bootstrap4\r\n                 keyField=\"_id\"\r\n                 data={users}\r\n                 columns={columns}\r\n                 filter={ filterFactory() }\r\n                 pagination={paginationFactory({ sizePerPage: 10 })}\r\n                 striped\r\n               />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactTable\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\nimport { consultantList } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport ReactTable from './ReactTable';\r\n\r\n\r\nconst Consultant = ({history}) => {\r\n    // const [userList, setUserList] = useState([])\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading, error, consultants: users } = fetchConsultants\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n        dispatch(consultantList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(consultants())\r\n    // }, [])\r\n\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     setUserList(users)\r\n    // }, [users])\r\n\r\n//     const [usersData, setUsersData] = useState([])\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//          useEffect(() => {\r\n//            setTimeout(()=>{\r\n//             axios.get(`/api/users/consultant`)\r\n//             .then(res => {\r\n//                 console.log(\"sgh\")\r\n//                 const users = res.data;\r\n//                 setUsersData(users)\r\n//                 setLoading(false)                     \r\n//             })\r\n//           }, 3000)\r\n          \r\n\r\n//          }, [])\r\n\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n        }\r\n        history.push('/')\r\n    }\r\n  \r\n\r\n  \r\n  \r\n  \r\n  if(users === undefined){\r\n  return (\r\n    <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n    \r\n  )\r\n  } else{\r\n    return (\r\n      \r\n      <>\r\n      {loading? (\r\n        // <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        // <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={40} />\r\n        // </div>\r\n        <div></div>\r\n      ) : (\r\n      <div>\r\n        \r\n                    <ReactTable users={users}/>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n\r\n  export default Consultant\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const RemoveConsultant = () => {\r\n//     const [email, setEmail] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     // const userLogin = useSelector((state) => state.userLogin)\r\n//     // const {userInfo: user } = userLogin\r\n\r\n//     const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n//     const { loading, error, consultants: users } = fetchConsultants\r\n\r\n//     const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n//     const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n//     useEffect(() => {\r\n//         dispatch(consultants())\r\n//     }, [dispatch, success])\r\n\r\n//     const deleteHandler = (id) =>{\r\n//         if (window.confirm('Are you sure')) {\r\n//       dispatch(deleteUser(id))\r\n//         }\r\n//     }\r\n    \r\n//     return (\r\n//         <div>\r\n//             { loading ? <Preloader /> : (\r\n//                 <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n//                 <Card.Body className=\"pt-0\">\r\n//                 <Table hover className=\"user-table align-items-center\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th className=\"border-bottom\">Serial No.</th>\r\n//                         <th className=\"border-bottom\">Employee Code</th>\r\n//                         <th className=\"border-bottom\">Name</th>\r\n//                         <th className=\"border-bottom\">Email Id</th>\r\n//                         <th className=\"border-bottom\">Mobile no.</th>            \r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {users && users.map((user, i) => \r\n//                     <tr key={i}>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {i+1}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.empCode}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.name}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.email}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.mobile}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <Dropdown as={ButtonGroup}>\r\n//                         <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n//                             <span className=\"icon icon-sm\">\r\n//                             <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n//                             </span>\r\n//                         </Dropdown.Toggle>\r\n//                         <Dropdown.Menu>\r\n//                             {/* <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n//                             </Dropdown.Item> */}\r\n//                             <Dropdown.Item className=\"text-danger\" onClick= {()=> deleteHandler(user._id)}>\r\n//                             <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n//                             </Dropdown.Item>\r\n//                         </Dropdown.Menu>\r\n//                         </Dropdown>\r\n//                     </td>\r\n//                     </tr>\r\n//                     )}\r\n//                     </tbody>\r\n//                 </Table>\r\n//                 <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n//                     <Nav>\r\n//                     <Pagination className=\"mb-2 mb-lg-0\">\r\n//                         <Pagination.Prev>\r\n//                         Previous\r\n//                         </Pagination.Prev>\r\n//                         <Pagination.Item active>1</Pagination.Item>\r\n//                         <Pagination.Item>2</Pagination.Item>\r\n//                         <Pagination.Item>3</Pagination.Item>\r\n//                         <Pagination.Item>4</Pagination.Item>\r\n//                         <Pagination.Item>5</Pagination.Item>\r\n//                         <Pagination.Next>\r\n//                         Next\r\n//                         </Pagination.Next>\r\n//                     </Pagination>\r\n//                     </Nav>\r\n//                     {/* <small className=\"fw-bold\">\r\n//                     Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n//                     </small> */}\r\n//                 </Card.Footer>\r\n//                 </Card.Body>\r\n//             </Card>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default RemoveConsultant\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\nimport { managerList } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport ReactTable from './ReactTable';\r\n\r\n\r\nconst Manager = ({history}) => {\r\n    // const [userList, setUserList] = useState([])\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    const { loading, error, managers: users } = fetchManagers\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n        dispatch(managerList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    // useEffect(() => {\r\n    //   dispatch(managers())\r\n    // }, [])\r\n\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     setUserList(users)\r\n    // }, [users])\r\n\r\n//     const [usersData, setUsersData] = useState([])\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//          useEffect(() => {\r\n//            setTimeout(()=>{\r\n//             axios.get(`/api/users/consultant`)\r\n//             .then(res => {\r\n//                 console.log(\"sgh\")\r\n//                 const users = res.data;\r\n//                 setUsersData(users)\r\n//                 setLoading(false)                     \r\n//             })\r\n//           }, 3000)\r\n          \r\n\r\n//          }, [])\r\n\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n        }\r\n        console.log('fhdj')\r\n        history.push('/')\r\n    }\r\n  \r\n\r\n  \r\n  \r\n  \r\n  if(users === undefined){\r\n  return (\r\n    <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n    \r\n  )\r\n  } else{\r\n    return (\r\n      \r\n      <>\r\n      {loading? (\r\n        // <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        // <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={40} />\r\n        // </div>\r\n        <div></div>\r\n      ) : (\r\n      <div>\r\n        \r\n                    <ReactTable users={users}/>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n\r\n  export default Manager\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState, useEffect} from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n// import { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// import { Routes } from \"../routes\";\r\n// import { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\n// import transactions from \"../data/transactions\";\r\n// import commands from \"../data/commands\";\r\n\r\n// import { managers } from '../actions/userActions'\r\n// import { deleteUser } from '../actions/userActions';\r\n// import Preloader from '../components/Preloader';\r\n\r\n\r\n\r\n// const RemoveManager = () => {\r\n//     const [email, setEmail] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const userLogin = useSelector((state) => state.userLogin)\r\n//     const {userInfo: user } = userLogin\r\n\r\n//     const fetchManagers = useSelector((state) => state.fetchManagers)\r\n//     const { loading, error, managers: users } = fetchManagers\r\n\r\n//     const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n//     const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n//     useEffect(() => {\r\n//         dispatch(managers())\r\n//     }, [dispatch, success])\r\n\r\n//     const deleteHandler = (id) =>{\r\n//         if (window.confirm('Are you sure')) {\r\n//       dispatch(deleteUser(id))\r\n//         }\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             { loading ? <Preloader /> : (\r\n//                 <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n//                 <Card.Body className=\"pt-0\">\r\n//                 <Table hover className=\"user-table align-items-center\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th className=\"border-bottom\">Serial No.</th>\r\n//                         <th className=\"border-bottom\">Employee Code</th>\r\n//                         <th className=\"border-bottom\">Name</th>\r\n//                         <th className=\"border-bottom\">Email Id</th>\r\n//                         <th className=\"border-bottom\">Mobile no.</th>            \r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {users && users.map((user, i) => \r\n//                     <tr key={i}>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {i + 1}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.empCode}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.name}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.email}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.mobile}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <Dropdown as={ButtonGroup}>\r\n//                         <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n//                             <span className=\"icon icon-sm\">\r\n//                             <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n//                             </span>\r\n//                         </Dropdown.Toggle>\r\n//                         <Dropdown.Menu>\r\n//                             {/* <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n//                             </Dropdown.Item> */}\r\n//                             <Dropdown.Item className=\"text-danger\" onClick= {()=> deleteHandler(user._id)}>\r\n//                             <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n//                             </Dropdown.Item>\r\n//                         </Dropdown.Menu>\r\n//                         </Dropdown>\r\n//                     </td>\r\n//                     </tr>\r\n//                     )}\r\n//                     </tbody>\r\n//                 </Table>\r\n//                 <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n//                     <Nav>\r\n//                     <Pagination className=\"mb-2 mb-lg-0\">\r\n//                         <Pagination.Prev>\r\n//                         Previous\r\n//                         </Pagination.Prev>\r\n//                         <Pagination.Item active>1</Pagination.Item>\r\n//                         <Pagination.Item>2</Pagination.Item>\r\n//                         <Pagination.Item>3</Pagination.Item>\r\n//                         <Pagination.Item>4</Pagination.Item>\r\n//                         <Pagination.Item>5</Pagination.Item>\r\n//                         <Pagination.Next>\r\n//                         Next\r\n//                         </Pagination.Next>\r\n//                     </Pagination>\r\n//                     </Nav>\r\n//                     {/* <small className=\"fw-bold\">\r\n//                     Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n//                     </small> */}\r\n//                 </Card.Footer>\r\n//                 </Card.Body>\r\n//             </Card>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default RemoveManager\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\nimport { teamLeadList } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport ReactTable from './ReactTable';\r\n\r\n\r\nconst TeamLead = ({history}) => {\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const fetchTeamLeads = useSelector((state) => state.fetchTeamLeads)\r\n    const { loading, error, teamlead: users } = fetchTeamLeads\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n        dispatch(teamLeadList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(teamLeads())\r\n    // }, [])\r\n\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     setUserList(users)\r\n    // }, [users])\r\n\r\n//     const [usersData, setUsersData] = useState([])\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//          useEffect(() => {\r\n//            setTimeout(()=>{\r\n//             axios.get(`/api/users/consultant`)\r\n//             .then(res => {\r\n//                 console.log(\"sgh\")\r\n//                 const users = res.data;\r\n//                 setUsersData(users)\r\n//                 setLoading(false)                     \r\n//             })\r\n//           }, 3000)\r\n          \r\n\r\n//          }, [])\r\n\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n        }\r\n        history.push('/')\r\n    }\r\n  \r\n\r\n  \r\n  \r\n  \r\n  if(users === undefined){\r\n  return (\r\n    <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n    \r\n  )\r\n  } else{\r\n    return (\r\n      \r\n      <>\r\n    \r\n      <div>\r\n        \r\n                    <ReactTable users={users}/>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n\r\n  export default TeamLead\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState, useEffect} from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n// import { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// import { Routes } from \"../routes\";\r\n// import { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\n// import transactions from \"../data/transactions\";\r\n// import commands from \"../data/commands\";\r\n\r\n// import { teamLeads } from '../actions/userActions'\r\n// import { deleteUser } from '../actions/userActions';\r\n// import Preloader from '../components/Preloader';\r\n\r\n\r\n\r\n// const RemoveTeamLead = () => {\r\n//     const [email, setEmail] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     // const userLogin = useSelector((state) => state.userLogin)\r\n//     // const {userInfo: user } = userLogin\r\n\r\n//     const fetchTeamLeads = useSelector((state) => state.fetchTeamLeads)\r\n//     const { loading, error, teamleads: users } = fetchTeamLeads\r\n\r\n//     const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n//     const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n\r\n//     useEffect(() => {\r\n//         dispatch(teamLeads())\r\n//     }, [dispatch, success])\r\n\r\n//     const deleteHandler = (id) =>{\r\n//         if (window.confirm('Are you sure')) {\r\n//       dispatch(deleteUser(id))\r\n//         }\r\n//     }\r\n    \r\n//     return (\r\n//         <div>\r\n//             { loading ? <Preloader /> : (\r\n//                 <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n//                 <Card.Body className=\"pt-0\">\r\n//                 <Table hover className=\"user-table align-items-center\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th className=\"border-bottom\">Serial No.</th>\r\n//                         <th className=\"border-bottom\">Employee Code</th>\r\n//                         <th className=\"border-bottom\">Name</th>\r\n//                         <th className=\"border-bottom\">Email Id</th>\r\n//                         <th className=\"border-bottom\">Mobile no.</th>            \r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {users && users.map((user, i) => \r\n//                     <tr key={i}>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {i + 1}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.empCode}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.name}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.email}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {user.mobile}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <Dropdown as={ButtonGroup}>\r\n//                         <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n//                             <span className=\"icon icon-sm\">\r\n//                             <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n//                             </span>\r\n//                         </Dropdown.Toggle>\r\n//                         <Dropdown.Menu>\r\n//                             {/* <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n//                             </Dropdown.Item> */}\r\n//                             <Dropdown.Item className=\"text-danger\" onClick= {()=> deleteHandler(user._id)}>\r\n//                             <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n//                             </Dropdown.Item>\r\n//                         </Dropdown.Menu>\r\n//                         </Dropdown>\r\n//                     </td>\r\n//                     </tr>\r\n//                     )}\r\n//                     </tbody>\r\n//                 </Table>\r\n//                 <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n//                     <Nav>\r\n//                     <Pagination className=\"mb-2 mb-lg-0\">\r\n//                         <Pagination.Prev>\r\n//                         Previous\r\n//                         </Pagination.Prev>\r\n//                         <Pagination.Item active>1</Pagination.Item>\r\n//                         <Pagination.Item>2</Pagination.Item>\r\n//                         <Pagination.Item>3</Pagination.Item>\r\n//                         <Pagination.Item>4</Pagination.Item>\r\n//                         <Pagination.Item>5</Pagination.Item>\r\n//                         <Pagination.Next>\r\n//                         Next\r\n//                         </Pagination.Next>\r\n//                     </Pagination>\r\n//                     </Nav>\r\n//                     {/* <small className=\"fw-bold\">\r\n//                     Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n//                     </small> */}\r\n//                 </Card.Footer>\r\n//                 </Card.Body>\r\n//             </Card>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default RemoveTeamLead\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\nimport Preloader from '../components/Preloader';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\n\r\n\r\n\r\nconst TotalLeads = ({match, history}) => {\r\n    // const pageNumber = match.params.pageNumber || 1\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [leadListd, setLeadList] = useState([])\r\n    const [leadData, setLeadData] = useState({\r\n        _id: '',\r\n        createdUser: '',\r\n        assignedUser: '',\r\n        consultant: '',\r\n        enquiryDate: '',\r\n        customer: '',\r\n        contactNumber: '',\r\n        project: {},\r\n        leadScore: '',\r\n        leadType: '',\r\n        status: '',\r\n        remarks: '',\r\n        nextFollow: '',\r\n        managerRemarks: '',\r\n        booked: false,\r\n        cancellation:false\r\n    })\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [trigger, setTrigger] = useState(false)\r\n    const [filterLeadType, setFilterLeadType] = useState('')\r\n    const [startDate, setStartDate] = useState('')\r\n    const [endDate, setEndDate] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    // const userLogin = useSelector((state) => state.userLogin)\r\n    // const {userInfo: user } = userLogin\r\n\r\n    const leadList = useSelector((state) => state.leadList)\r\n    const { loading, error, leadInfo } = leadList\r\n\r\n    const leadDetails = useSelector((state) => state.leadDetails)\r\n    const { loading: loadingLead, error: errorLead, leadInfo: leadInfoLead } = leadDetails\r\n    \r\n    const updateLead = useSelector((state) => state.updateLead)\r\n    const { loading : loadingUpdate, error : errorUpdate, success } = updateLead\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLeadList())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLeadData({})\r\n        if(leadInfoLead && ((leadType !== leadInfoLead.leadType) || (status !== leadInfoLead.status))){\r\n            setLeadData(leadInfoLead)\r\n            setLeadData(\r\n                leadData._id = leadInfoLead._id,\r\n                leadData.createdUser = leadInfoLead.createdUser, \r\n                leadData.assignedUser = leadInfoLead.assignedUser,\r\n                leadData.consultant= leadInfoLead.consultant,\r\n                leadData.enquiryDate= leadInfoLead.enquiryDate,\r\n                leadData.customer= leadInfoLead.customer,\r\n                leadData.contactNumber= leadInfoLead.contactNumber,\r\n                leadData.project= leadInfoLead.project,\r\n                leadData.leadScore= leadInfoLead.leadScore,\r\n                leadData.leadType= leadType,\r\n                leadData.status= status,\r\n                leadData.remarks= leadInfoLead.remarks,\r\n                leadData.nextFollow= leadInfoLead.nextFollow,\r\n                leadData.managerRemarks= leadInfoLead.managerRemarks,\r\n                leadData.booked= leadInfoLead.booked,\r\n                leadData.payment= leadInfoLead.payment,\r\n                leadData.totalSqft= leadInfoLead.totalSqft,\r\n                )\r\n\r\n            if(trigger){\r\n                \r\n                dispatch(updateLeadData(leadData))\r\n            setTrigger(false)\r\n            }\r\n        }else{\r\n           \r\n        dispatch(fetchLeadList())\r\n        console.log(\"20\")\r\n        }\r\n    }, [dispatch, leadInfoLead])\r\n\r\n    useEffect(() => {\r\n        \r\n        if (leadInfo && filterLeadType){\r\n            const  a = leadInfo.filter((lead) => {\r\n               return lead.leadType === filterLeadType\r\n            }) \r\n            \r\n            setLeadList(a)\r\n               \r\n               setTimeout(() => {\r\n                console.log(\"1\",leadListd)\r\n                }, 1000)       \r\n        }else{\r\n            setLeadList(leadInfo)\r\n            setTimeout(() => {\r\n                console.log(\"2\",leadListd)\r\n                }, 1000) \r\n        }\r\n    }, [filterLeadType, leadInfo])\r\n\r\n\r\n    const updateLeadTypeHandler = (e, lead) => {\r\n        e.preventDefault()\r\n        setLeadType(e.target.value)\r\n        dispatch(fetchleadDetails(lead._id))\r\n        setTrigger(true)\r\n        setStatus(lead.status)   \r\n    }\r\n\r\n    const updateStatusHandler = (e, lead) => {\r\n        e.preventDefault()\r\n        setStatus(e.target.value)\r\n        dispatch(fetchleadDetails(lead._id))\r\n        setTrigger(true)\r\n        setLeadType(lead.leadType)\r\n    }\r\n    \r\n    const cancelLeadHandler = (e, lead) => {\r\n        e.preventDefault()\r\n        if (window.confirm('Are you sure')) {\r\n            lead.cancellation = true\r\n            dispatch(addCancelLeadData(lead))\r\n            dispatch(deleteLead(lead._id))\r\n            setTimeout(() => {\r\n                dispatch(fetchLeadList())\r\n                \r\n                }, 1000) \r\n            \r\n          }\r\n        \r\n    }\r\n\r\n    const handleEdit = (e, lead) => {\r\n        e.preventDefault()\r\n        history.push(`/leads/${lead._id}/edit`)\r\n    }\r\n\r\n\r\n    return (\r\n      \r\n        <>\r\n        <Row>\r\n            <Col>\r\n            <div className=\"fw-normal\"><span>LeadType: </span> \r\n                <select defaultValue={filterLeadType}  onChange={(e) => setFilterLeadType(e.target.value)}>\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Hot\">Hot</option>\r\n                    <option value=\"Warm\">Warm</option>\r\n                    <option value=\"Cold\">Cold</option>\r\n                </select>\r\n            </div>\r\n            </Col>\r\n            <Col>\r\n            <span>Date Range: </span>\r\n            <input type=\"date\" value={startDate} onChange={(e)=>setStartDate(e)}/> \r\n            <span> to </span> \r\n            <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e)}/>\r\n            </Col>\r\n        </Row>\r\n        <div>\r\n            { loading? <h1>Preloader</h1> : (\r\n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n                <Card.Body className=\"pt-0\">\r\n                <Table hover className=\"user-table align-items-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"border-bottom\">Serial No.</th>\r\n                        <th className=\"border-bottom\">Enquiry date</th>\r\n                        <th className=\"border-bottom\">Customer</th>\r\n                        <th className=\"border-bottom\">Contact</th>\r\n                        <th className=\"border-bottom\">Project</th> \r\n                        <th className=\"border-bottom\">Lead Score</th>\r\n                        <th className=\"border-bottom\">Lead Type</th>\r\n                        <th className=\"border-bottom\">Status</th>\r\n                        <th className=\"border-bottom\">Remarks</th>\r\n                        <th className=\"border-bottom\">Next Follow Up</th>            \r\n                        <th className=\"border-bottom\">Manager Remarks</th>\r\n                        <th className=\"border-bottom\">1st Installment</th>            \r\n                        <th className=\"border-bottom\">2nd Installment</th> \r\n                        <th className=\"border-bottom\">3rd Installment</th>            \r\n                        <th className=\"border-bottom\">Total sqft</th>\r\n                        <th className=\"border-bottom\">Total Amount</th>            \r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {leadListd && leadListd.concat().reverse().map((lead, i) => \r\n                    <tr key={i}>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {leadInfo.length - i}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {new Date(`${lead.enquiryDate}`).toISOString().split('T')[0]}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.customer}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.contactNumber}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.project ? lead.project.subProject : ''}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.leadScore}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <select defaultValue={lead.leadType} onChange={(e) => updateLeadTypeHandler(e, lead)}>\r\n                            <option value=\"Hot\">Hot</option>\r\n                            <option value=\"Warm\">Warm</option>\r\n                            <option value=\"Cold\">Cold</option>\r\n                        </select>\r\n\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                            <select defaultValue={lead.status}  onChange={(e) => updateStatusHandler(e, lead)}>\r\n                                <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                                <option value=\"Visited\">Visited</option>\r\n                                <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                                <option value=\"Detail Shared\">Detail Shared</option>\r\n                                <option value=\"Lost\">Lost</option>\r\n                                <option value=\"Booked\">Booked</option>\r\n                            </select>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.remarks}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {new Date(`${lead.nextFollow}`).toISOString().split('T')[0]}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.managerRemarks}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.payment.firstInstallment}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.payment.secondInstallment}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.payment.thirdInstallment}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.totalSqft}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {(lead.payment.firstInstallment) + (lead.payment.secondInstallment) + (lead.payment.thirdInstallment) }\r\n                        </span>\r\n                    </td>\r\n  \r\n                    <td>\r\n                        <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                            <span className=\"icon icon-sm\">\r\n                            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {/* <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n                            </Dropdown.Item> */}\r\n                            {/* <Dropdown.Item><Link to={`/leads/${lead._id}/edit`}>\r\n                                <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit</Link>\r\n                            </Dropdown.Item> */}\r\n                            <Dropdown.Item onClick={(e) => handleEdit(e, lead)}>\r\n                                <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n                            </Dropdown.Item>\r\n                            {/* <Dropdown.Item className=\"text-danger\">\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" onClick = {(e)=>cancelLeadHandler(e, lead)}/> Remove\r\n                            </Dropdown.Item> */}\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td>\r\n                    </tr>\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n                <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n                    <Nav>\r\n                    <Pagination className=\"mb-2 mb-lg-0\">\r\n                        <Pagination.Prev>\r\n                        Previous\r\n                        </Pagination.Prev>\r\n                        <Pagination.Item active>1</Pagination.Item>\r\n                        <Pagination.Item>2</Pagination.Item>\r\n                        <Pagination.Item>3</Pagination.Item>\r\n                        <Pagination.Item>4</Pagination.Item>\r\n                        <Pagination.Item>5</Pagination.Item>\r\n                        <Pagination.Next>\r\n                        Next\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                    </Nav>\r\n                   {/* <small className=\"fw-bold\">\r\n                    Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n                    </small>  */}\r\n                </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n        </>\r\n    \r\n    )\r\n}\r\n\r\nexport default TotalLeads\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport axios from 'axios';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\n\r\nimport { addLeadData, fetchleadDetails} from '../actions/leadActions';\r\nimport { fetchCancelLeadList, deleteCancelledLead } from '../actions/cancellationLeadActions';\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\n\r\nconst CancelledLeads = ({history}) => {\r\n\r\n    // var element = document.getElementsByTagName(\"table\");\r\n    // element.classList.add(\"table-dark\");\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    // useEffect(() => {\r\n    //   dispatch(fetchLeadList())\r\n    // }, [])\r\n  \r\n    // const leadList = useSelector((state) => state.leadList)\r\n    //   const { loading, error, leadInfo } = leadList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    const selectOptions = {\r\n      0: 'Hot',\r\n      1: 'Warm',\r\n      2: 'Cold'\r\n    };\r\n  \r\n    const selectOptions2 = {\r\n      0: 'Yet to Visit',\r\n      1: 'Visited',\r\n      2: 'Visit Confirmed',\r\n      3: 'Detail Shared',\r\n      4: 'Lost',\r\n      5: 'Booked'\r\n    };\r\n  \r\n    const [leadData, setLeadData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n  \r\n           useEffect(() => {\r\n             setTimeout(()=>{\r\n              axios.get(`/api/cancelledleads`)\r\n              .then(res => {\r\n                  const lead = res.data;\r\n                  setLeadData(lead)\r\n                  setLoading(false)                     \r\n              })\r\n            }, 3000)\r\n            \r\n  \r\n           }, [])\r\n  \r\n           useEffect(() => {\r\n             console.log(leadData)\r\n           }, [leadData])\r\n  \r\n          // const retriveHandler = (lead) => {\r\n          //   const \r\n          //       userInfo\r\n          //      = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxNjU0ODFhMjVkMjk3MWE5NDU3OWUxNyIsImlhdCI6MTYzNDUyOTE3MSwiZXhwIjoxNjM0NjE1NTcxfQ.zWvQzJ1yMehQxu0JB3V_5RMlpLKhtHPmExGsGl-hN-Y\"\r\n               \r\n        \r\n          \r\n          //     const config = {\r\n          //       headers: {\r\n          //         'Content-Type': 'application/json',\r\n          //         Authorization: `Bearer ${userInfo}`,\r\n          //       },\r\n          //     }\r\n\r\n          //   axios.post(`/api/leads`,leadData,\r\n          //   config)\r\n          //   axios.delete(`/api/cancelledleads/${lead._id}`, config) \r\n          //   .then(res => {\r\n          //       history.go(0)            \r\n          //   })             \r\n          // }\r\n\r\n          const retriveHandler = (row) => {\r\n            dispatch(addLeadData(row))\r\n            dispatch(deleteCancelledLead(row._id))\r\n            history.go(0)\r\n          }\r\n\r\n          const editTableHandler = (lead) => {\r\n            history.push(`/cancelledleads/${lead._id}/edit`)\r\n          }\r\n         \r\n  \r\n          const { ExportCSVButton } = CSVExport;\r\n  \r\n      const columns = [\r\n        {\r\n          dataField: \"leadData\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, leadData) => {\r\n            console.log(row, index)\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customerName\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n            return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          },\r\n          filter: dateFilter({\r\n            defaultValue: {comparator: Comparator.GT }\r\n          })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"consultantName\",\r\n          text: \"Consultant\",\r\n          sort: true,\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"project.mainProject\",\r\n          text: \"Main Project\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Sub Project\",\r\n          filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n          filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollowUp\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (nextFollowUp) => {\r\n            return new Date(`${nextFollowUp}`).toISOString().split('T')[0]\r\n          },\r\n          filter: dateFilter({\r\n            defaultValue: {comparator: Comparator.GT }\r\n          })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          formatter: (cell,row) => {\r\n            return (\r\n              // <button className=\"btn btn-primary\" onClick={ ()=>retriveHandler(row) }>Retrive</button>\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n  \r\n  \r\n  \r\n  \r\n  \r\n    return (\r\n      <>\r\n      {loading? (\r\n        <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n      ) : (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"_id\"\r\n          data={ leadData }\r\n          columns={ columns }\r\n          exportCSV\r\n        >\r\n          {\r\n            props => (\r\n              <div>\r\n                <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                <hr />\r\n                {/* <BootstrapTable { ...props.baseProps } /> */}\r\n                <BootstrapTable\r\n                     { ...props.baseProps }\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                  />\r\n                    \r\n              </div>\r\n            )\r\n          }\r\n        </ToolkitProvider>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default CancelledLeads\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const TotalLeads = () => {\r\n//     const [email, setEmail] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n//     const [leadData, setLeadData] = useState({})\r\n//     const [leadType, setLeadType] = useState('')\r\n//     const [status, setStatus] = useState('')\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     // const userLogin = useSelector((state) => state.userLogin)\r\n//     // const {userInfo: user } = userLogin\r\n\r\n//     const cancelLeadList = useSelector((state) => state.cancelLeadList)\r\n//     const { loading, error, cancelLeadInfo } = cancelLeadList\r\n\r\n//     const leadDetails = useSelector((state) => state.leadDetails)\r\n//     const { loading: loadingLead, error: errorLead, leadInfo: leadInfoLead } = leadDetails\r\n\r\n\r\n\r\n//     useEffect(() => {\r\n//         dispatch(fetchCancelLeadList())\r\n//     }, [])\r\n\r\n\r\n\r\n\r\n//     const updateHandler = (e, lead) => {\r\n//         console.log(e.target.value)\r\n//         e.preventDefault()\r\n//         if(e.target.value){\r\n//         dispatch(addLeadData(lead))\r\n//         dispatch(deleteCancelledLead(lead._id))\r\n//         setTimeout(() => {\r\n//             dispatch(fetchCancelLeadList())\r\n//             }, 1000)\r\n//         console.log(lead)\r\n//         }       \r\n//     }\r\n    \r\n//     return (\r\n//         <div>\r\n//             { loading ? <Preloader /> : (\r\n//                 <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n//                 <Card.Body className=\"pt-0\">\r\n//                 <Table hover className=\"user-table align-items-center\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th className=\"border-bottom\">Serial No.</th>\r\n//                         <th className=\"border-bottom\">Enquiry date</th>\r\n//                         <th className=\"border-bottom\">Customer</th>\r\n//                         <th className=\"border-bottom\">Contact</th>\r\n//                         <th className=\"border-bottom\">Project</th> \r\n//                         <th className=\"border-bottom\">Lead Score</th>\r\n//                         <th className=\"border-bottom\">Lead Type</th>\r\n//                         <th className=\"border-bottom\">Status</th>\r\n//                         <th className=\"border-bottom\">Remarks</th>\r\n//                         <th className=\"border-bottom\">Next Follow Up</th>            \r\n//                         <th className=\"border-bottom\">Manager Remarks</th>                       \r\n//                         <th className=\"border-bottom\">Cancellation</th> \r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {cancelLeadInfo && cancelLeadInfo.map((lead, i) => \r\n//                     <tr key={i}>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {i+1}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {new Date(`${lead.enquiryDate}`).toISOString().split('T')[0]}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.customer}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.contactNumber}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.project.subProject}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.leadScore}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.leadType}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                             {lead.status}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.remarks}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {new Date(`${lead.nextFollow}`).toISOString().split('T')[0]}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.managerRemarks}\r\n//                         </span>\r\n//                     </td>\r\n//                     {/* <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.firstInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.secondInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.thirdInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.totalSqft ? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {(lead.payment.firstInstallment) + (lead.payment.secondInstallment) + (lead.payment.thirdInstallment) }\r\n//                         </span>\r\n//                     </td> */}\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                             <select defaultValue={!lead.cancellation} onChange={(e) => updateHandler(e, lead)}>\r\n//                                 <option value={false}>Cancelled</option>\r\n//                                 <option value={true}>Not Cancel</option>\r\n//                             </select>\r\n//                         </span>\r\n//                     </td>\r\n//                     {/* <td>\r\n//                         <Dropdown as={ButtonGroup}>\r\n//                         <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n//                             <span className=\"icon icon-sm\">\r\n//                             <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n//                             </span>\r\n//                         </Dropdown.Toggle>\r\n//                         <Dropdown.Menu>\r\n//                             <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item><Link to={`/leads/${lead._id}/edit`}>\r\n//                                 <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit</Link>\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item className=\"text-danger\">\r\n//                             <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n//                             </Dropdown.Item>\r\n//                         </Dropdown.Menu>\r\n//                         </Dropdown>\r\n//                     </td> */}\r\n//                     </tr>\r\n//                     )}\r\n//                     </tbody>\r\n//                 </Table>\r\n//                 <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n//                     <Nav>\r\n//                     <Pagination className=\"mb-2 mb-lg-0\">\r\n//                         <Pagination.Prev>\r\n//                         Previous\r\n//                         </Pagination.Prev>\r\n//                         <Pagination.Item active>1</Pagination.Item>\r\n//                         <Pagination.Item>2</Pagination.Item>\r\n//                         <Pagination.Item>3</Pagination.Item>\r\n//                         <Pagination.Item>4</Pagination.Item>\r\n//                         <Pagination.Item>5</Pagination.Item>\r\n//                         <Pagination.Next>\r\n//                         Next\r\n//                         </Pagination.Next>\r\n//                     </Pagination>\r\n//                     </Nav>\r\n//                     {/* <small className=\"fw-bold\">\r\n//                     Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n//                     </small> */}\r\n//                 </Card.Footer>\r\n//                 </Card.Body>\r\n//             </Card>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default TotalLeads\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails} from '../actions/leadActions';\r\nimport Preloader from '../components/Preloader';\r\n\r\n\r\n\r\nconst LostSales = ({history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [leadData, setLeadData] = useState({})\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // const userLogin = useSelector((state) => state.userLogin)\r\n    // const {userInfo: user } = userLogin\r\n\r\n    const leadList = useSelector((state) => state.leadList)\r\n    const { loading, error, leadInfo } = leadList\r\n\r\n    const leadDetails = useSelector((state) => state.leadDetails)\r\n    const { loading: loadingLead, error: errorLead, leadInfo: leadInfoLead } = leadDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLeadList())\r\n        // if(leadInfoLead && ((leadInfoLead.leadType !== leadType) || (leadInfoLead.status !== status))){\r\n        //     setLeadData(leadInfoLead)\r\n        //     setLeadData(leadData.leadType = leadType)\r\n        //     setLeadData(leadData.status = status)\r\n        //     dispatch(updateLeadData(leadData))\r\n        // }\r\n    }, [dispatch, leadInfoLead, status, leadData])\r\n\r\n\r\n    const updateLeadTypeHandler = (e, id) => {\r\n        setLeadType(e.target.value)\r\n        dispatch(fetchleadDetails(id))\r\n        // if(leadInfoLead && ((leadInfoLead.leadType !== leadType) || (leadInfoLead.status !== status))){\r\n        //     setLeadData(leadInfoLead)\r\n        //     setLeadData(leadData.leadType = leadType)\r\n        //     setLeadData(leadData.status = status)\r\n        //     dispatch(updateLeadData(leadData))\r\n        // }\r\n    }\r\n\r\n    const updateStatusHandler = (e, id) => {\r\n        setStatus(e.target.value)\r\n        dispatch(fetchleadDetails(id))\r\n        // if(leadInfoLead && ((leadInfoLead.leadType !== leadType) || (leadInfoLead.status !== status))){\r\n        //     setLeadData(leadInfoLead)\r\n        //     setLeadData(leadData.leadType = leadType)\r\n        //     setLeadData(leadData.status = status)\r\n        //     dispatch(updateLeadData(leadData))\r\n        // }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { loading ? <Preloader /> : (\r\n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n                <Card.Body className=\"pt-0\">\r\n                <Table hover className=\"user-table align-items-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"border-bottom\">Serial No.</th>\r\n                        <th className=\"border-bottom\">Enquiry date</th>\r\n                        <th className=\"border-bottom\">Customer</th>\r\n                        <th className=\"border-bottom\">Contact</th>\r\n                        <th className=\"border-bottom\">Project</th> \r\n                        <th className=\"border-bottom\">Lead Score</th>\r\n                        <th className=\"border-bottom\">Lead Type</th>\r\n                        <th className=\"border-bottom\">Status</th>\r\n                        <th className=\"border-bottom\">Remarks</th>\r\n                        <th className=\"border-bottom\">Next Follow Up</th>            \r\n                        <th className=\"border-bottom\">Manager Remarks</th> \r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {leadInfo && leadInfo.map((lead, i) => \r\n                    (lead.status === 'Lost') && (\r\n                    <tr key={i}>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {i+1}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {new Date(`${lead.enquiryDate}`).toISOString().split('T')[0]}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.customerName}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.contactNumber}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.project.subProject}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.leadScore}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <select defaultValue={lead.leadType}  onChange={(e) => updateLeadTypeHandler(e, lead._id)}>\r\n                            <option value=\"Hot\">Hot</option>\r\n                            <option value=\"Warm\">Warm</option>\r\n                            <option value=\"Hot\">Cold</option>\r\n                        </select>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                            <select defaultValue={lead.status} onChange={(e) => updateStatusHandler(e, lead._id)}>\r\n                                <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                                <option value=\"Visited\">Visited</option>\r\n                                <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                                <option value=\"Detail Shared\">Detail Shared</option>\r\n                                <option value=\"Lost\">Lost</option>\r\n                            </select>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.remarks}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {new Date(`${lead.nextFollow}`).toISOString().split('T')[0]}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.managerRemarks}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                            <span className=\"icon icon-sm\">\r\n                            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"text-danger\">\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td>\r\n                    </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n                    <Nav>\r\n                    <Pagination className=\"mb-2 mb-lg-0\">\r\n                        <Pagination.Prev>\r\n                        Previous\r\n                        </Pagination.Prev>\r\n                        <Pagination.Item active>1</Pagination.Item>\r\n                        <Pagination.Item>2</Pagination.Item>\r\n                        <Pagination.Item>3</Pagination.Item>\r\n                        <Pagination.Item>4</Pagination.Item>\r\n                        <Pagination.Item>5</Pagination.Item>\r\n                        <Pagination.Next>\r\n                        Next\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                    </Nav>\r\n                    {/* <small className=\"fw-bold\">\r\n                    Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n                    </small> */}\r\n                </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LostSales\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails} from '../actions/leadActions';\r\n\r\n\r\n\r\nconst SiteVisits = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [leadData, setLeadData] = useState({})\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // const userLogin = useSelector((state) => state.userLogin)\r\n    // const {userInfo: user } = userLogin\r\n\r\n    const leadList = useSelector((state) => state.leadList)\r\n    const { loading, error, leadInfo } = leadList\r\n\r\n    const leadDetails = useSelector((state) => state.leadDetails)\r\n    const { loading: loadingLead, error: errorLead, leadInfo: leadInfoLead } = leadDetails\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(leadInfoLead && ((leadInfoLead.leadType !== leadType) || (leadInfoLead.status !== status))){\r\n            setLeadData(leadInfoLead)\r\n            setLeadData(leadData.leadType = leadType)\r\n            setLeadData(leadData.status = status)\r\n            dispatch(updateLeadData(leadData))\r\n        }\r\n        dispatch(fetchLeadList())\r\n    }, [leadInfoLead])\r\n\r\n\r\n    const updateHandler = (e, id) => {\r\n        setLeadType(e.target.value)\r\n        dispatch(fetchleadDetails(id))\r\n        // if(leadInfoLead && ((leadInfoLead.leadType !== leadType) || (leadInfoLead.status !== status))){\r\n        //     setLeadData(leadInfoLead)\r\n        //     setLeadData(leadData.leadType = leadType)\r\n        //     setLeadData(leadData.status = status)\r\n        //     dispatch(updateLeadData(leadData))\r\n        // }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { loading ? <h1>Loading.....</h1> : (\r\n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n                <Card.Body className=\"pt-0\">\r\n                <Table hover className=\"user-table align-items-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"border-bottom\">Serial No.</th>\r\n                        <th className=\"border-bottom\">Enquiry date</th>\r\n                        <th className=\"border-bottom\">Customer</th>\r\n                        <th className=\"border-bottom\">Contact</th>\r\n                        <th className=\"border-bottom\">Project</th> \r\n                        <th className=\"border-bottom\">Lead Score</th>\r\n                        <th className=\"border-bottom\">Lead Type</th>\r\n                        <th className=\"border-bottom\">Status</th>\r\n                        <th className=\"border-bottom\">Remarks</th>\r\n                        <th className=\"border-bottom\">Next Follow Up</th>            \r\n                        <th className=\"border-bottom\">Manager Remarks</th> \r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {leadInfo && leadInfo.map((lead, i) => \r\n                    (lead.status === 'Visited') && (\r\n                    <tr key={i}>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {i+1}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {new Date(`${lead.enquiryDate}`).toISOString().split('T')[0]}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.customer}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.contactNumber}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.project.subProject}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.leadScore}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <select defaultValue={lead.leadType}  onChange={(e) => updateHandler(e, lead._id)}>\r\n                            <option value=\"Hot\">Hot</option>\r\n                            <option value=\"Warm\">Warm</option>\r\n                            <option value=\"Hot\">Cold</option>\r\n                        </select>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                            <select defaultValue={lead.status} onClick={(e) => setStatus(e.target.value)}>\r\n                                <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                                <option value=\"Visited\">Visited</option>\r\n                                <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                                <option value=\"Detail Shared\">Detail Shared</option>\r\n                                <option value=\"Lost\">Lost</option>\r\n                            </select>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.remarks}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {new Date(`${lead.nextFollow}`).toISOString().split('T')[0]}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {lead.managerRemarks}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                            <span className=\"icon icon-sm\">\r\n                            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"text-danger\">\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td>\r\n                    </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n                    <Nav>\r\n                    <Pagination className=\"mb-2 mb-lg-0\">\r\n                        <Pagination.Prev>\r\n                        Previous\r\n                        </Pagination.Prev>\r\n                        <Pagination.Item active>1</Pagination.Item>\r\n                        <Pagination.Item>2</Pagination.Item>\r\n                        <Pagination.Item>3</Pagination.Item>\r\n                        <Pagination.Item>4</Pagination.Item>\r\n                        <Pagination.Item>5</Pagination.Item>\r\n                        <Pagination.Next>\r\n                        Next\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                    </Nav>\r\n                    {/* <small className=\"fw-bold\">\r\n                    Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n                    </small> */}\r\n                </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SiteVisits\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\n\r\nimport { consultantList, updateUser } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\nimport Preloader from '../components/Preloader';\r\n\r\n\r\n\r\nconst SetMilestone = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [bookingNumber, setBookingNumber] = useState(0)\r\n    const [ userDetails, setUserDetails] = useState({})\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // const userLogin = useSelector((state) => state.userLogin)\r\n    // const {userInfo: user } = userLogin\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading, error, consultants: users } = fetchConsultants\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(consultantList())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if(userDetails.name){\r\n        dispatch(updateUser(userDetails))\r\n        }\r\n    },[dispatch, userDetails])\r\n\r\n\r\n    const bookingHandler = (e, user) => {\r\n        e.preventDefault()\r\n        user.setMilestone ={\r\n            bookings : bookingNumber,\r\n            leads : bookingNumber * 6,\r\n            siteVisits : bookingNumber * 4\r\n        }\r\n        setUserDetails(user)\r\n        console.log(userDetails)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { loading ? <Preloader /> : (\r\n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n                <Card.Body className=\"pt-0\">\r\n                <Table hover className=\"user-table align-items-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"border-bottom\">Serial No.</th>\r\n                        <th className=\"border-bottom\">Employee Code</th>\r\n                        <th className=\"border-bottom\">Name</th>\r\n                        <th className=\"border-bottom\">Email Id</th>\r\n                        <th className=\"border-bottom\">Mobile no.</th> \r\n                        <th className=\"border-bottom\">Bookings Target<br/>(per month)</th> \r\n                        <th className=\"border-bottom\">Site Visit Target<br/>(per month)</th>  \r\n                        <th className=\"border-bottom\">Lead Generation Target<br/>(per month)</th> \r\n                        {/* <th className=\"border-bottom\">Leads<br/>(per month)</th>  \r\n                        <th className=\"border-bottom\">Site Visits<br/>(per month)</th>             */}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {users && users.map((user, i) =>                       \r\n                       <tr key={i}>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {i+1}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.empCode}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.name}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.email}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.mobile}\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n\r\n                        <input\r\n                            type=\"number\"\r\n                            defaultValue={user.setMilestone.bookings}\r\n                            onChange = { (e) => setBookingNumber(e.target.value)}\r\n                        />\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <input\r\n                            type=\"number\"\r\n                            value={4 * user.setMilestone.bookings}\r\n                            disabled\r\n                        />\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <input\r\n                            type=\"number\"\r\n                            value={6 * user.setMilestone.bookings}\r\n                            disabled\r\n                        />\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <div className=\"mt-3\">\r\n                            <Button variant=\"primary\" type=\"submit\" onClick = {(e) => bookingHandler(e,user)}>Save</Button>\r\n                        </div>\r\n                    </td>\r\n                    {/* <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.setMilestone.bookings * 6}\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.setMilestone.bookings * 4}\r\n                        </span>\r\n                    </td> */}\r\n                    \r\n                    {/* <td>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={}/>\r\n                    </td> */}\r\n                    {/* <td>\r\n                        <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                            <span className=\"icon icon-sm\">\r\n                            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"text-danger\" onClick= {()=> deleteHandler(user._id)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td> */}\r\n                    </tr>\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n                {/* <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n                    <Nav>\r\n                    <Pagination className=\"mb-2 mb-lg-0\">\r\n                        <Pagination.Prev>\r\n                        Previous\r\n                        </Pagination.Prev>\r\n                        <Pagination.Item active>1</Pagination.Item>\r\n                        <Pagination.Item>2</Pagination.Item>\r\n                        <Pagination.Item>3</Pagination.Item>\r\n                        <Pagination.Item>4</Pagination.Item>\r\n                        <Pagination.Item>5</Pagination.Item>\r\n                        <Pagination.Next>\r\n                        Next\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                    </Nav>\r\n                    {/* <small className=\"fw-bold\">\r\n                    Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n                    </small> \r\n                </Card.Footer> */}\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetMilestone\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faCommentsDollar, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\n\r\nimport { fetchUserList, updateUser } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\nimport Preloader from '../components/Preloader';\r\n\r\n\r\n\r\nconst Promotion = ({history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [role, setRole] = useState('')\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // const userLogin = useSelector((state) => state.userLogin)\r\n    // const {userInfo: user } = userLogin\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n    const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUserList())\r\n    }, [dispatch, success])\r\n\r\n    useEffect(() => {\r\n        if(userData){\r\n        dispatch(updateUser(userData))\r\n        }\r\n    }, [userData])\r\n\r\n    const updateHandler = (e,user) =>{\r\n        console.log(e.target.value)\r\n        setRole(e.target.value)\r\n        user.role = e.target.value\r\n        setUserData(user)\r\n        console.log(userData)     \r\n    }\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { loading ? <Preloader /> : (\r\n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n                <Card.Body className=\"pt-0\">\r\n                <Table hover className=\"user-table align-items-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"border-bottom\">Serial No.</th>\r\n                        <th className=\"border-bottom\">Employee Code</th>\r\n                        <th className=\"border-bottom\">Name</th>\r\n                        <th className=\"border-bottom\">Email Id</th>\r\n                        <th className=\"border-bottom\">Mobile no.</th> \r\n                        <th className=\"border-bottom\">Role</th>            \r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {users && users.map((user, i) => \r\n                    <tr key={i}>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {i+1}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.empCode}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.name}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.email}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.mobile}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <select defaultValue={user.role} onChange={(e) =>updateHandler(e, user)}>\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"Admin\">Admin</option>\r\n                            <option value=\"Manager\">Manager</option>\r\n                            <option value=\"cp manager\">CP Manager</option>\r\n                            <option value=\"asm\">ASM</option>\r\n                            <option value=\"TeamLead\">TeamLead</option>\r\n                            <option value=\"Consultant\">Consultant</option>\r\n                            <option value=\"channel patner\">Channel Patner</option>\r\n                        </select>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                            <span className=\"icon icon-sm\">\r\n                            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {/* <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n                            </Dropdown.Item> */}\r\n                            <Dropdown.Item className=\"text-danger\" onClick= {()=> deleteHandler(user._id)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td>\r\n                    </tr>\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n                <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n                    <Nav>\r\n                    {/* <Pagination className=\"mb-2 mb-lg-0\">\r\n                        <Pagination.Prev>\r\n                        Previous\r\n                        </Pagination.Prev>\r\n                        <Pagination.Item active>1</Pagination.Item>\r\n                        <Pagination.Item>2</Pagination.Item>\r\n                        <Pagination.Item>3</Pagination.Item>\r\n                        <Pagination.Item>4</Pagination.Item>\r\n                        <Pagination.Item>5</Pagination.Item>\r\n                        <Pagination.Next>\r\n                        Next\r\n                        </Pagination.Next>\r\n                    </Pagination> */}\r\n                    </Nav>\r\n                    {/* <small className=\"fw-bold\">\r\n                    Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n                    </small> */}\r\n                </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Promotion\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport { projects, updateProject, addProject } from \"../actions/projectActions\";\r\n\r\nexport default ({history}) => {\r\n  const [projectd, setProject] = useState({})\r\n  const [mainProject, setMainProject] = useState('')\r\n  const [addMainProject, setAddMainProject] = useState('')\r\n  const [main, setMain] = useState('')\r\n  const [addSubProject, setAddSubProject] = useState('')\r\n  const [projectId, setProjectId] = useState('')\r\n  const [index, setIndex] = useState(0)\r\n  const [index2, setIndex2] = useState(0)\r\n   \r\n    const dispatch = useDispatch()\r\n\r\n    const fetchProjects = useSelector((state) => state.fetchProjects)\r\n    const { loading, error , projectInfo } = fetchProjects\r\n\r\n    const updateProjectd = useSelector((state) => state.updateProject)\r\n    const { success } = updateProjectd\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    // const addProject = useSelector((state) => state.addProject)\r\n    // const {projectInfo: projectadded } = addProject\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n        dispatch(projects())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history, success, ])\r\n\r\n    // useEffect(() => {\r\n    //   dispatch(projects())\r\n    // }, [])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n      if(projectInfo){\r\n        const i = projectInfo.findIndex((element,i) => {\r\n          if (element.mainProject === mainProject){\r\n            setProjectId(element._id)\r\n          return true\r\n          }\r\n        })\r\n        setIndex(i);\r\n       \r\n      }\r\n    }, [mainProject])\r\n\r\n    useEffect(() => {\r\n      if(projectInfo){\r\n        const i = projectInfo.findIndex((element,i) => {\r\n          if (element.mainProject === main){\r\n          return true\r\n          }\r\n        })\r\n        setIndex2(i);\r\n       \r\n      }\r\n    }, [main])\r\n\r\n    const addProjectHandler= () => {\r\n      dispatch(addProject({\r\n        mainProject: addMainProject,\r\n        subProject: []\r\n      }))\r\n      setAddMainProject('')\r\n      setIndex(0)\r\n      setTimeout(() => {\r\n        dispatch(projects())\r\n        }, 1000)\r\n    }\r\n\r\n    const addSubProjectHandler= () => {\r\n      setProject(projectd.subProject = [...projectInfo[index].subProject,addSubProject],\r\n        projectd.mainProject = projectInfo[index].mainProject,\r\n        projectd._id = projectInfo[index]._id\r\n        )\r\n      setTimeout(() => {\r\n        dispatch(updateProject(projectd))\r\n        }, 2000)\r\n        setTimeout(() => {\r\n          dispatch(projects())\r\n          }, 3000)\r\n      setAddSubProject('')\r\n    }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n      <h5 className=\"mb-4\">Project and Subproject List</h5>\r\n        <Form>\r\n          <Row>\r\n          <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"projectList\">\r\n                <Form.Label>Project List</Form.Label>\r\n                <Form.Select required defaultValue={main} onChange = {(e)=> setMain(e.target.value)} >\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro.mainProject}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProjectList\">\r\n                <Form.Label>Sub Project List</Form.Label>\r\n                <Form.Select required>\r\n                  {\r\n                      projectInfo && projectInfo[index2] && (projectInfo[index2].subProject.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n            \r\n          </Row>\r\n          </Form>\r\n        <h5 className=\"mt-4\">Add Project</h5>\r\n        <Form>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"addProject\">\r\n                <Form.Label>Add Project</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter project\"  onChange={(e)=>setAddMainProject(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mt-4 pt-2\">\r\n              <Button variant=\"primary\" type=\"submit\" value={addMainProject} onClick={() => addProjectHandler()}>Add Project</Button>\r\n            </Col>\r\n            \r\n            \r\n          </Row>\r\n          </Form>         \r\n          <h5 className=\"mb-4 mt-4\">Add Sub Project</h5>\r\n          <Form>\r\n          <Row>\r\n          <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"projectList\">\r\n                <Form.Label>Select Project</Form.Label>\r\n                <Form.Select required defaultValue={mainProject}  onChange = {(e)=> setMainProject(e.target.value)}>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro.mainProject}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"addsub\">\r\n                <Form.Label>Add Sub Project</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter Sub Project\" value={addSubProject} onChange={(e)=>setAddSubProject(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mt-4 pt-2\">\r\n              <Button variant=\"primary\" type=\"submit\" onClick={() => addSubProjectHandler()}>Add SubProject</Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        \r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n    ACTIVITY_LOG_DETAIL_REQUEST,\r\n    ACTIVITY_LOG_DETAIL_SUCCESS,\r\n    ACTIVITY_LOG_DETAIL_RESET,\r\n    ACTIVITY_LOG_DETAIL_FAIL\r\n} from '../constants/activityLogConstants'\r\n\r\nexport const activityLogData = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ACTIVITY_LOG_DETAIL_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(\r\n        `/api/activityLog/${id}`,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: ACTIVITY_LOG_DETAIL_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: ACTIVITY_LOG_DETAIL_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","export const ACTIVITY_LOG_DETAIL_REQUEST = 'ACTIVITY_LOG_DETAIL_REQUEST'\r\nexport const ACTIVITY_LOG_DETAIL_SUCCESS = 'ACTIVITY_LOG_DETAIL_SUCCESS'\r\nexport const ACTIVITY_LOG_DETAIL_FAIL = 'ACTIVITY_LOG_DETAIL_FAIL'\r\nexport const ACTIVITY_LOG_DETAIL_RESET = 'ACTIVITY_LOG_DETAIL_RESET'","import axios from 'axios'\r\nimport {\r\n    ADD_TASK_REQUEST,\r\n    ADD_TASK_SUCCESS,\r\n    ADD_TASK_FAIL,\r\n    FETCH_ALL_TASK_REQUEST,\r\n    FETCH_ALL_TASK_SUCCESS,\r\n    FETCH_ALL_TASK_FAIL,\r\n    FETCH_TASK_REQUEST,\r\n    FETCH_TASK_SUCCESS,\r\n    FETCH_TASK_FAIL,\r\n    DELETE_TASK_REQUEST,\r\n    DELETE_TASK_SUCCESS,\r\n    DELETE_TASK_FAIL,\r\n    UPDATE_TASK_REQUEST,\r\n    UPDATE_TASK_SUCCESS,\r\n    UPDATE_TASK_FAIL\r\n} from '../constants/taskManagerContants';\r\n\r\n/* Add task */\r\n// export const addTask = () => async (dispatch, getState) => {\r\n//     try {\r\n//       dispatch({\r\n//         type: ADD_TASK_REQUEST,\r\n//       })\r\n\r\n//       const {\r\n//         userLogin: { userInfo },\r\n//       } = getState()\r\n\r\n\r\n//       const config = {\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           Authorization: `Bearer ${userInfo.token}`\r\n//         },\r\n//       }   \r\n  \r\n//       const { data } = await axios.post(\r\n//         `/api/todo/new`,\r\n//         config\r\n//       )\r\n  \r\n//       dispatch({\r\n//         type: ADD_TASK_SUCCESS,\r\n//         payload: data,\r\n//       })\r\n  \r\n//     } catch (error) {\r\n//       dispatch({\r\n//         type: ADD_TASK_FAIL,\r\n//         payload:\r\n//           error.response && error.response.data.message\r\n//             ? error.response.data.message\r\n//             : error.message,\r\n//       })\r\n//     }\r\n//   }\r\n\r\nexport const addTask = (task) => async (dispatch,getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_TASK_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n    }\r\n\r\n\r\n    \r\n\r\n    const { data } = await axios.post(\r\n      '/api/todo/new',task,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ADD_TASK_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_TASK_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n/* Fetch all tasks */\r\nexport const fetchTasks = () => async (dispatch,getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FETCH_ALL_TASK_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        },\r\n      }\r\n  \r\n\r\n      \r\n  \r\n      const { data } = await axios.get(\r\n        '/api/todo/list',\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: FETCH_ALL_TASK_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_ALL_TASK_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Fetch tasks by id */\r\nexport const fetchIndividualTasks = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FETCH_TASK_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        },\r\n      }\r\n  \r\n\r\n      \r\n  \r\n      const { data } = await axios.get(\r\n        `/api/todo/${id}`,\r\n        config\r\n      )\r\n    \r\n      dispatch({\r\n        type: FETCH_TASK_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_TASK_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* delete tasks by id */\r\nexport const deleteTask = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: DELETE_TASK_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        },\r\n      }\r\n  \r\n\r\n      \r\n  \r\n      const { data } = await axios.delete(\r\n        `/api/todo/${id}`,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: DELETE_TASK_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_TASK_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /* update tasks by id */\r\nexport const updateTask = (task) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_TASK_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n    }\r\n\r\n\r\n    \r\n\r\n    const { data } = await axios.put(\r\n      `/api/todo/${task._id}`, task,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: UPDATE_TASK_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_TASK_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","export const ADD_TASK_REQUEST = 'ADD_TASK_REQUEST'\r\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS'\r\nexport const ADD_TASK_FAIL = 'ADD_TASK_FAIL'\r\n\r\nexport const FETCH_ALL_TASK_REQUEST = 'FETCH_ALL_TASK_REQUEST'\r\nexport const FETCH_ALL_TASK_SUCCESS = 'FETCH_ALL_TASK_SUCCESS'\r\nexport const FETCH_ALL_TASK_FAIL = 'FETCH_ALL_TASK_FAIL'\r\n\r\nexport const FETCH_TASK_REQUEST = 'FETCH_TASK_REQUEST'\r\nexport const FETCH_TASK_SUCCESS = 'FETCH_TASK_SUCCESS'\r\nexport const FETCH_TASK_FAIL = 'FETCH_TASK_FAIL'\r\n\r\nexport const DELETE_TASK_REQUEST = 'DELETE_TASK_REQUEST'\r\nexport const DELETE_TASK_SUCCESS = 'DELETE_TASK_SUCCESS'\r\nexport const DELETE_TASK_FAIL = 'DELETE_TASK_FAIL'\r\nexport const DELETE_TASK_RESET = 'DELETE_TASK_RESET'\r\n\r\nexport const UPDATE_TASK_REQUEST = 'UPDATE_TASK_REQUEST'\r\nexport const UPDATE_TASK_SUCCESS = 'UPDATE_TASK_SUCCESS'\r\nexport const UPDATE_TASK_FAIL = 'UPDATE_TASK_FAIL'\r\nexport const UPDATE_TASK_RESET = 'UPDATE_TASK_RESET'","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup, Modal, Form } from '@themesberg/react-bootstrap';\r\n// import { Form } from 'react-bootstrap';\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport { activityLogData } from '../actions/activityLogActions'\r\nimport { deleteTask, fetchIndividualTasks } from '../actions/taskManagerActions';\r\nimport { fetchUserList } from '../actions//userActions'\r\nimport { addTask, updateTask } from '../actions/taskManagerActions';\r\nimport { UPDATE_TASK_RESET, DELETE_TASK_RESET } from '../constants/taskManagerContants';\r\n\r\n\r\n// delete lead -> null remaining\r\n\r\nconst TaskManager = ({ history, match }) => {\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showEditDefault, setShowEditDefault] = useState(false);\r\n    const [task, setTask] = useState('')\r\n    const [dueDate, setDueDate] = useState('')\r\n    const [assignTo, setAssignTo] = useState('')\r\n    const [note, setNote] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [editedTask, setEditedTask] = useState('')\r\n    const [previousTask, setPreviousTask] = useState('')\r\n    const [editedDueDate, setEditedDueDate] = useState('')\r\n    const [editedAssignTo, setEditedAssignTo] = useState('')\r\n    const [editedNote, setEditedNote] = useState('')\r\n    const [editedStatus, setEditedStatus] = useState('')\r\n    \r\n\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n\r\n    const handleEditClose = () => setShowEditDefault(false);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const fetchUserTasks = useSelector((state) => state.fetchIndividualTasks)\r\n    const { loading, error, taskList } = fetchUserTasks\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { users } = userList\r\n\r\n    const addTaskData = useSelector((state) => state.addTask)\r\n    const { loading: taskLoading, error: taskError, addedTask } = addTaskData\r\n\r\n    const updateTaskData = useSelector((state) => state.updateTask)\r\n    const { success } = updateTaskData\r\n\r\n    const deleteTaskData = useSelector((state) => state.deleteTask)\r\n    const { success: deleteSuccess } = deleteTaskData\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n            dispatch(fetchUserList())\r\n        } else {\r\n            history.push(`/login`)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(success) {\r\n            dispatch({\r\n                type: UPDATE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    },[success])\r\n\r\n    useEffect(()=>{\r\n        if(deleteSuccess) {\r\n            dispatch({\r\n                type: DELETE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    }, [deleteSuccess])\r\n\r\n    const addtaskHandler = (e) => {\r\n        e.preventDefault()\r\n       \r\n        dispatch(addTask({\r\n            task,\r\n            member: userInfo._id,\r\n            dueDate,\r\n            note,\r\n            assignTo : assignTo? assignTo: userInfo._id\r\n        }))\r\n\r\n        setShowDefault(false)\r\n        dispatch(fetchIndividualTasks(userInfo._id))\r\n        setAssignTo('')\r\n        setDueDate('')\r\n        setNote('')\r\n        setStatus('')\r\n        setTask('')\r\n        \r\n    }\r\n\r\n    const taskStatusHandler = (e, task) => {\r\n      \r\n        if(task.status === 'Pending'){\r\n            task.status = 'Completed'\r\n        }else{\r\n            task.status ='Pending'\r\n        }\r\n\r\n        dispatch(updateTask(task))\r\n    }\r\n\r\n    const deleteTaskHandler = (e, task) => {\r\n        dispatch(deleteTask(task._id))\r\n    }\r\n\r\n\r\n    const editTaskHandler = (e,task) => {\r\n        e.preventDefault()\r\n        setPreviousTask(task)\r\n        setShowEditDefault(true)\r\n\r\n        setEditedTask(task.task)\r\n        setEditedDueDate(task.dueDate)\r\n        setEditedNote(task.note)\r\n        setEditedAssignTo(task.assignTo)\r\n    }\r\n\r\n    const saveEditedTaskHandler = (e, task) => {\r\n        e.preventDefault()\r\n        dispatch(updateTask({\r\n            _id : previousTask._id,\r\n            task : editedTask,\r\n            note: editedNote,\r\n            status : editedStatus,\r\n            member: userInfo._id,\r\n            assignTo: editedAssignTo,\r\n            dueDate: editedDueDate\r\n        }))\r\n\r\n        setShowEditDefault(false)\r\n        setEditedAssignTo('')\r\n        setEditedDueDate('')\r\n        setEditedNote('')\r\n        setEditedStatus('')\r\n        setEditedTask('')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<Preloader />) : error ? (<Alert>{error}</Alert>) : true ? (\r\n                <>\r\n                    <Row className='pt-3 pb-3'>\r\n                        <Col>\r\n                        {/* <a href=\"#\" className='btn btn-primary'>Add New Task</a> */}\r\n                        <Button variant=\"primary\" className=\"my-3\" onClick={() => setShowDefault(true)}>Add New Task</Button>\r\n                        <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                            <Modal.Header>\r\n                            <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                            <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form className='p-3' onSubmit={(e)=>addtaskHandler(e)}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Task</Form.Label>\r\n                                <Form.Control required  type=\"text\" onChange={(e) => setTask(e.target.value)}/>\r\n                                {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                 </Form.Group>\r\n                                 <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                    <Form.Label>Due time</Form.Label>\r\n                                    <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" defaultValue={dueDate}  onChange={(e) => {setDueDate(e.target.value)}}/>\r\n                                </Form.Group>\r\n                                    \r\n\r\n                                    <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                        <Form.Label>Assign to</Form.Label>\r\n                                        <Form.Select value={assignTo || ''} onChange={(e) => setAssignTo(e.target.value)}>\r\n                                        <option value=\" \">Select</option>\r\n                                        \r\n                                        {users && users.map((user, i) => (\r\n                                            \r\n                                        (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                            \r\n                                        ))}\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Note</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" onChange={(e) => setNote(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <button className=\"btn btn-primary\" type='submit'>Add Task</button>\r\n                            </Form>\r\n                                </Modal.Body>\r\n                                {/* <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    I Got It\r\n                                </Button>\r\n                                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                </Modal.Footer> */}\r\n                            </Modal>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        {(taskList && taskList.length>0)? taskList.map((task, i)=>(\r\n                        <Col xs={12} sm={12} xl={12} className=\"mb-4 d-sm-block\" key={i}>\r\n                            <div className=\"hover-state rounded-0 rounded-top py-3 card border-bottom\">\r\n                                <div className=\"d-sm-flex align-items-center flex-wrap flex-lg-nowrap py-0 card-body\">\r\n                                    <div className=\"text-left text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check me-sm-2\">\r\n                                            <input type=\"checkbox\" id=\"task-584be4d2-bec0-4fb1-80b1-690358ca4809\" className=\"form-check-input\"\r\n                                                value=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"px-0 mb-4 mb-md-0 col-lg-9 col-9\">\r\n                                        <div className=\"mb-2\">\r\n                                            <h5 className=\"\">{task.task}</h5>\r\n                                            <div className=\"d-block d-sm-flex\">\r\n                                                <div>\r\n                                                    <h6 className=\"fw-normal text-gray mb-3 mb-sm-0\"><svg width={15} xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                        className=\"icon icon-xxs text-gray-500 me-2\">\r\n                                                        <path fillRule=\"evenodd\"\r\n                                                            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\r\n                                                            clipRule=\"evenodd\"></path>\r\n                                                    </svg> {new Date(task.dueDate).toLocaleDateString() + ` (` + new Date(task.dueDate).toLocaleTimeString() + `)`}</h6>\r\n                                                </div>\r\n                                                <div className=\"ms-sm-3\" onClick={(e) => taskStatusHandler(e, task)} style={{cursor: 'pointer'}}>\r\n                                                    {task.status === 'Pending'? <span className=\"super-badge badge bg-warning\">In Progress</span> : <span className=\"super-badge badge bg-success\">Completed</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"fw-bold text-dark card-link\">\r\n                                                <span className=\"fw-normal text-gray \">{task.note && task.note}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fas fa-edit\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> editTaskHandler(e,task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fa fa-trash red\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> deleteTaskHandler(e, task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    \r\n                                    <div\r\n                                        className=\"d-none d-lg-block d-xl-inline-flex align-items-center ms-lg-auto text-right justify-content-center px-md-0 col-xl-1 col-lg-1 col-sm-1 col-10\">\r\n                                        <div className=\"d-flex justify-content-end dropdown\">\r\n                                            <button id=\"react-aria8234133146-25\" aria-expanded=\"false\" type=\"button\"\r\n                                                className=\"text-dark dropdown-toggle-split m-0 p-0 dropdown-toggle btn btn-link\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                    className=\"icon icon-xs icon-dark\">\r\n                                                    <path\r\n                                                        d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Modal as={Modal.Dialog} centered show={showEditDefault} onHide={handleEditClose}>\r\n                                    <Modal.Header>\r\n                                    <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                                    <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditClose} />\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form className='p-3' onSubmit={(e)=>saveEditedTaskHandler(e, task)}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control required  type=\"text\"  value={editedTask} onChange={(e)=> setEditedTask(e.target.value)}/>\r\n                                        {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                            <Form.Label>Due time</Form.Label>\r\n                                            <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" value={editedDueDate.split('.')[0]}  onChange={(e) => {setEditedDueDate(e.target.value)}}/>\r\n                                        </Form.Group>\r\n                                            \r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Assign to</Form.Label>\r\n                                                <Form.Select value={editedAssignTo} onChange={(e) => setEditedAssignTo(e.target.value)}>\r\n                                                <option value=\" \">Select</option>\r\n                                                \r\n                                                {users && users.map((user, i) => (\r\n                                                    \r\n                                                (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                                    \r\n                                                ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Status</Form.Label>\r\n                                                <Form.Select value={editedStatus} onChange={(e) => setEditedStatus(e.target.value)}>\r\n                                                <option value=\"Pending\">In Progress</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Note</Form.Label>\r\n                                                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" value={editedNote} onChange={(e) => setEditedNote(e.target.value)}/>\r\n                                            </Form.Group>\r\n                                            <button className=\"btn btn-primary\" type='submit'>Save Task</button>\r\n                                    </Form>\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            I Got It\r\n                                        </Button>\r\n                                        <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        </Modal.Footer> */}\r\n                                    </Modal>\r\n\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        )): (\r\n                            <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                                <h1>\"No Task\"</h1>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                    <h1>\"No Task\"</h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskManager","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport { deleteUser } from '../actions/userActions';\r\nimport axios from 'axios';\r\nimport { createHashHistory } from 'history'\r\nimport { deleteProject } from '../actions/projectActions';\r\n\r\n\r\nconst ProjectTable = ({projectList}) => {\r\n    const dispatch = useDispatch()\r\n    const history = createHashHistory()\r\n\r\n    const { SearchBar } = Search;\r\n\r\n    const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n    const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n         dispatch(deleteProject(id))\r\n        //  history.push('/remove/consultant')\r\n        window.location.reload()\r\n        }\r\n    }\r\n\r\n    const editHandler = (id) => {\r\n      history.push(`/projectdetails/${id}`)\r\n    }\r\n\r\n\r\n    const afterSearch = (newResult) => {\r\n      console.log(newResult);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"projectList\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, projectList) => {\r\n            // console.log(row, index)\r\n            return projectList+1\r\n          },\r\n        },\r\n        {\r\n          dataField: \"mainProject\",\r\n          text: \"Main Project\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          sort: false,\r\n          \r\n        },\r\n        // {\r\n        //   dataField: \"mobile\",\r\n        //   text: \"Mobile no.\"\r\n        // },\r\n        // {\r\n        //   dataField: \"email\",\r\n        //   text: \"Email Id\",\r\n        // },\r\n        {\r\n            dataField: \"\",\r\n            text: \"\",\r\n            formatter: (cell,row) => {\r\n              return (\r\n                // <button className=\"btn btn-primary\" onClick={ ()=>deleteHandler(row._id) }>Remove</button>\r\n                <button className=\"btn btn-primary ms-auto\" onClick={ ()=>editHandler(row._id) }>View Project</button>\r\n  \r\n              );\r\n            },\r\n    \r\n          },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          formatter: (cell,row) => {\r\n            return (\r\n              // <button className=\"btn btn-primary\" onClick={ ()=>deleteHandler(row._id) }>Remove</button>\r\n              <button className=\"btn btn-danger\" onClick={ ()=>deleteHandler(row._id) }>Delete</button>\r\n\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n    return (\r\n        <div>\r\n          \r\n          <ToolkitProvider\r\n            keyField=\"_id\"\r\n            data={ projectList }\r\n            columns={ columns }\r\n            search\r\n          >\r\n            {\r\n            props => (\r\n            <div>\r\n              {/* <span>Search: </span> */}\r\n              <SearchBar { ...props.searchProps } />\r\n              <hr />\r\n        \r\n            <BootstrapTable\r\n                  { ...props.baseProps }\r\n                 bootstrap4\r\n                 keyField=\"_id\"\r\n                 data={projectList}\r\n                 columns={columns}\r\n                 filter={ filterFactory() }\r\n                 pagination={paginationFactory({ sizePerPage: 10 })}\r\n                 striped\r\n               />\r\n               </div>\r\n               )\r\n               }\r\n               </ToolkitProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectTable\r\n","import React, {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image, Row, Col, Button, Modal, Form } from '@themesberg/react-bootstrap';\r\nimport { addProject, projects } from '../actions/projectActions';\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport ProjectTable from './ProjectTable';\r\n\r\n\r\n\r\nconst ProjectList = ({history}) => {\r\n    // const [userList, setUserList] = useState([])\r\n    const [mainProject, setMainProject] = useState('')\r\n\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const handleClose = () => setShowDefault(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    const fetchProjects = useSelector((state) => state.fetchProjects)\r\n    const { loading, error , projectInfo } = fetchProjects\r\n\r\n    const createProject = useSelector((state) => state.addProject)\r\n    const {projectInfo: addedProject } = createProject\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n        dispatch(projects())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    useEffect(()=>{\r\n      if(addedProject){\r\n      dispatch(projects())\r\n      }\r\n    }, [addedProject])\r\n\r\n    \r\n  const addMainProjectHandler = (e) =>{\r\n    e.preventDefault()\r\n    dispatch(addProject({mainProject}))\r\n    handleClose()\r\n  }\r\n\r\n  \r\n  if(projectInfo === undefined){\r\n  return (\r\n    <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n    \r\n  )\r\n  } else{\r\n    return (\r\n      \r\n      <>\r\n      {loading? (\r\n        // <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        // <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={40} />\r\n        // </div>\r\n        <div></div>\r\n      ) : (\r\n      <div>\r\n          <Row className='pt-3 pb-3'>\r\n                        <Col>\r\n                        {/* <a href=\"/#/addproject\" className='btn btn-primary'>Add New Project</a> */}\r\n                        <Button variant=\"primary\" className=\"btn btn-primary\" onClick={() => setShowDefault(true)}>Add New Project</Button>\r\n                        <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n    <Modal.Header>\r\n      <Modal.Title className=\"h6\">Add New Project</Modal.Title>\r\n      <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n        <Form onSubmit={(e) => addMainProjectHandler(e)}>\r\n          <Row>\r\n            <Col md={12} className=\"mb-3\">\r\n              <Form.Group id=\"addProject\">\r\n                {/* <Form.Label>Add Project</Form.Label> */}\r\n                <Form.Control required type=\"text\" placeholder=\"Enter project\" defaultValue={mainProject} onChange={(e)=>setMainProject(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={12} className=\"pt-2\">\r\n              <Button variant=\"primary\" type=\"submit\" >Add Project</Button>\r\n            </Col>\r\n          </Row>\r\n          </Form>  \r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n    </Modal.Footer>\r\n  </Modal>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                    <ProjectTable projectList={projectInfo}/>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n\r\n  export default ProjectList\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    ADD_TEAM_REQUEST,\r\n    ADD_TEAM_SUCCESS,\r\n    ADD_TEAM_FAIL,\r\n    FETCH_TEAM_LIST_REQUEST,\r\n    FETCH_TEAM_LIST_SUCCESS,\r\n    FETCH_TEAM_LIST_FAIL,\r\n    TEAM_DETAILS_REQUEST,\r\n    TEAM_DETAILS_SUCCESS,\r\n    TEAM_DETAILS_FAIL,\r\n    DELETE_TEAM_REQUEST,\r\n    DELETE_TEAM_SUCCESS,\r\n    DELETE_TEAM_FAIL,\r\n    UPDATE_TEAM_REQUEST,\r\n    UPDATE_TEAM_SUCCESS,\r\n    UPDATE_TEAM_FAIL\r\n} from '../constants/teamManagementConstants';\r\n\r\n\r\n/* Add team */\r\nexport const addTeam = (team, addToast) => async (dispatch,getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_TEAM_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n    }\r\n\r\n\r\n    \r\n\r\n    const { data } = await axios.post(\r\n      '/api/team/new',team,\r\n      config\r\n    )\r\n\r\n    if (addToast) {\r\n      addToast(\"Team Added\", { appearance: \"success\", autoDismiss: true });\r\n    }\r\n\r\n    dispatch({\r\n      type: ADD_TEAM_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_TEAM_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n/* Team List */\r\nexport const fetchTeamList = () => async (dispatch,getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FETCH_TEAM_LIST_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        },\r\n      }\r\n  \r\n\r\n      \r\n  \r\n      const { data } = await axios.get(\r\n        '/api/team/list',\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: FETCH_TEAM_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_TEAM_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* Team details */\r\nexport const teamDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: TEAM_DETAILS_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        },\r\n      }\r\n  \r\n\r\n      \r\n  \r\n      const { data } = await axios.get(\r\n        `/api/team/projectteam/${id}`,\r\n        config\r\n      )\r\n    \r\n      dispatch({\r\n        type: TEAM_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: TEAM_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n/* delete tasks by id */\r\nexport const deleteTeam= (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: DELETE_TEAM_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        },\r\n      }\r\n  \r\n\r\n      \r\n  \r\n      const { data } = await axios.delete(\r\n        `/api/team/${id}`,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: DELETE_TEAM_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_TEAM_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /* update team by id */\r\nexport const updateTeam = (team, addToast) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_TEAM_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      },\r\n    }\r\n\r\n\r\n    \r\n\r\n    const { data } = await axios.put(\r\n      `/api/team/${team._id}`, team,\r\n      config\r\n    )\r\n\r\n    if (addToast) {\r\n      addToast(\"User Updated\", { appearance: \"success\", autoDismiss: true });\r\n    }\r\n\r\n    dispatch({\r\n      type: UPDATE_TEAM_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_TEAM_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","export const ADD_TEAM_REQUEST = 'ADD_TEAM_REQUEST'\r\nexport const ADD_TEAM_SUCCESS = 'ADD_TEAM_SUCCESS'\r\nexport const ADD_TEAM_FAIL = 'ADD_TEAM_FAIL'\r\nexport const ADD_TEAM_RESET = 'ADD_TEAM_RESET'\r\n\r\nexport const FETCH_TEAM_LIST_REQUEST = 'FETCH_TEAM_LIST_REQUEST'\r\nexport const FETCH_TEAM_LIST_SUCCESS = 'FETCH_TEAM_LIST_SUCCESS'\r\nexport const FETCH_TEAM_LIST_FAIL = 'FETCH_TEAM_LIST_FAIL'\r\n\r\nexport const TEAM_DETAILS_REQUEST = 'TEAM_DETAILS_REQUEST'\r\nexport const TEAM_DETAILS_SUCCESS = 'TEAM_DETAILS_SUCCESS'\r\nexport const TEAM_DETAILS_FAIL = 'TEAM_DETAILS_FAIL'\r\n\r\nexport const UPDATE_TEAM_REQUEST = 'UPDATE_TEAM_REQUEST'\r\nexport const UPDATE_TEAM_SUCCESS = 'UPDATE_TEAM_SUCCESS'\r\nexport const UPDATE_TEAM_FAIL = 'UPDATE_TEAM_FAIL'\r\nexport const UPDATE_TEAM_RESET = 'UPDATE_TEAM_RESET'\r\n\r\nexport const DELETE_TEAM_REQUEST = 'DELETE_TEAM_REQUEST'\r\nexport const DELETE_TEAM_SUCCESS = 'DELETE_TEAM_SUCCESS'\r\nexport const DELETE_TEAM_FAIL = 'DELETE_TEAM_FAIL'\r\nexport const DELETE_TEAM_RESET = 'DELETE_TEAM_RESET'","import React, {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image, Col, Row, Card, Nav, Tab, Table, Button, Modal, Form} from '@themesberg/react-bootstrap';\r\nimport { consultantList, cpmList, fetchUserList, managerList, teamLeadList, updateUser } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\nimport Select from \"react-select\";\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport { FormGroup } from '@material-ui/core';\r\nimport { getProjectDetails, updateProject } from '../actions/projectActions';\r\n\r\nimport ConsultantSelect from '../components/ConsultantSelect';\r\nimport { addTeam, teamDetails, deleteTeam, updateTeam, fetchTeamList } from '../actions/teamManagementActions';\r\nimport { ADD_TEAM_RESET, DELETE_TEAM_RESET, UPDATE_TEAM_RESET } from '../constants/teamManagementConstants';\r\n\r\n  \r\n\r\nconst ProjectDetails = ({history, match}) => {\r\n  const id = match.params.id\r\n  // var consultantArray =[]\r\n\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showSubProjectDefault, setShowSubProjectDefault] = useState(false);\r\n    const [showEditSubProjectDefault, setShowEditSubProjectDefault] = useState(false);\r\n    const [showEditTeamDefault, setShowEditTeamDefault] = useState(false);\r\n    const [showCpmDefault, setShowCpmDefault] = useState(false);\r\n    const [editedSubProject, setEditedSubProject] = useState('')\r\n    const [previousSubProject, setPreviousSubProject] = useState('')\r\n    const [newSubProject, setNewSubProject] = useState('')\r\n    const [selectedManager, setSelectedManager] = useState('')\r\n    const [selectedCPM, setSelectedCPM] = useState('')\r\n    const [selectedTeamLead, setSelectedTeamLead] = useState('')\r\n    const [selectedConsultants, setSelectedConsultants] = useState([])\r\n    const [editManager, setEditManager] = useState('')\r\n    const [editTeamLead, setEditTeamLead] = useState('')\r\n    const [editConsultants, setEditConsultants] = useState([])\r\n    const [consultantArray, setConsultantArray] = useState([])\r\n    const [cons, setCons] = useState([])\r\n    const [teamId, setTeamId] = useState('')\r\n    const [cPMWithProject, setCPMWithProject] = useState([])\r\n\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n    const handleSubProjectClose = () => setShowSubProjectDefault(false);\r\n    const handleEditSubProjectClose = () => setShowEditSubProjectDefault(false);\r\n    const handleEditTeamClose = () => setShowEditTeamDefault(false);\r\n    const handleCpmClose = () => setShowCpmDefault(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const projectDetails = useSelector((state) => state.projectDetails)\r\n    const { loading, error, projectInfo } = projectDetails\r\n\r\n    const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    const { managers } = fetchManagers\r\n\r\n    const fetchTeamLeads = useSelector((state) => state.fetchTeamLeads)\r\n    const { teamlead } = fetchTeamLeads\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { consultants } = fetchConsultants\r\n\r\n    // const projectTeamDetails = useSelector((state) => state.projectTeamDetails)\r\n    // const { teamDetails } = projectTeamDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  const projectTeamDetails = useSelector((state) => state.projectTeamDetails)\r\n  const { teamDetails: projectTeam } = projectTeamDetails\r\n\r\n  const addTeamData = useSelector((state) => state.addTeam)\r\n  const { addedTeam } = addTeamData\r\n\r\n  const getTeamList = useSelector((state) => state.getTeamList)\r\n  const { teamList } = getTeamList\r\n\r\n  const deleteTeamStatus = useSelector((state) => state.deleteTeam)\r\n  const { success } = deleteTeamStatus\r\n\r\n  const updateTeamData = useSelector((state) => state.updateTeamData)\r\n  const { success: updateSuccess } = updateTeamData\r\n\r\n  const cpmListData = useSelector((state) => state.cpmListData)\r\n  const { cpm } = cpmListData\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n        dispatch(getProjectDetails(id))\r\n        dispatch(managerList())\r\n        dispatch(teamLeadList())\r\n        dispatch(consultantList())\r\n        dispatch(teamDetails(id))\r\n        dispatch(fetchTeamList())\r\n        dispatch(cpmList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n    \r\n\r\n    useEffect(()=>{\r\n      if(addedTeam || success || updateSuccess){\r\n        dispatch({\r\n          type:DELETE_TEAM_RESET\r\n        })\r\n        dispatch({type: ADD_TEAM_RESET})\r\n        dispatch({\r\n          type: UPDATE_TEAM_RESET\r\n        })\r\n       \r\n      dispatch(teamDetails(id))\r\n      dispatch(teamLeadList())\r\n        dispatch(consultantList())\r\n      }\r\n    },[addedTeam, success, updateSuccess])\r\n\r\n\r\n    useEffect(()=>{\r\n      if(consultants){\r\n        // for(let i=0 ; i < consultants.length; i++){\r\n        //   // setConsultantArray([...consultantArray, {value : consultants[i]._id, label: consultants[i].name}])\r\n        //   consultantArray = [...consultantArray, {value : consultants[i]._id, label: consultants[i].name}]\r\n        //   console.log(consultantArray)\r\n        // }\r\n        var a = []\r\n        consultants.map(cons => {\r\n          if(cons.isAvailable){\r\n          a.push({value : cons.consultantId, label: cons.name})\r\n          }\r\n        })\r\n        setConsultantArray(a)\r\n      }\r\n    }, [consultants])\r\n\r\n    useEffect(()=>{\r\n      if(cpm){\r\n      setCPMWithProject(cpm.filter(c=>c.projectId === id))\r\n      }\r\n    }, [cpm])\r\n\r\n\r\n    const editSubProjectHandler = (project) => {\r\n      setShowEditSubProjectDefault(true)\r\n      setEditedSubProject(project)\r\n      setPreviousSubProject(project)\r\n    }\r\n\r\n    const saveEditSubProjectHandler = (e) => {\r\n      e.preventDefault()\r\n      projectInfo.subProject[projectInfo.subProject.findIndex(pro => pro === previousSubProject)] = editedSubProject\r\n      dispatch(updateProject(projectInfo))\r\n      setShowEditSubProjectDefault(false)\r\n    }\r\n\r\n    const selectOptionsManager = [\r\n      { value: 'bootstrap', label: 'Bootstrap' },\r\n      { value: 'react', label: 'React' },\r\n      { value: 'vue', label: 'Vue' },\r\n      { value: 'angular', label: 'Angular' },\r\n      { value: 'svelte', label: 'Svelte' },\r\n    ];\r\n  \r\n  \r\n    const selectOptionsConsultant = [\r\n      { value: 'bootstrap', label: 'Bootstrap' },\r\n      { value: 'react', label: 'React' },\r\n      { value: 'vue', label: 'Vue' },\r\n      { value: 'angular', label: 'Angular' },\r\n      { value: 'svelte', label: 'Svelte' },\r\n    ];\r\n    \r\n    const customStyles = {\r\n    \r\n      control: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem',\r\n      }),\r\n    \r\n      multiValue: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem'\r\n      }),\r\n    \r\n      multiValueRemove: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem'\r\n      }),\r\n    \r\n      placeholder: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem',\r\n      }),\r\n    \r\n      singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n    \r\n        return {\r\n          ...provided,\r\n          opacity,\r\n          transition,\r\n        };\r\n      }\r\n    };\r\n\r\n    const deleteSubProjectHandler = (project) => {\r\n      const a = projectInfo.subProject.filter((pro) => pro !== project)\r\n      projectInfo.subProject = a\r\n      dispatch(updateProject(projectInfo))\r\n      dispatch(getProjectDetails(id))\r\n    }\r\n\r\n    const addSubProjectHandler = () => {\r\n      if(newSubProject){\r\n      projectInfo.subProject.push(newSubProject)\r\n      dispatch(updateProject(projectInfo))\r\n      dispatch(getProjectDetails(id))\r\n      setShowSubProjectDefault(false)\r\n      }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   if(cons && cons.length>0){\r\n    //     dispatch(addTeam({\r\n    //       projectId: id,\r\n    //       managerId: selectedManager,\r\n    //       // teamLeads: [{teamLeadId:selectedTeamLead}],\r\n    //       // consultants: [{\r\n    //       //   consultantId : cons,\r\n    //       //   teamLeadId : selectedTeamLead\r\n    //       // }]\r\n    //     }))\r\n    //   }\r\n    // }, [cons])\r\n\r\n    // useEffect(()=>{\r\n    //   if(selectedConsultants && selectedConsultants.length>0){\r\n    //   var consArray = []\r\n    //   selectedConsultants.map(cons => {\r\n    //     consArray.push({consultantId: cons.value, teamLeadId: selectedTeamLead})\r\n    //   })\r\n    //   console.log(\"cons\", consArray)\r\n    //   setSelectedConsultants(consArray)\r\n    // }\r\n    // }, [])\r\n\r\n   \r\n\r\n\r\n    const addTeamHandler = (e) => {\r\n      e.preventDefault()\r\n\r\n      if(teamList){\r\n        var managerCheck = teamList.teamsData.filter(team => {\r\n          if(team.managerId.userId.managerId === selectedManager)  {\r\n            return team.projectId._id !== id \r\n          }})\r\n       \r\n      }\r\n\r\n      \r\n      \r\n      let teamCheck = projectTeam.teamData.filter(team =>(team.teamLeads.filter(t=>t.teamLeadId._id === selectedTeamLead)))\r\n\r\n      // let managerCheck = teamList.teamData.filter(team => (team.projectId === id) && (team.managerId._id === selectedManager))\r\n      \r\n      if(selectedConsultants && selectedConsultants.length>0){\r\n        var consArray = []\r\n        selectedConsultants.map(cons => {\r\n          consArray.push({consultantId: cons.value, teamLeadId: selectedTeamLead})\r\n        })\r\n      }\r\n        if( teamCheck && managerCheck && managerCheck.length>0){\r\n         alert(\"Already member is in team\")\r\n        }else{\r\n         \r\n        dispatch(addTeam({\r\n        projectId: id,\r\n        managerId: selectedManager,\r\n        teamLeads: [{\r\n          teamLeadId: selectedTeamLead}],\r\n        consultants: consArray\r\n        \r\n      })) }\r\n      setSelectedConsultants([])\r\n      handleClose()\r\n    }\r\n\r\n    const editTeamHandler = (e) => {\r\n      e.preventDefault()\r\n      if(editConsultants && editConsultants.length>0){\r\n        var consArray = []\r\n        editConsultants.map(cons => {\r\n          consArray.push({consultantId: cons.value, teamLeadId: editTeamLead})\r\n        })}\r\n       dispatch(updateTeam({\r\n            _id: teamId,\r\n            projectId: id,\r\n            managerId: editManager,\r\n            teamLeads: [{\r\n              teamLeadId: editTeamLead}],\r\n            consultants: consArray\r\n            \r\n          }))\r\n      handleEditTeamClose()\r\n    }\r\n\r\n\r\n    const deleteTeamHandler = (id) => {\r\n      dispatch(deleteTeam(id))\r\n      dispatch(teamDetails(id))\r\n    }\r\n\r\n    const editTeamFormHandler = (team, id) =>{\r\n      setEditManager(team.managerId.userId.managerId)\r\n      setEditTeamLead(id)\r\n      setTeamId(team._id)\r\n      if(team.consultants && team.consultants.length>0){\r\n      var a = []\r\n      team.consultants.map(cons => {\r\n        a.push({value : cons.consultantId.userId.consultantId, label: cons.consultantId.userId.name})\r\n        \r\n      })\r\n    }\r\n  \r\n      setEditConsultants(a)\r\n      setShowEditTeamDefault(true)\r\n    }\r\n\r\n    const addCpmHandler = () => {\r\n      let a = cpm.filter(c => c._id === selectedCPM)[0]\r\n\r\n      dispatch(updateUser({...a, projectId : id}))\r\n      dispatch(cpmList())\r\n      handleCpmClose()\r\n    }\r\n\r\n    const deleteCpmHandler = (cp) => {\r\n      dispatch(updateUser({...cp, projectId : null}))\r\n      dispatch(cpmList())\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n      \r\n      <>\r\n     \r\n      <div>\r\n          <Row className='py-3'>\r\n              <Col>\r\n              \r\n      <Tab.Container defaultActiveKey=\"overview\">\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Nav className=\"nav-tabs\">\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"overview\" className=\"mb-sm-3 mb-md-0\">\r\n                Project Overview\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"managers\" className=\"mb-sm-3 mb-md-0\">\r\n                Managers\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" className=\"mb-sm-3 mb-md-0\">\r\n                Team Members\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"cpm\" className=\"mb-sm-3 mb-md-0\">\r\n                Channel Partner Manager\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n          </Nav>\r\n        </Col>\r\n        <Col lg={12}>\r\n          <Tab.Content className='py-4' style={{background:\"white\"}}>\r\n            <Tab.Pane eventKey=\"overview\" className=\"py-4 px-4\">\r\n            <Row className='pt-3 pb-3'>\r\n                <Col><h3>Sub Project Lists</h3></Col>\r\n                <Col className='d-flex justify-content-end'><Button variant=\"primary\" onClick={() => setShowSubProjectDefault(true)}>Add Sub Project</Button>\r\n                <Modal as={Modal.Dialog} centered show={showSubProjectDefault} onHide={handleSubProjectClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Sub Project</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleSubProjectClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form>\r\n                      <Form.Group id=\"firstName\" className = \"mb-3\">\r\n                        <Form.Label>Sub Project</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter sub project\" defaultValue={newSubProject} onChange={(e)=>setNewSubProject(e.target.value)}/>\r\n                      </Form.Group>\r\n                    <Button variant=\"primary\" onClick={()=> addSubProjectHandler()}>Add</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n                <Table responsive className=\"align-items-center table-flush\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Sub Project Name</th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {(projectInfo && projectInfo.subProject) && projectInfo.subProject.map((project, i)=> (\r\n            <tr key={i}>\r\n            <td>{project}</td>\r\n            <td>\r\n              <Button variant=\"primary\" onClick={() => editSubProjectHandler(project)}>Edit</Button>\r\n                <Modal as={Modal.Dialog} centered show={showEditSubProjectDefault} onHide={handleEditSubProjectClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Sub Project</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditSubProjectClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form onSubmit={(e) => saveEditSubProjectHandler(e)}>\r\n                      <Form.Group id=\"firstName\" className = \"mb-3\">\r\n                        <Form.Label>Sub Project</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter sub project\" value = {editedSubProject} onChange={(e)=> setEditedSubProject(e.target.value)}/>\r\n                      </Form.Group>\r\n                    <Button variant=\"primary\" type='submit'>Save</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                    </td>\r\n            <td>\r\n                    <Button variant=\"danger\" onClick={() => deleteSubProjectHandler(project)}>Delete</Button>\r\n            </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n            </Tab.Pane>\r\n\r\n            {projectTeam &&\r\n            <>\r\n             <Tab.Pane eventKey=\"managers\" className=\"py-4 px-4\">\r\n            <Row className='pt-3 pb-3'>\r\n                <Col><h3>Team Members</h3></Col>\r\n                {/* <Col className='d-flex justify-content-end'><Button variant=\"primary\" onClick={() => setShowDefault(true)}>Add Manager</Button>\r\n                <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Manager</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form onSubmit={(e)=>addTeamHandler(e)}>\r\n                      <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select Manager</Form.Label>\r\n                      <Form.Select onChange={(e) => setSelectedManager(e.target.value) } required>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          managers && managers.map((manager,i) => {\r\n                            if(manager.isAvailable){\r\n                            return <option key={i} value={manager._id}>{manager.name}</option>\r\n                            }\r\n                              })\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                     <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select TeamLead</Form.Label>\r\n                       <Form.Select onChange={(e) => setSelectedTeamLead(e.target.value)} required>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          teamlead && teamlead.map((lead,i) => (\r\n                            <option key={i} value={lead.teamLeadId}>{lead.name}</option>\r\n                          ))\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                    \r\n                    {<Form.Group className=\"mb-2\">\r\n                    <Form.Label>Select Consultants</Form.Label>\r\n                    <Select\r\n                        value={selectedConsultants}\r\n                        onChange={setSelectedConsultants}\r\n                        options={consultantArray}\r\n                        isMulti = {true}\r\n                      />\r\n                    </Form.Group>} \r\n                    <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                </Col> */}\r\n            </Row>\r\n\r\n            <Table responsive className=\"align-items-center table-flush\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Manager</th>\r\n            <th scope=\"col\"></th>\r\n           \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            projectTeam && projectTeam.teamData.map((team, i) => (\r\n                                 \r\n                    <tr key={i}>\r\n                    <td>{team.managerId && team.managerId.userId.name}</td>\r\n                    <td><Button variant=\"danger\" onClick={()=>deleteTeamHandler(team._id)}>Delete</Button></td>\r\n                    \r\n                  </tr>\r\n\r\n               // {team.teamLeads.map((teamLead) =>{\r\n              //  team.consultants.map((cons) => (\r\n              //  <tr>\r\n              //     <td>{team.managerId.name}</td>\r\n                  \r\n              //   <td>{teamLead._id === cons.teamLeadId && teamLead.name}</td>\r\n              //   <td>{teamLead._id === cons.teamLeadId && cons.name}</td>\r\n              //   <td><Button variant=\"secondary\">Edit</Button></td>\r\n              //   <td><Button variant=\"danger\">Delete</Button></td>\r\n              //   </tr>\r\n              //   ))\r\n              //  } )\r\n\r\n            )\r\n            \r\n            \r\n         \r\n           )}\r\n        </tbody>\r\n      </Table>\r\n            </Tab.Pane> \r\n            <Tab.Pane eventKey=\"team\" className=\"py-4 px-4\">\r\n            <Row className='pt-3 pb-3'>\r\n                <Col><h3>Team Members</h3></Col>\r\n                <Col className='d-flex justify-content-end'><Button variant=\"primary\" onClick={() => setShowDefault(true)}>Add New Team</Button>\r\n                <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Team Members</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form onSubmit={(e)=>addTeamHandler(e)}>\r\n                      <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select Manager</Form.Label>\r\n                      <Form.Select onChange={(e) => setSelectedManager(e.target.value) } required>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          managers && managers.map((manager,i) => (\r\n                            \r\n                            <option key={i} value={manager.managerId}>{manager.name}</option>\r\n                            \r\n                          ))\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                     <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select TeamLead</Form.Label>\r\n                       <Form.Select onChange={(e) => setSelectedTeamLead(e.target.value)} >\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          teamlead && teamlead.map((lead,i) => {\r\n                            if(lead.isAvailable){\r\n                            return <option key={i} value={lead.teamLeadId}>{lead.name}</option>\r\n                            }\r\n  })\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                    \r\n                    {<Form.Group className=\"mb-2\">\r\n                    <Form.Label>Select Consultants</Form.Label>\r\n                    <Select\r\n                        value={selectedConsultants}\r\n                        onChange={setSelectedConsultants}\r\n                        options={consultantArray}\r\n                        isMulti = {true}\r\n                        required={selectedTeamLead? true : false}\r\n                      />\r\n                    </Form.Group>}\r\n                    <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Table responsive className=\"align-items-center table-flush\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Manager</th>\r\n            <th scope=\"col\">Team Lead</th>\r\n            <th scope=\"col\">Consultant</th>        \r\n             <th scope=\"col\"></th>\r\n            {/*<th scope=\"col\"></th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            projectTeam && projectTeam.teamData.map((team, j) => {\r\n              \r\n              if(team.consultants && team.consultants.length>0){\r\n                return team.consultants.map((cons,i) => {\r\n                    return (\r\n                    \r\n                    <tr key={i}>\r\n                    <td>{team.managerId && team.managerId.userId.name}</td>\r\n                    <td>{cons.teamLeadId && cons.teamLeadId.userId.name}</td>\r\n                    <td>{cons.consultantId && cons.consultantId.userId.name}</td>\r\n                    <td>\r\n                    <Button variant=\"primary\" onClick={() =>editTeamFormHandler(team, cons.teamLeadId.userId.teamLeadId)}>Edit Team</Button>\r\n                      <Modal as={Modal.Dialog} centered show={showEditTeamDefault} onHide={handleEditTeamClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Edit Team Members</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditTeamClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form onSubmit={(e)=>editTeamHandler(e)}>\r\n                      <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select Manager</Form.Label>\r\n                      <Form.Select onChange={(e) => setEditManager(e.target.value) } value={editManager} required>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          managers && managers.map((manager,i) => (\r\n                            <option key={i} value={manager.managerId}>{manager.name}</option>\r\n                          ))\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select TeamLead</Form.Label>\r\n                       <Form.Select onChange={(e) => setEditTeamLead(e.target.value)} required value={editTeamLead}>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          teamlead && teamlead.map((lead,i) => (\r\n                            <option key={i} value={lead.teamLeadId}>{lead.name}</option>\r\n                          ))\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                    \r\n                    {<Form.Group className=\"mb-2\">\r\n                    <Form.Label>Select Consultants</Form.Label>\r\n                    <Select\r\n                        value={editConsultants}\r\n                        onChange={setEditConsultants}\r\n                        options={consultantArray}\r\n                        isMulti = {true}\r\n                      />\r\n                    </Form.Group>}\r\n                    <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal></td>\r\n                    {/* <td><Button variant=\"danger\" onClick = {()=>deleteTeamHandler(team._id)}>Delete</Button></td> */}\r\n                  </tr>)\r\n                  \r\n                  \r\n                })\r\n              }else{\r\n                return (<tr key={j}>\r\n                        <td>{team.managerId && team.managerId.userId.name}</td>\r\n                        <td>{team.teamLeads[0].teamLeadId && team.teamLeads[0].teamLeadId.userId.name}</td>\r\n                        <td></td>\r\n                        <td> <Button variant=\"primary\" onClick={() =>editTeamFormHandler(team, cons && cons.length>0? cons.teamLeadId.userId.teamLeadId: team.teamLeads[0].teamLeadId.userId.teamLeadId)}>Edit Team</Button></td>\r\n                      </tr>)\r\n              }\r\n\r\n               // {team.teamLeads.map((teamLead) =>{\r\n              //  team.consultants.map((cons) => (\r\n              //  <tr>\r\n              //     <td>{team.managerId.name}</td>\r\n                  \r\n              //   <td>{teamLead._id === cons.teamLeadId && teamLead.name}</td>\r\n              //   <td>{teamLead._id === cons.teamLeadId && cons.name}</td>\r\n              //   <td><Button variant=\"secondary\">Edit</Button></td>\r\n              //   <td><Button variant=\"danger\">Delete</Button></td>\r\n              //   </tr>\r\n              //   ))\r\n              //  } )\r\n\r\n            }\r\n            \r\n            \r\n         \r\n           )}\r\n        </tbody>\r\n      </Table>\r\n            </Tab.Pane></>\r\n  }\r\n             <Tab.Pane eventKey=\"cpm\" className=\"py-4 px-4\">\r\n            <Row className='pt-3 pb-3'>\r\n                <Col><h3>Channel Partner Managers</h3></Col>\r\n                <Col className='d-flex justify-content-end'><Button variant=\"primary\" onClick={() => setShowCpmDefault(true)}>Add Channel Partner Manager</Button>\r\n                <Modal as={Modal.Dialog} centered show={showCpmDefault} onHide={handleCpmClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Channel Partner Manager</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleCpmClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form>\r\n                      <Form.Group id=\"firstName\" className = \"mb-3\">\r\n                        <Form.Label>Channel Partner Managers</Form.Label>\r\n                        <Form.Select onChange={(e) => setSelectedCPM(e.target.value) } required>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          cpm && cpm.map((c,i) => {\r\n                            if(!c.projectId){\r\n                            return <option key={i} value={c._id}>{c.name}</option>\r\n                            }\r\n                        })\r\n                        }\r\n                      </Form.Select>\r\n                      </Form.Group>\r\n                    <Button variant=\"primary\" onClick={()=> addCpmHandler()}>Add</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n                <Table responsive className=\"align-items-center table-flush\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Channel Partner Manager Name</th>\r\n                     \r\n                      <th scope=\"col\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {cPMWithProject.length>0 && cPMWithProject.map((cp, i)=> (\r\n                      <tr key={i}>\r\n                      <td>{cp.name}</td>\r\n                      \r\n                      <td>\r\n                              <Button variant=\"danger\" onClick={() => deleteCpmHandler(cp)}>Delete</Button>\r\n                      </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Container>\r\n              </Col>\r\n          </Row>\r\n      </div>\r\n      \r\n      </>\r\n    )\r\n  \r\n}\r\n  \r\n\r\n  export default ProjectDetails\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Image, Alert} from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst Leads = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n         useEffect(() => {\r\n           setTimeout(()=>{\r\n            axios.get(`/api/leads`)\r\n            .then(res => {\r\n                const lead = res.data;\r\n                setLeadData(lead)\r\n                setLoading(false)                     \r\n            }).catch(function (error) {\r\n              // handle error\r\n              setError(true)\r\n            })\r\n          }, 3000)\r\n          \r\n\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        csvExport: false,\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n        filter: textFilter(),\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        csvExport: false,\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    A simple primary alert — check it out!\r\n  </Alert>)\r\n  :  (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Leads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst LostLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n            axios.get(`/api/leads`)\r\n            .then(res => {\r\n                const lead = res.data.filter(lead => lead.status === \"Lost\" );\r\n                setLeadData(lead) \r\n                setLoading(false)                    \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LostLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst SiteVisitsLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n\r\n         useEffect(() => {\r\n            axios.get(`/api/leads`)\r\n            .then(res => {\r\n                const lead = res.data.filter(lead => lead.status === \"Visited\" );\r\n                setLeadData(lead)                     \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      \r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteVisitsLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\n// import ReactLogo from '../assets/img/technologies/react-logo-transparent.svg'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst NextFollowUp = ({history}) => {\r\n  var gapi = window.gapi\r\n\r\n  var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n  const [remainder, setRemainder] = useState(false) \r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n            axios.get(`/api/leads`)\r\n            .then(res => {\r\n                const today = new Date()\r\n                const lead = res.data.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  today.toISOString().split('T')[0]}});\r\n                console.log(lead)\r\n                setLeadData(lead)   \r\n                setLoading(false)                   \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n\r\n        const remainderHandler = () => {\r\n          // if(leadData && leadData.nextFollowUp){\r\n            gapi.load('client:auth2', () => {\r\n              console.log('loaded client')\r\n        \r\n              gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: DISCOVERY_DOCS,\r\n                scope: SCOPES,\r\n              })\r\n        \r\n              gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n        \r\n        \r\n              gapi.auth2.getAuthInstance().signIn()\r\n              .then(() => {\r\n                \r\n                \r\n                console.log(leadData)\r\n                var event = {\r\n                  'summary': leadData.customer,\r\n                  'location': '',\r\n                  'description': leadData.status,\r\n                  'start': {\r\n                    'dateTime': leadData.nextFollowUp,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'end': {\r\n                    'dateTime': `${leadData.nextFollowUp}`,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'recurrence': [\r\n                    'RRULE:FREQ=DAILY;COUNT=2'\r\n                  ],\r\n                  'attendees': [\r\n                    // {'email': 'lpage@example.com'},\r\n                    // {'email': 'sbrin@example.com'}\r\n                  ],\r\n                  'reminders': {\r\n                    'useDefault': false,\r\n                    'overrides': [\r\n                      {'method': 'email', 'minutes': 24 * 60},\r\n                      {'method': 'popup', 'minutes': 10}\r\n                    ]\r\n                  }\r\n                }\r\n              \r\n        \r\n                var request = gapi.client.calendar.events.insert({\r\n                  'calendarId': 'primary',\r\n                  'resource': event,\r\n                })\r\n        \r\n                request.execute(event => {\r\n                  console.log(event)\r\n                  window.open(event.htmlLink)\r\n                })\r\n                \r\n        \r\n                /*\r\n                    Uncomment the following block to get events\r\n                */\r\n                /*\r\n                // get events\r\n                gapi.client.calendar.events.list({\r\n                  'calendarId': 'primary',\r\n                  'timeMin': (new Date()).toISOString(),\r\n                  'showDeleted': false,\r\n                  'singleEvents': true,\r\n                  'maxResults': 10,\r\n                  'orderBy': 'startTime'\r\n                }).then(response => {\r\n                  const events = response.result.items\r\n                  console.log('EVENTS: ', events)\r\n                })\r\n                */\r\n            \r\n        \r\n              })\r\n            })\r\n          // }\r\n          setRemainder(true)\r\n        }\r\n\r\n        \r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      // {\r\n      //   dataField: \"\",\r\n      //   text: \"\",\r\n      //   formatter: (cell,row) => {\r\n      //     return (\r\n      //       <button className=\"btn btn-primary\" onClick={ ()=>remainderHandler(row) }>Remainder</button>\r\n      //     );\r\n      //   },\r\n\r\n      // },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextFollowUp\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    BULK_LEAD_ADD_REQUEST,\r\n    BULK_LEAD_ADD_SUCCESS,\r\n    BULK_LEAD_ADD_FAIL,\r\n    BULK_LEAD_ADD_RESET,\r\n    BULK_LEAD_ASSIGN_REQUEST,\r\n    BULK_LEAD_ASSIGN_SUCCESS,\r\n    BULK_LEAD_ASSIGN_FAIL,\r\n    BULK_LEAD_LIST_REQUEST,\r\n    BULK_LEAD_LIST_SUCCESS,\r\n    BULK_LEAD_LIST_FAIL,\r\n    BULK_LEAD_EDIT_REQUEST,\r\n    BULK_LEAD_EDIT_SUCCESS,\r\n    BULK_LEAD_EDIT_FAIL,\r\n    LEADASSIGNER_BULK_LEAD_ADD_REQUEST,\r\n    LEADASSIGNER_BULK_LEAD_ADD_SUCCESS,\r\n    LEADASSIGNER_BULK_LEAD_ADD_FAIL,\r\n    LEADASSIGNER_BULK_LEAD_ASSIGN_REQUEST,\r\n    LEADASSIGNER_BULK_LEAD_ASSIGN_SUCCESS,\r\n    LEADASSIGNER_BULK_LEAD_ASSIGN_FAIL,\r\n} from '../constants/bulkLeadConstants'\r\n\r\n\r\nexport const addBulkLeadData = (leadData) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n      dispatch({\r\n        type: BULK_LEAD_ADD_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/bulkLead/create',\r\n        {bulkLeadArray: leadData},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: BULK_LEAD_ADD_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: BULK_LEAD_ADD_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const assignBulkLead = (leadData) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: BULK_LEAD_ASSIGN_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        '/api/bulkLead/assign/consultant',\r\n        leadData,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: BULK_LEAD_ASSIGN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: BULK_LEAD_ASSIGN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const getBulkLeadList = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: BULK_LEAD_LIST_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(\r\n        '/api/bulkLead',\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: BULK_LEAD_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: BULK_LEAD_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const editBulkLeadData = (lead) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n      dispatch({\r\n        type: BULK_LEAD_EDIT_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/bulkLead/edit/lead/${lead._id}`,\r\n        lead,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: BULK_LEAD_EDIT_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: BULK_LEAD_EDIT_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const leadAssignerAddBulkLeadData = (leadData) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n      dispatch({\r\n        type: LEADASSIGNER_BULK_LEAD_ADD_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/leadAssigner/create/BulkLead',\r\n        {bulkLeadArray: leadData},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: LEADASSIGNER_BULK_LEAD_ADD_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: LEADASSIGNER_BULK_LEAD_ADD_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const leadAssignerAssignBulkLeadData = (managerId,leadData) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n      dispatch({\r\n        type: LEADASSIGNER_BULK_LEAD_ASSIGN_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        '/api/leadAssigner/assignTo/manager',\r\n        {managerId:managerId.selectedManager,bulkLeadArray: leadData},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: LEADASSIGNER_BULK_LEAD_ASSIGN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n        type: LEADASSIGNER_BULK_LEAD_ASSIGN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","export const BULK_LEAD_ADD_REQUEST = 'BULK_LEAD_ADD_REQUEST'\r\nexport const BULK_LEAD_ADD_SUCCESS = 'BULK_LEAD_ADD_SUCCESS'\r\nexport const BULK_LEAD_ADD_FAIL = 'BULK_LEAD_ADD_FAIL'\r\nexport const BULK_LEAD_ADD_RESET = 'BULK_LEAD_ADD_RESET'\r\n\r\nexport const BULK_LEAD_ASSIGN_REQUEST = 'BULK_LEAD_ASSIGN_REQUEST'\r\nexport const BULK_LEAD_ASSIGN_SUCCESS = 'BULK_LEAD_ASSIGN_SUCCESS'\r\nexport const BULK_LEAD_ASSIGN_FAIL = 'BULK_LEAD_ASSIGN_FAIL'\r\n\r\nexport const BULK_LEAD_LIST_REQUEST = 'BULK_LEAD_LIST_REQUEST'\r\nexport const BULK_LEAD_LIST_SUCCESS = 'BULK_LEAD_LIST_SUCCESS'\r\nexport const BULK_LEAD_LIST_FAIL = 'BULK_LEAD_LIST_FAIL'\r\n\r\nexport const BULK_LEAD_EDIT_REQUEST = 'BULK_LEAD_EDIT_REQUEST'\r\nexport const BULK_LEAD_EDIT_SUCCESS = 'BULK_LEAD_EDIT_SUCCESS'\r\nexport const BULK_LEAD_EDIT_FAIL = 'BULK_LEAD_EDIT_FAIL'\r\n\r\nexport const LEADASSIGNER_BULK_LEAD_ADD_REQUEST = 'LEADASSIGNER_BULK_LEAD_ADD_REQUEST'\r\nexport const LEADASSIGNER_BULK_LEAD_ADD_SUCCESS = 'LEADASSIGNER_BULK_LEAD_ADD_SUCCESS'\r\nexport const LEADASSIGNER_BULK_LEAD_ADD_FAIL = 'LEADASSIGNER_BULK_LEAD_ADD_FAIL'\r\nexport const LEADASSIGNER_BULK_LEAD_ADD_RESET = 'LEADASSIGNER_BULK_LEAD_ADD_RESET'\r\n\r\nexport const LEADASSIGNER_BULK_LEAD_ASSIGN_REQUEST = 'LEADASSIGNER_BULK_LEAD_ASSIGN_REQUEST'\r\nexport const LEADASSIGNER_BULK_LEAD_ASSIGN_SUCCESS = 'LEADASSIGNER_BULK_LEAD_ASSIGN_SUCCESS'\r\nexport const LEADASSIGNER_BULK_LEAD_ASSIGN_FAIL = 'LEADASSIGNER_BULK_LEAD_ASSIGN_FAIL'\r\nexport const LEADASSIGNER_BULK_LEAD_ASSIGN_RESET = 'LEADASSIGNER_BULK_LEAD_ASSIGN_RESET'","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CSVReader from 'react-csv-reader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Button, Image, Alert } from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport template from \"../assets/files/Bulk_upload_sheet.csv\"\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport Preloader from '../components/Preloader';\r\n\r\nimport { addBulkLeadData, assignBulkLead, getBulkLeadList, editBulkLeadData } from '../actions/bulkLeadActions';\r\n\r\n\r\nconst UploadLeads = ({history}) => {\r\n    const [leadData, setLeadData] = useState([])\r\n    const [leadList, setLeadList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const getBulkLead = useSelector((state) => state.getBulkLead)\r\n    const {leadList: leads } = getBulkLead\r\n\r\n\r\n    useEffect(()=>{\r\n      if (userInfo && userInfo.isAdmin) {\r\n        // dispatch(getBulkLeadList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [userInfo, history])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //   if(leads){\r\n    //     setLeadData(leads)\r\n    //   }else{\r\n    //   dispatch(getBulkLeadList())\r\n    //   }\r\n    // },[leads])\r\n\r\n    useEffect(() => {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      setTimeout(()=>{\r\n       axios.get(`/api/bulkLead`, config)\r\n       .then(res => {\r\n           const lead = res.data;\r\n           setLeadData(lead)\r\n           setLoading(false)                     \r\n       }).catch(function (error) {\r\n         // handle error\r\n         setLoading(false)\r\n         setError(error)\r\n       })\r\n     }, 3000)\r\n     \r\n\r\n    }, [])\r\n\r\n    console.log(leadData)\r\n\r\n    // useEffect(()=>{\r\n     \r\n    //   if(leadList && leadList.length>0){\r\n    //     var b = []\r\n    //     for(var i=1; i< leadList.length-1; i++){\r\n    //       const a = {\r\n    //           \"serial\": i,\r\n    //           \"customerName\" : leadList[i][0],\r\n    //           \"enquiryDate\" : leadList[i][1]? `${leadList[i][1]}T00:00:00.000Z` : '',\r\n    //           \"contactNumber\": leadList[i][2],\r\n    //           \"project\": {\r\n    //               \"mainProject\": leadList[i][3],\r\n    //               \"subProject\": leadList[i][4]\r\n    //           },\r\n    //           \"leadScore\": leadList[i][5],\r\n    //           \"leadType\": leadList[i][6],\r\n    //           \"status\": leadList[i][7],\r\n    //           \"remarks\": leadList[i][8],\r\n    //           \"nextFollow\": leadList[i][9]?`${leadList[i][9]}T00:00:00.000Z`:'',\r\n    //           \"managerRemarks\": leadList[i][10],\r\n    //           \"payment\":{\r\n    //               \"firstInstallment\" : 0,\r\n    //               \"secondInstallment\" : 0,\r\n    //               \"thirdInstallment\" : 0\r\n    //           },\r\n    //           \"cancellation\":false,\r\n    //           \"totalSqft\" : 0,\r\n    //           \"createdUser\": userInfo._id,\r\n    //           \"assignedUser\":\"\"\r\n    //       }\r\n  \r\n    //       b.push(a)\r\n          \r\n    //       }\r\n          \r\n    //       setLeadData([...leadData, ...b])\r\n\r\n  \r\n    //     dispatch(addBulkLeadData(b))\r\n    //   }\r\n    // },[leadList])\r\n       \r\n\r\n    // const lead = leadData.splice(1)\r\n    \r\n  \r\n    \r\n\r\n    // if(leadData.length === leadList.length-2){\r\n    //   var num = Math.ceil(leadData.length/cons.length)\r\n      \r\n    //   var x = 0\r\n    //   for(var j=0; j<cons.length; j++){\r\n        \r\n    //       for(var k=x; k<num; k++){\r\n    //       if(leadData[k]){\r\n    //       leadData[k].assignedUser = cons[j]._id\r\n    //       }\r\n        \r\n    //   }\r\n    //   if(num+x < leadData.length)\r\n    //     {\r\n    //     x=+num\r\n    //     num=num+x\r\n    //     }else{\r\n    //       num = leadData.length\r\n    //       x=0\r\n    //     }\r\n    //   }\r\n    //     dispatch(addbulkLeads(leadData))\r\n    // }\r\n\r\n    const assignHandler = (e) => {\r\n      dispatch(assignBulkLead(leadList))\r\n    }\r\n\r\n    const editTableHandler = (lead) => {\r\n        dispatch(editBulkLeadData(lead))\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"serial\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, leadData) => {\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customerName\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n              if(enquiryDate){\r\n            return enquiryDate && new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Project\",\r\n        //   filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n        //   filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollow\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (nextFollow) => {\r\n              if(nextFollow){\r\n            return nextFollow && new Date(`${nextFollow}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          csvExport: false,\r\n          formatter: (cell,row) => {\r\n            return (\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n \r\n\r\n    \r\n    return (\r\n        <>\r\n        {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    {error}\r\n  </Alert>):(\r\n        <div>\r\n          <div className=\"d-flex justify-content-between my-3 px-md-3 px-sm-1\">\r\n            <div>\r\n          <a href={template} className='btn btn-primary' download>Template</a>\r\n          <Button className='btn btn-primary ms-3' onClick={(e)=>assignHandler(e)} disabled={leadData && leadData.length>0? false : true}> Assign Leads</Button>\r\n          </div>\r\n            <CSVReader onFileLoaded={(data, fileInfo, originalFile) => setLeadList(data)} />           \r\n            {/* <img src={Profile1} alt=\"\" /> */}\r\n            </div>\r\n            <div>\r\n    \r\n                <BootstrapTable\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData.bulkLeadList}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                    />\r\n        </div>\r\n        </div>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadLeads\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n\r\nfunction App() {\r\n\r\n  var gapi = window.gapi\r\n  /* \r\n    Update with your own Client Id and Api key \r\n  */\r\n  var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n  var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n  const handleClick = () => {\r\n    gapi.load('client:auth2', () => {\r\n      console.log('loaded client')\r\n\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n\r\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n      gapi.auth2.getAuthInstance().signIn()\r\n      .then(() => {\r\n        \r\n        var event = {\r\n          'summary': 'Awesome Event!',\r\n          'location': '800 Howard St., San Francisco, CA 94103',\r\n          'description': 'Really great refreshments',\r\n          'start': {\r\n            'dateTime': new Date('2022-06-12T09:18:01.221Z').toISOString().replace('Z',''),\r\n            'timeZone': 'America/Los_Angeles'\r\n          },\r\n          'end': {\r\n            'dateTime': new Date('2022-06-12T09:38:01.221Z').toISOString().replace('Z',''),\r\n            'timeZone': 'America/Los_Angeles'\r\n          },\r\n          'recurrence': [\r\n            'RRULE:FREQ=DAILY;COUNT=1'\r\n          ],\r\n          'attendees': [\r\n            {'email': 'lpage@example.com'},\r\n            {'email': 'sbrin@example.com'}\r\n          ],\r\n          'reminders': {\r\n            'useDefault': false,\r\n            'overrides': [\r\n              {'method': 'email', 'minutes': 24 * 60},\r\n              {'method': 'popup', 'minutes': 10}\r\n            ]\r\n          }\r\n        }\r\n\r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event,\r\n        })\r\n\r\n        request.execute(event => {\r\n          console.log(event)\r\n          window.open(event.htmlLink)\r\n        })\r\n        \r\n\r\n        /*\r\n            Uncomment the following block to get events\r\n        */\r\n        /*\r\n        // get events\r\n        gapi.client.calendar.events.list({\r\n          'calendarId': 'primary',\r\n          'timeMin': (new Date()).toISOString(),\r\n          'showDeleted': false,\r\n          'singleEvents': true,\r\n          'maxResults': 10,\r\n          'orderBy': 'startTime'\r\n        }).then(response => {\r\n          const events = response.result.items\r\n          console.log('EVENTS: ', events)\r\n        })\r\n        */\r\n    \r\n\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n        <p>Click to add event to Google Calendar</p>\r\n        <p style={{fontSize: 18}}>Uncomment the get events code to get events</p>\r\n        <p style={{fontSize: 18}}>Don't forget to add your Client Id and Api key</p>\r\n        <button style={{width: 100, height: 50}} onClick={handleClick}>Add Event</button>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React,{useState, useEffect} from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n\r\n// import { fetchLeadList } from \"./../actions/leadActions\";\r\n\r\n// const Calendar= () => {\r\n//   var gapi = window.gapi\r\n\r\n//   const [leads, setLeads] = useState([])\r\n\r\n//   const dispatch = useDispatch()\r\n\r\n//   const leadList = useSelector((state) => state.leadList)\r\n//   const { loading, error, leadInfo } = leadList\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchLeadList())\r\n//   },[])\r\n\r\n//   useEffect(()=>{\r\n//     if(leadInfo){\r\n//     setLeads(leadInfo.slice(1,3))\r\n//     }\r\n//   }, [leadInfo])\r\n\r\n//   console.log(22, leadInfo)\r\n\r\n\r\n//   /* \r\n//     Update with your own Client Id and Api key \r\n//   */\r\n//   var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n//   var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n//   var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n//   var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n//   useEffect(() => {\r\n//     if(leads){\r\n//     gapi.load('client:auth2', () => {\r\n//       console.log('loaded client')\r\n\r\n//       gapi.client.init({\r\n//         apiKey: API_KEY,\r\n//         clientId: CLIENT_ID,\r\n//         discoveryDocs: DISCOVERY_DOCS,\r\n//         scope: SCOPES,\r\n//       })\r\n\r\n//       gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n\r\n//       gapi.auth2.getAuthInstance().signIn()\r\n//       .then(() => {\r\n        \r\n//         for(var i = 0; i < leads.length; i++){\r\n//         console.log(leads[i])\r\n//         var event = {\r\n//           'summary': leads[i].customer,\r\n//           'location': '',\r\n//           'description': leads.status,\r\n//           'start': {\r\n//             'dateTime': leads.nextFollow ? leads.nextFollow.toISOString().remove('Z','') : null,\r\n//             'timeZone': 'Asia/Kolkata'\r\n//           },\r\n//           'end': {\r\n//             'dateTime': `${leads.nextFollow ? leads.nextFollow.toISOString().remove('Z','') : null}`,\r\n//             'timeZone': 'Asia/Kolkata'\r\n//           },\r\n//           'recurrence': [\r\n//             'RRULE:FREQ=DAILY;COUNT=2'\r\n//           ],\r\n//           'attendees': [\r\n//             // {'email': 'lpage@example.com'},\r\n//             // {'email': 'sbrin@example.com'}\r\n//           ],\r\n//           'reminders': {\r\n//             'useDefault': false,\r\n//             'overrides': [\r\n//               {'method': 'email', 'minutes': 24 * 60},\r\n//               {'method': 'popup', 'minutes': 10}\r\n//             ]\r\n//           }\r\n//         }\r\n//       }\r\n\r\n//         var request = gapi.client.calendar.events.insert({\r\n//           'calendarId': 'primary',\r\n//           'resource': event,\r\n//         })\r\n\r\n//         request.execute(event => {\r\n//           console.log(event)\r\n//           window.open(event.htmlLink)\r\n//         })\r\n        \r\n\r\n//         /*\r\n//             Uncomment the following block to get events\r\n//         */\r\n//         /*\r\n//         // get events\r\n//         gapi.client.calendar.events.list({\r\n//           'calendarId': 'primary',\r\n//           'timeMin': (new Date()).toISOString(),\r\n//           'showDeleted': false,\r\n//           'singleEvents': true,\r\n//           'maxResults': 10,\r\n//           'orderBy': 'startTime'\r\n//         }).then(response => {\r\n//           const events = response.result.items\r\n//           console.log('EVENTS: ', events)\r\n//         })\r\n//         */\r\n    \r\n\r\n//       })\r\n//     })\r\n//   }\r\n//   },[leads])\r\n\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n//         <p>Click to add event to Google Calendar</p>\r\n//         <p style={{fontSize: 18}}>Uncomment the get events code to get events</p>\r\n//         <p style={{fontSize: 18}}>Don't forget to add your Client Id and Api key</p>\r\n//         <button style={{width: 100, height: 50}}>Add Event</button>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Calendar;","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CSVReader from 'react-csv-reader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport {updateLeadData} from '../actions/leadActions';\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\n\r\n\r\n\r\nconst buttonRef = React.createRef();\r\n\r\nconst BulkLeads = () => {\r\n    const [leadData, setLeadData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n  \r\n          //  useEffect(() => {\r\n          //    setTimeout(()=>{\r\n          //     axios.get(`/api/leads`)\r\n          //     .then(res => {\r\n          //         const lead = res.data.filter(lead => lead.assignedUser === \"\" );;\r\n          //         setLeadData(lead)\r\n          //         setLoading(false)                     \r\n          //     }).catch(function (error) {\r\n          //       // handle error\r\n          //       setError(true)\r\n          //     })\r\n          //   }, 2000)\r\n            \r\n  \r\n          //  }, [])\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const addLeadHandler = (lead) => {\r\n        lead.assignedUser = userInfo._id\r\n        dispatch(updateLeadData(lead))\r\n    }\r\n\r\n    \r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"leadData\",\r\n          text: \"Serial No.\",\r\n          csvExport: false,\r\n          formatter :(row,index, leadData) => {\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customer\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n              if(enquiryDate){\r\n            return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Project\",\r\n        //   filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n        //   filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollow\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n              if(enquiryDate){\r\n            return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          csvExport: false,\r\n          formatter: (cell,row) => {\r\n            return (\r\n              <button className=\"btn btn-primary\" onClick={ ()=>addLeadHandler(row) }>Add</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n\r\n    \r\n    return (\r\n        <>\r\n        {leadData && \r\n        <div>\r\n            <div>  \r\n                <BootstrapTable\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                    />\r\n        </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BulkLeads\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport { deleteUser } from '../actions/userActions';\r\nimport axios from 'axios';\r\nimport { createHashHistory } from 'history'\r\n\r\n\r\nconst ReactTable = ({users}) => {\r\n    const dispatch = useDispatch()\r\n    const history = createHashHistory()\r\n\r\n    const { SearchBar } = Search;\r\n\r\n    const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n    const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n         dispatch(deleteUser(id))\r\n        //  history.push('/remove/consultant')\r\n        window.location.reload()\r\n        }\r\n    }\r\n\r\n    const editHandler = (id) => {\r\n      history.push(`/activitylog/${id}/`)\r\n    }\r\n\r\n    const afterSearch = (newResult) => {\r\n      console.log(newResult);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"users\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, users) => {\r\n            console.log(row, index)\r\n            return users+1\r\n          },\r\n        },\r\n        {\r\n          dataField: \"empCode\",\r\n          text: \"Employee Code\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"name\",\r\n          text: \"Name\",\r\n          sort: true,\r\n          \r\n        },\r\n        {\r\n          dataField: \"mobile\",\r\n          text: \"Mobile no.\"\r\n        },\r\n        {\r\n          dataField: \"email\",\r\n          text: \"Email Id\",\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          formatter: (cell,row) => {\r\n            return (\r\n              // <button className=\"btn btn-primary\" onClick={ ()=>deleteHandler(row._id) }>Remove</button>\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editHandler(row._id) }>Activity Log</button>\r\n\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n    return (\r\n        <div>\r\n          \r\n          <ToolkitProvider\r\n            keyField=\"_id\"\r\n            data={ users }\r\n            columns={ columns }\r\n            search\r\n          >\r\n            {\r\n            props => (\r\n            <div>\r\n              {/* <span>Search: </span> */}\r\n              <SearchBar { ...props.searchProps } />\r\n              <hr />\r\n        \r\n            <BootstrapTable\r\n                  { ...props.baseProps }\r\n                 bootstrap4\r\n                 keyField=\"_id\"\r\n                 data={users}\r\n                 columns={columns}\r\n                 filter={ filterFactory() }\r\n                 pagination={paginationFactory({ sizePerPage: 10 })}\r\n                 striped\r\n               />\r\n               </div>\r\n               )\r\n               }\r\n               </ToolkitProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactTable\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\nimport { fetchUserList } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport UserTable from './UserTable';\r\n\r\n\r\nconst UserList = ({history}) => {\r\n    // const [userList, setUserList] = useState([])\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n        dispatch(fetchUserList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    \r\n  \r\n\r\n  \r\n  \r\n  \r\n  if(users === undefined){\r\n  return (\r\n    <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n    \r\n  )\r\n  } else{\r\n    return (\r\n      \r\n      <>\r\n      {loading? (\r\n        // <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        // <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={40} />\r\n        // </div>\r\n        <div></div>\r\n      ) : (\r\n      <div>\r\n        \r\n                    <UserTable users={users}/>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n\r\n  export default UserList\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport {activityLogData} from '../actions/activityLogActions'\r\nimport { fetchUserDetail } from '../actions/userActions';\r\nimport { fetchConsultantLeadList, fetchManagerLeadList, fetchTeamLeadLeadList } from '../actions/leadActions';\r\n\r\n// delete lead -> null remaining\r\n\r\nconst ActivityLog = ({history, match}) => {\r\n  const id = match.params.id\r\n  const d = new Date()\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n  const [fetchedLeadList, setFetchedLeadList] = useState()\r\n  const [bookingMonthlyStatus, setBookingMonthlyStatus] = useState(0)\r\n  const [siteVisitsMonthlyStatus, setSiteVisitsMonthlyStatus] = useState(0)\r\n  const [leadMonthlyStatus, setLeadMonthlyStatus] = useState(0)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const activityLogDetail = useSelector((state) => state.activityLogDetail)\r\n    const { loading , error, activityLog } = activityLogDetail\r\n\r\n    const userDetail = useSelector((state) => state.userDetail)\r\n    const { userData } = userDetail\r\n\r\n\r\n    const consultantLeadList = useSelector((state) => state.consultantLeadList)\r\n    const {leadList: consultantLeads } = consultantLeadList\r\n\r\n    const teamLeadLeadList = useSelector((state) => state.teamLeadLeadList)\r\n    const {leadList: teamLeadLeads } = teamLeadLeadList\r\n\r\n    const managerLeadList = useSelector((state) => state.managerLeadList)\r\n    const {leadList: managerLeads } = managerLeadList\r\n\r\n  useEffect(()=>{\r\n    if(userInfo && userInfo.isAdmin){\r\n    dispatch(activityLogData(id))\r\n    dispatch(fetchUserDetail(id))\r\n    }else{\r\n      history.push(`/login`)\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(fetchedLeadList){\r\n    setBookingMonthlyStatus(fetchedLeadList.leadsList && fetchedLeadList.leadsList.filter(lead => lead.status === 'booked' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n    setSiteVisitsMonthlyStatus(fetchedLeadList.leadsList.filter(lead => lead.status === 'visited' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n    setLeadMonthlyStatus(fetchedLeadList.leadsList.filter(lead =>new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(userData && !userData.isAdmin)\r\n    {if(consultantLeads || teamLeadLeads || managerLeads){\r\n      if(userData.role === \"Consultant\"){\r\n        console.log(1,consultantLeads)\r\n        setFetchedLeadList(consultantLeads)\r\n      }else if(userData.role === \"TeamLead\"){\r\n        console.log(2,teamLeadLeads)\r\n        setFetchedLeadList(teamLeadLeads)\r\n      }else if(userData.role === \"Manager\"){\r\n        console.log(3,managerLeads)\r\n        setFetchedLeadList(managerLeads)\r\n      }\r\n    }\r\n    else if(userData){\r\n      if(userData.role === \"Consultant\"){\r\n        dispatch(fetchConsultantLeadList(userData._id))\r\n      }else if(userData.role === \"TeamLead\"){\r\n        dispatch(fetchTeamLeadLeadList(id))\r\n      }else if(userData.role === \"Manager\"){\r\n        dispatch(fetchManagerLeadList(id))\r\n      }\r\n    }}\r\n\r\n  }, [userData])\r\n\r\n  useEffect(()=>{\r\n    if(activityLog && activityLog.activityLogData && activityLog.activityLogData.length>0){\r\n      setName(activityLog.activityLogData[0].member.name.charAt(0).toUpperCase()+activityLog.activityLogData[0].member.name.slice(1))\r\n    }\r\n  },[activityLog])\r\n\r\n  const leadHandler = (activity) => {\r\n    history.push(`/leads/${activity.leadId._id}/edit`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) : activityLog && activityLog.activityLogData.length > 0 ?(\r\n      <>\r\n      <h3 className='mb-3'>{activityLog && activityLog.activityLogData && (name + ' - ' +(activityLog.activityLogData[0].member.role)+'') }</h3>\r\n    <Row className=\"\">\r\n      <Col xs={12} sm={6} xl={8} className=\"mb-4 d-sm-block\">\r\n    <div className=''>\r\n      {(activityLog && activityLog.activityLogData) && activityLog.activityLogData.map((activity, i) => (\r\n      <Card className='px-3 py-3 mb-2 d-flex justify-content-between align-items-center flex-row' key={i}>\r\n        <div>\r\n        <a className={`mb-3 action-text ${activity.leadId === null ? 'deleted-lead':'' }`} onClick={()=>leadHandler(activity)} > {name} {activity.action}</a>\r\n        </div>\r\n        <div className='me-0 mt-2'>\r\n        {/* <p className='mb-1'>{new Date(activity.createdAt).toDateString()}</p> */}\r\n        <p className='mb-1' style={{\"color\":\"#69acbf\"}}>  <TimeAgo date={new Date(activity.createdAt)} /> </p>\r\n        </div>\r\n      </Card>\r\n      ))\r\n  }\r\n  </div>\r\n  </Col>\r\n  \r\n      <Col xs={12} sm={6} xl={4} className=\"mb-4 d-sm-block\">\r\n      <CounterWidget\r\n            category=\"Bookings\"\r\n            title={userData? `${bookingMonthlyStatus}/${userData.setMilestone.bookings}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n          <br/>\r\n\r\n      <CounterWidget\r\n            category=\"Site Visits\"\r\n            title={userData? `${siteVisitsMonthlyStatus}/${userData.setMilestone.siteVisits}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n<br/>\r\n      <CounterWidget\r\n            category=\"Leads\"\r\n            title={userData? `${leadMonthlyStatus}/${userData.setMilestone.leads}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n      </Col>\r\n      </Row>\r\n    </>\r\n  ):(\r\n    <div className='p-5 d-flex justify-content-center align-items-center'>\r\n      <h1>\"No Activity\"</h1>\r\n    </div>\r\n  )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ActivityLog","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup, Alert } from '@themesberg/react-bootstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\nimport {fetchUserDetail, updateUser, managerList, teamLeadsUnderManager} from '../actions/userActions'\r\nimport { projects } from \"../actions/projectActions\";\r\nimport { fetchConsultantLeadList } from \"../actions/leadActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\n\r\nexport default ({history, match}) => {\r\n    const userId = match.params.id\r\n    const d = new Date()\r\n\r\n    const [user, setUser] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    // const [underManager, setUnderManager] = useState('')\r\n    // const [underTeamLead, setUnderTeamLead] = useState('')\r\n    const [role, setRole] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [bookingTarget, setBookingTarget] = useState(0)\r\n    const [bookingMonthlyStatus, setBookingMonthlyStatus] = useState(0)\r\n    const [siteVisitsMonthlyStatus, setSiteVisitsMonthlyStatus] = useState(0)\r\n    const [leadMonthlyStatus, setLeadMonthlyStatus] = useState(0)\r\n    const [bookingDailyStatus, setBookingDailyStatus] = useState(0)\r\n    const [siteVisitsDailyStatus, setSiteVisitsDailyStatus] = useState(0)\r\n    const [leadDailyStatus, setLeadDailyStatus] = useState(0)\r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const { addToast } = useToasts();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const userDetail = useSelector((state) => state.userDetail)\r\n    const { loading, error, userData} = userDetail\r\n\r\n    const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    const { managers } = fetchManagers\r\n\r\n    const teamLeads = useSelector((state) => state.teamLeadsUnderManager)\r\n    const { teamleadList: teamlead } = teamLeads\r\n    \r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const consultantLeadList = useSelector((state) => state.consultantLeadList)\r\n    const {leadList: consultantLeads } = consultantLeadList\r\n\r\n    useEffect(()=>{\r\n      if (userInfo && userInfo.isAdmin) {\r\n        dispatch(fetchUserDetail(userId))\r\n        dispatch(fetchConsultantLeadList(userId))\r\n\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [userInfo, history])\r\n\r\n\r\n    useEffect(()=>{\r\n      if(consultantLeads && consultantLeads.leadsList ){\r\n      setBookingDailyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'booked' && new Date(lead.updatedAt).toISOString().split('T')[0] === d.toISOString().split('T')[0] ).length)\r\n      setSiteVisitsDailyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'visited' && new Date(lead.updatedAt).toISOString().split('T')[0] === d.toISOString().split('T')[0]).length)\r\n      setLeadDailyStatus(consultantLeads.leadsList.filter(lead =>new Date(lead.updatedAt).toISOString().split('T')[0] === d.toISOString().split('T')[0]).length)\r\n      setBookingMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'booked' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      setSiteVisitsMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'visited' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      setLeadMonthlyStatus(consultantLeads.leadsList.filter(lead =>new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      }\r\n    }, [consultantLeads])\r\n\r\n    // useEffect(()=>{\r\n    //   if(!managers){\r\n    //     dispatch(managerList())\r\n    //   }\r\n    //   if(underManager){\r\n    //     dispatch(teamLeadsUnderManager(underManager))\r\n    //   }\r\n    //   if(!projectInfo){\r\n    //     dispatch(projects())\r\n    //   }\r\n    //   if(underManager && managers){\r\n    //     const a  = managers.filter(m => m._id === underManager)[0]\r\n    //     setMainProject(a? a.project : null)\r\n    //   }\r\n    // },[underManager, role ])\r\n\r\n    useEffect(()=>{\r\n      if(projectInfo){\r\n        setMainProject(projectInfo.filter(project => project._id === mainProject)[0]?projectInfo.filter(project => project._id === mainProject)[0].mainProject : '')\r\n      }else{\r\n        dispatch(projects())\r\n      }\r\n    }, [projectInfo])\r\n\r\n    useEffect(()=>{\r\n      if(userData){\r\n        setName(userData.name)\r\n        setEmail(userData.email)\r\n        setMobile(userData.mobile)\r\n        setRole(userData.role)\r\n        setEmpCode(userData.empCode)\r\n        setMainProject(userData.project)\r\n        // setUnderManager(userData.managerId)\r\n        // setUnderTeamLead(userData.teamLeadId)\r\n        setBookingTarget(userData.setMilestone.bookings)\r\n        // setUser(user._id = userData._id)\r\n\r\n      }\r\n    },[userData])\r\n\r\n    const submitHandler = (e) => {\r\n\r\n      e.preventDefault()\r\n      setUser(\r\n        user._id = userData._id,\r\n          user.name = name, \r\n          user.email = email,\r\n          user.empCode= empCode,\r\n          user.mobile= mobile,\r\n         (password && (password === confirmPassword))?  user.password= password : null,\r\n          user.role= role,\r\n          user.asm= \"null\",\r\n          user.cpm= \"null\",\r\n          user.isAdmin= \"false\",\r\n        user.setMilestone = {\r\n          bookings: bookingTarget,\r\n          leads: bookingTarget * 4,\r\n          siteVisits: bookingTarget * 6\r\n        })\r\n      dispatch(updateUser(user, addToast))\r\n    }\r\n\r\n  \r\n  return (\r\n    <>\r\n\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={(e)=>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" minLength={10} maxLength={10} placeholder=\"Mobile no.\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n          <Col md={6} className=\"mb-3\">\r\n            <Form.Group className=\"mb-2\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Select id=\"state\" value={role} onChange={e=> setRole(e.target.value)} required>\r\n                <option>Select</option>\r\n                  <option value=\"Manager\">Manager</option>\r\n                  <option value=\"TeamLead\">TeamLead</option>\r\n                  <option value=\"asm\">ASM</option>\r\n                  <option value=\"Consultant\">Consultant</option>\r\n                  <option value=\"cpm\">Channel Partner Manager</option>\r\n                  <option value=\"cp\">Channel Partner</option>\r\n                  <option value=\"lead assigner\">Lead Assigner</option>\r\n                </Form.Select>\r\n            </Form.Group>\r\n            </Col>\r\n\r\n          <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Project</Form.Label>\r\n                  {/* <Form.Select id=\"state\" defaultValue={(mainProject && mainProject.mainProject)? mainProject : \"No Project\"} onChange={e=> setMainProject(e.target.value)} required disabled={false}>\r\n                  <option>Select</option>\r\n                </Form.Select> */}\r\n                <Form.Control required type=\"text\"  value={mainProject? mainProject.mainProject : \"No Project Assigned\"} disabled/>\r\n                {/* <p>{(mainProject && mainProject.mainProject)? mainProject : \"No Project\"}</p> */}\r\n                </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n           {/* <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Manager</Form.Label>\r\n                  <Form.Select id=\"state\" value={underManager} onChange={e=> setUnderManager(e.target.value)}  disabled={(role==='Consultant' || role==='TeamLead') ? false:true}>\r\n                <option>Select</option>\r\n                <>\r\n                  {managers && managers.map((manager,i)=>{return (<option key={i} value={manager._id}>{manager.name}</option>)})}\r\n                  </>\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>TeamLead</Form.Label>\r\n                  <Form.Select id=\"state\" value={underTeamLead} onChange={e=> setUnderTeamLead(e.target.value)} disabled={role==='Consultant'? false:true}>\r\n                  <option>Select</option>\r\n                  {(teamlead && teamlead.teamLeadsList.length>0) && teamlead.teamLeadsList.map((lead,i)=><option key={i} value={lead.userId._id}>{lead.userId.name}</option>)}\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            \r\n            \r\n          </Row>  */}\r\n\r\n          <Row>\r\n            <h5 className=\"mb-4\">Set Milestone (monthly)</h5>\r\n            <Col md={4} className=\"mb-3\">\r\n              <Form.Group id=\"booking\">\r\n                <Form.Label>Booking Target</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingTarget} onChange={(e) => setBookingTarget(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Site Visits Target</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingTarget*4} onChange={(e) => setBookingTarget(e.target.value)} disabled/>\r\n              </Form.Group>\r\n              {/* Site Visits Target : {bookingTarget * 4} */}\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Lead Generation Target</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingTarget*6} onChange={(e) => setBookingTarget(e.target.value)} disabled/>\r\n              </Form.Group>\r\n              {/* Lead Generation Target : {bookingTarget * 4} */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <h5 className=\"mb-4\">Achieved (monthly)</h5>\r\n            <Col md={4} className=\"mb-3\">\r\n              <Form.Group id=\"booking\">\r\n                <Form.Label>Booking Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingMonthlyStatus}  disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Site Visits Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={siteVisitsMonthlyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Site Visits Target : {bookingTarget * 4} */}\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Lead Generation Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={leadMonthlyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Lead Generation Target : {bookingTarget * 4} */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <h5 className=\"mb-4\">Achieved (Daily)</h5>\r\n            <Col md={4} className=\"mb-3\">\r\n              <Form.Group id=\"booking\">\r\n                <Form.Label>Booking Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingDailyStatus}  disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Site Visits Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={siteVisitsDailyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Site Visits Target : {bookingTarget * 4} */}\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Lead Generation Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={leadDailyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Lead Generation Target : {bookingTarget * 4} */}\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          <Row className=\"mt-3\">\r\n          <h5 className=\"mb-4\">Change Password</h5>\r\n          <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Change Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control  type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required = {password? true : false} type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <p className=\"alert-message\">{password & (password === confirmPassword)? \"Password does not match\": ''}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, {useState, useEffect,  forwardRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { fetchLeadList } from '../actions/leadActions';\r\nimport {\r\n  Chart,\r\n  ArcElement,\r\n  LineElement,\r\n  BarElement,\r\n  PointElement,\r\n  BarController,\r\n  BubbleController,\r\n  DoughnutController,\r\n  LineController,\r\n  PieController,\r\n  PolarAreaController,\r\n  RadarController,\r\n  ScatterController,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  RadialLinearScale,\r\n  TimeScale,\r\n  TimeSeriesScale,\r\n  Decimation,\r\n  Filler,\r\n  Legend,\r\n  Title,\r\n  Tooltip\r\n} from 'chart.js'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { faCashRegister, faChartLine, faCloudUploadAlt, faPlus, faRocket, faTasks, faUserShield } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { trafficShares, totalOrders } from \"../data/charts\";\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\n\r\nimport NextFollowUp from './NextFollowUp';\r\nimport LeadStatsTable from './LeadStatsTable';\r\n\r\nconst Dashboard = ({history}) => {\r\n  var leadStatData = [], bookedData = [], lostLeadData = [], siteVisitData = []\r\n  var leadCount = 0, bookedCount = 0, lostLeadCount=0, siteVisitCount = 0\r\n\r\n  const d = new Date()\r\n\r\n  const monthArray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n  const [leadStats , setLeadStats] = useState([])\r\n  const [bookedStats , setBookedStats] = useState([])\r\n  const [bookedAvg , setBookedAvg] = useState(0)\r\n  const [thisMonthBooked , setThisMonthBooked] = useState(0)\r\n  const [lostLeadStats , setLostLeadStats] = useState([])\r\n  const [lostLeadAvg , setLostLeadAvg] = useState(0)\r\n  const [thisMonthLostLead , setThisMonthLostLead] = useState(0)\r\n  const [siteVisitStats , setSiteVisitStats] = useState([])\r\n  const [siteVisitAvg , setSiteVisitAvg] = useState(0)\r\n  const [thisMonthSiteVisit , setThisMonthSiteVisit] = useState(0)\r\n  const [totalLeads , setTotalLeads] = useState(0)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  const leadList = useSelector((state) => state.leadList)\r\n    const { loading, error, leadInfo } = leadList\r\n\r\n  useEffect(()=>{\r\n    if (user && user.isAdmin) {\r\n      dispatch(fetchLeadList())\r\n    } else{\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(leadInfo){\r\n      setTotalLeads(leadInfo.length)\r\n      for (var i = 0; i <= d.getMonth(); i++) {\r\n        leadCount = 0\r\n        bookedCount = 0\r\n        lostLeadCount = 0\r\n        siteVisitCount = 0\r\n     leadInfo.forEach(lead=>{\r\n      \r\n\r\n      if (parseInt(lead.createdAt.split('-')[1]) - 1 === i && d.getFullYear() === parseInt(lead.createdAt.split('-')[0])) {\r\n        leadCount += 1\r\n        if(lead.status === \"Booked\"){\r\n          bookedCount += 1\r\n        }else if(lead.status === \"Lost\"){\r\n          lostLeadCount += 1\r\n        }else if (lead.status === \"Visited\"){\r\n          siteVisitCount += 1\r\n        }\r\n    }\r\n     })\r\n\r\n     leadStatData.push(leadCount)\r\n     bookedData.push(bookedCount)\r\n     lostLeadData.push(lostLeadCount)\r\n     siteVisitData.push(siteVisitCount)\r\n     \r\n     \r\n    }\r\n    setLeadStats(leadStatData)\r\n    setBookedStats(bookedData)\r\n    setLostLeadStats(lostLeadData)\r\n    setSiteVisitStats(siteVisitData)\r\n    if(bookedData[d.getMonth()] === bookedData[d.getMonth()-1] || bookedData[d.getMonth()-1] === 0){\r\n      setBookedAvg(0)\r\n    }else{\r\n    setBookedAvg((bookedData[d.getMonth()]-bookedData[d.getMonth()-1])/bookedData[d.getMonth()-1])\r\n    }\r\n    setThisMonthBooked(bookedData[d.getMonth()])\r\n    if(lostLeadData[d.getMonth()]===lostLeadData[d.getMonth()-1] || lostLeadData[d.getMonth()-1] === 0){\r\n      setLostLeadAvg(0)\r\n    }else{\r\n    setLostLeadAvg((lostLeadData[d.getMonth()]-lostLeadData[d.getMonth()-1])/lostLeadData[d.getMonth()-1])\r\n    }\r\n    setThisMonthLostLead(lostLeadData[d.getMonth()])\r\n    if(siteVisitData[d.getMonth()] === siteVisitData[d.getMonth()-1] || siteVisitData[d.getMonth()-1]===0){\r\n      setSiteVisitAvg(0)\r\n    }else{\r\n    setSiteVisitAvg((siteVisitData[d.getMonth()]-siteVisitData[d.getMonth()-1])/siteVisitData[d.getMonth()-1])\r\n    }\r\n    setThisMonthSiteVisit(siteVisitData[d.getMonth()])\r\n    }\r\n    \r\n  },[leadInfo])\r\n\r\n  \r\n\r\n  \r\n\r\n  Chart.register(\r\n    ArcElement,\r\n    LineElement,\r\n    BarElement,\r\n    PointElement,\r\n    BarController,\r\n    BubbleController,\r\n    DoughnutController,\r\n    LineController,\r\n    PieController,\r\n    PolarAreaController,\r\n    RadarController,\r\n    ScatterController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    TimeSeriesScale,\r\n    Decimation,\r\n    Filler,\r\n    Legend,\r\n    Title,\r\n    Tooltip\r\n    );\r\n\r\n    var data = {\r\n        labels: monthArray,\r\n        datasets: [\r\n            {\r\n                label: \"Leads\",\r\n                data: leadStats,\r\n                fill: true,\r\n                backgroundColor: \"#4A5073\",\r\n                // backgroundColor: [\r\n                //     'rgba(255, 99, 132, 1)',\r\n                //     'rgba(54, 162, 235, 1)',\r\n                //     'rgba(255, 206, 86, 1)',\r\n                //     'rgba(75, 192, 192, 1)',\r\n                //     'rgba(153, 102, 255, 1)',\r\n                //     'rgba(255, 159, 64, 1)',\r\n                // ],\r\n                // borderColor: \"#4A5073\"\r\n            },\r\n            {\r\n              label: \"Booked Leads\",\r\n              data: bookedStats,\r\n              fill: true,\r\n              backgroundColor: \"green\",\r\n              // backgroundColor: [\r\n              //     'rgba(255, 99, 132, 1)',\r\n              //     'rgba(54, 162, 235, 1)',\r\n              //     'rgba(255, 206, 86, 1)',\r\n              //     'rgba(75, 192, 192, 1)',\r\n              //     'rgba(153, 102, 255, 1)',\r\n              //     'rgba(255, 159, 64, 1)',\r\n              // ],\r\n              // borderColor: \"green\"\r\n          },\r\n          {\r\n            label: \"Lost Leads\",\r\n            data: lostLeadStats,\r\n            fill: true,\r\n            backgroundColor: \"red\",\r\n            // backgroundColor: [\r\n            //     'rgba(255, 99, 132, 1)',\r\n            //     'rgba(54, 162, 235, 1)',\r\n            //     'rgba(255, 206, 86, 1)',\r\n            //     'rgba(75, 192, 192, 1)',\r\n            //     'rgba(153, 102, 255, 1)',\r\n            //     'rgba(255, 159, 64, 1)',\r\n            // ],\r\n            // borderColor: \"red\"\r\n        },\r\n        {\r\n          label: \"Site Visit\",\r\n          data: siteVisitStats,\r\n          fill: true,\r\n          // lineTension: 0.1,\r\n          // pointBorderColor: '#111',\r\n          // pointBackgroundColor: '#ff4000',\r\n          // pointBorderWidth: 2,\r\n          backgroundColor: \"yellow\",\r\n          // backgroundColor: [\r\n          //     'rgba(255, 99, 132, 1)',\r\n          //     'rgba(54, 162, 235, 1)',\r\n          //     'rgba(255, 206, 86, 1)',\r\n          //     'rgba(75, 192, 192, 1)',\r\n          //     'rgba(153, 102, 255, 1)',\r\n          //     'rgba(255, 159, 64, 1)',\r\n          // ],\r\n          // borderColor: \"yellow\"\r\n      }\r\n\r\n        ]\r\n    };\r\n\r\n    const data1 = {\r\n      labels: ['Booked Leads', 'Lost Leads', 'Site Visit'],\r\n      datasets: [\r\n        {\r\n          label: 'Lead Statistics',\r\n          data: [thisMonthBooked, thisMonthLostLead, thisMonthSiteVisit],\r\n          backgroundColor: [\r\n            'rgba(0,128,0 , 0.2)',\r\n            'rgba(255, 0, 0, 0.2)',\r\n            'rgba(255, 255, 0, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(0,128,0 , 1)',\r\n            'rgba(255, 0, 0, 1)',\r\n            'rgba(255, 255, 0, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n    const options = {\r\n      responsive: true,\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"left\"\r\n        }]\r\n      }\r\n    };\r\n\r\n    const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-md-center mt-5\">\r\n        {/* <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Total Leads\"\r\n            value={totalLeads}\r\n            percentage={10.57}\r\n            leadStats = {leadStats}\r\n          />\r\n        </Col> */}\r\n        {/* <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Booked Leads\"\r\n            value={thisMonthBooked}\r\n            percentage={bookedAvg}\r\n          />\r\n        </Col> */}\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Booked Leads\"\r\n            title={thisMonthBooked}\r\n            period=\"monthly\"\r\n            percentage={bookedAvg}\r\n            icon={faChartLine}\r\n            iconColor=\"shape-secondary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Site Visited\"\r\n            title={thisMonthSiteVisit}\r\n            period=\"monthly\"\r\n            percentage={siteVisitAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={4} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Lost Leads\"\r\n            title={thisMonthLostLead}\r\n            period=\"monthly\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        \r\n      </Row>\r\n      <Row className=\"p-5\">\r\n        <Col md={8}>\r\n        {(leadStats && leadStats.length>0) && <Bar data={data}  />}\r\n        </Col>\r\n        <Col md={4}>\r\n        <Doughnut data={data1} />\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <h2>Next Follow Up</h2>\r\n              <NextFollowUp/>\r\n          </Col>\r\n          </Row>\r\n\r\n          {/* <Row>\r\n          <Col xs={12}>\r\n              <LeadStatsTable bookedStats={bookedStats} lostLeadStats={lostLeadStats} siteVisitStats={siteVisitStats} monthArray={monthArray}/>\r\n          </Col>\r\n          </Row> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\n\r\nimport { projects } from \"../actions/projectActions\";\r\nimport { deleteCancelledLead, updateCancelledLeadData, fetchCancelledLeadDetails } from \"../actions/cancellationLeadActions\";\r\nimport { consultantList } from \"../actions/userActions\";\r\nimport { addLeadData } from \"../actions/leadActions\";\r\n\r\n\r\n\r\nexport default ({match, history}) => {\r\n    const cancelledLeadId = match.params.id\r\n\r\n    const [createdUser, setCreatedUser] = useState('')\r\n    const [assignedConsultant, setAssignedConsultant] = useState('')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    var [firstInstallment, setFirstInstallment] = useState(0)\r\n    var [secondInstallment, setSecondInstallment] = useState(0)\r\n    var [thirdInstallment, setThirdInstallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [index, setIndex] = useState(0)\r\n    const [refundStatus, setRefundStatus] = useState('no')\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cancelledLeadDetails = useSelector((state) => state.cancelledLeadDetails)\r\n    const { loading, error, cancelledLeadInfo } = cancelledLeadDetails\r\n\r\n    const updateCancelLead = useSelector((state) => state.updateCancelLead)\r\n    const { loading: loadingUpdate, error: errorUpdate , success: successUpdate } = updateCancelLead\r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading: loadingConsultants, error: errorConsultants, consultants: consultantsList } = fetchConsultants\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    useEffect(() => {\r\n      if(successUpdate){\r\n        history.push('/cancelledleads')\r\n      }\r\n    },[successUpdate])\r\n\r\n    useEffect(()=>{\r\n    }, [mainProject, subProject])\r\n\r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantList())\r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n  \r\n    useEffect(() => {\r\n     \r\n      if (!cancelledLeadInfo || cancelledLeadInfo._id !== cancelledLeadId) {\r\n        dispatch(fetchCancelledLeadDetails(cancelledLeadId))\r\n      }else{ \r\n        setCreatedUser(cancelledLeadInfo.createdUser)\r\n        setAssignedConsultant(cancelledLeadInfo.assignedConsultant)\r\n        setConsultant(cancelledLeadInfo.consultantName)\r\n        setCustomer(cancelledLeadInfo.customerName)\r\n        setEnquiryDate(cancelledLeadInfo.enquiryDate)\r\n        setContactNumber(cancelledLeadInfo.contactNumber)\r\n        setMainProject(cancelledLeadInfo.project.mainProject)\r\n        setSubProject(cancelledLeadInfo.project.subProject)\r\n        setProjectId(cancelledLeadInfo.project.projectId)\r\n        setLeadType(cancelledLeadInfo.leadType)\r\n        setLeadScore(cancelledLeadInfo.leadScore)\r\n        setStatus(cancelledLeadInfo.status)\r\n        setRemarks(cancelledLeadInfo.remarks)\r\n        setNextFollow(cancelledLeadInfo.nextFollowUp)\r\n        setManagerRemarks(cancelledLeadInfo.managerRemarks)\r\n        setFirstInstallment(cancelledLeadInfo.payment.firstInstallment)\r\n        setSecondInstallment(cancelledLeadInfo.payment.secondInstallment)\r\n        setThirdInstallment(cancelledLeadInfo.payment.thirdInstallment)\r\n        setTotalSqft(cancelledLeadInfo.totalSqft? cancelledLeadInfo.totalSqft : 0)\r\n        setRefundStatus(cancelledLeadInfo.refundStatus)\r\n      }\r\n    }, [dispatch, cancelledLeadInfo, successUpdate])\r\n\r\n    \r\n\r\n    function findSubProject(project) {\r\n      return project.mainProject === mainProject\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(mainProject){\r\n        if(projectInfo)\r\n        {\r\n          const main = projectInfo.findIndex(findSubProject);\r\n        setIndex(main)\r\n\r\n      }\r\n      }\r\n    },[mainProject])\r\n\r\n    // const subProjectHandler = () => {\r\n    //   if(projectInfo)\r\n    //   {\r\n    //     const main = projectInfo.findIndex(findSubProject);\r\n    //   setIndex(main)\r\n    // }\r\n      \r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //   subProjectHandler()\r\n    // }, [mainProject])\r\n\r\n    const consultantHandler = (e) => {\r\n      //  console.log(e.target.value, consultantList)\r\n      // console.log(e.target.value._id)\r\n      setAssignedConsultant(consultantsList[e.target.value]._id)\r\n        setConsultant(consultantsList[e.target.value].name)\r\n     }\r\n\r\n     const deleteHandler = (e) => {\r\n       e.preventDefault()\r\n      if (window.confirm('Are you sure?')){\r\n      dispatch(deleteCancelledLead(cancelledLeadId))\r\n      }\r\n     }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n        dispatch(\r\n          updateCancelledLeadData({\r\n            _id: cancelledLeadId,\r\n            createdUser,\r\n            assignedConsultant,\r\n            customerName:customer,\r\n            consultantName:consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : false,\r\n            refundStatus\r\n          }))\r\n    }\r\n\r\n    const projectHandler = (e) => {\r\n      setMainProject(e.target.value)\r\n    }\r\n\r\n    const retrieveHandler = (e, id) => {\r\n      e.preventDefault()\r\n      if (window.confirm('Are you sure')) {\r\n          dispatch(addLeadData({\r\n            _id: cancelledLeadId,\r\n            createdUser,\r\n            assignedConsultant,\r\n            customerName:customer,\r\n            consultantName: consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft,\r\n            cancellation : true\r\n          }))\r\n          dispatch(deleteCancelledLead(cancelledLeadId)) \r\n          history.push('/cancelledleads')\r\n        }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading && loadingProject ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e)=>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer || ''} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" defaultValue={enquiryDate.split('.')[0]}  onChange={(e) => {setEnquiryDate(e.target.value)}}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n          \r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"contact\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"987654321\" value={contactNumber || ''} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select value={consultantsList && consultantsList.findIndex(c=>c.name===consultant)} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                 \r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Select value={mainProject? mainProject : ''} onChange={(e) => projectHandler(e)}>\r\n                <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro.mainProject}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                <Form.Label>Sub Project</Form.Label>\r\n                <Form.Select value={subProject} onChange={(e) => setSubProject(e.target.value)}>\r\n                  <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Score</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Score\" value={leadScore || ''} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>LEAD TYPE</Form.Label>\r\n                <Form.Select value={leadType || ''} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>STATUS</Form.Label>\r\n                <Form.Select value={status || ''} onChange={(e) => setStatus(e.target.value)}>\r\n                    <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                    <option value=\"Visited\">Visited</option>\r\n                    <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                    <option value=\"Detail Shared\">Detail Shared</option>\r\n                    <option value=\"Lost\">Lost</option>\r\n                    <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Remarks\" value={remarks || ''} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                      \r\n         </Row>\r\n\r\n         <Row>  \r\n         <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" min={enquiryDate} defaultValue={nextFollow.split('.')[0]} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks || ''} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstInstallment(firstInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondInstallment(secondInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdInstallment(thirdInstallment = parseInt(e.target.value ) || 0)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>Refund Status</Form.Label>\r\n                <Form.Select value={refundStatus} onChange={(e) => setRefundStatus(e.target.value)}>\r\n                  {/* <option value=\"\">Select</option> */}\r\n                  <option value=\"no\">Not Refunded</option>\r\n                  <option value=\"yes\">Refunded</option>\r\n                  <option value=\"initiated\">Refund Initiated</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3 d-flex justify-content-between\">\r\n            <div>\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n            <Button className=\"ms-3\"  variant=\"primary\" type=\"button\" onClick = {(e)=>retrieveHandler(e, cancelledLeadId)}>Retrieve</Button>\r\n            </div>\r\n            <div>\r\n            <Button variant =\"danger\" onClick={(e)=>{deleteHandler(e)}}>Delete</Button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  \r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\n// import ReactLogo from '../assets/img/technologies/react-logo-transparent.svg'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst NextFollowUp = ({history}) => {\r\n  var gapi = window.gapi\r\n\r\n  var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n  const [remainder, setRemainder] = useState(false) \r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n            axios.get(`/api/leads`)\r\n            .then(res => {\r\n                const today = new Date()\r\n                const lead = res.data.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  today.toISOString().split('T')[0]}});\r\n                setLeadData(lead)   \r\n                setLoading(false)                   \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n\r\n        const remainderHandler = () => {\r\n          // if(leadData && leadData.nextFollowUp){\r\n            gapi.load('client:auth2', () => {\r\n              console.log('loaded client')\r\n        \r\n              gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: DISCOVERY_DOCS,\r\n                scope: SCOPES,\r\n              })\r\n        \r\n              gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n        \r\n        \r\n              gapi.auth2.getAuthInstance().signIn()\r\n              .then(() => {\r\n                \r\n                \r\n                console.log(leadData)\r\n                var event = {\r\n                  'summary': leadData.customer,\r\n                  'location': '',\r\n                  'description': leadData.status,\r\n                  'start': {\r\n                    'dateTime': leadData.nextFollowUp,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'end': {\r\n                    'dateTime': `${leadData.nextFollowUp}`,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'recurrence': [\r\n                    'RRULE:FREQ=DAILY;COUNT=2'\r\n                  ],\r\n                  'attendees': [\r\n                    // {'email': 'lpage@example.com'},\r\n                    // {'email': 'sbrin@example.com'}\r\n                  ],\r\n                  'reminders': {\r\n                    'useDefault': false,\r\n                    'overrides': [\r\n                      {'method': 'email', 'minutes': 24 * 60},\r\n                      {'method': 'popup', 'minutes': 10}\r\n                    ]\r\n                  }\r\n                }\r\n              \r\n        \r\n                var request = gapi.client.calendar.events.insert({\r\n                  'calendarId': 'primary',\r\n                  'resource': event,\r\n                })\r\n        \r\n                request.execute(event => {\r\n                  console.log(event)\r\n                  window.open(event.htmlLink)\r\n                })\r\n                \r\n        \r\n                /*\r\n                    Uncomment the following block to get events\r\n                */\r\n                /*\r\n                // get events\r\n                gapi.client.calendar.events.list({\r\n                  'calendarId': 'primary',\r\n                  'timeMin': (new Date()).toISOString(),\r\n                  'showDeleted': false,\r\n                  'singleEvents': true,\r\n                  'maxResults': 10,\r\n                  'orderBy': 'startTime'\r\n                }).then(response => {\r\n                  const events = response.result.items\r\n                  console.log('EVENTS: ', events)\r\n                })\r\n                */\r\n            \r\n        \r\n              })\r\n            })\r\n          // }\r\n          setRemainder(true)\r\n        }\r\n\r\n        \r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      // {\r\n      //   dataField: \"\",\r\n      //   text: \"\",\r\n      //   formatter: (cell,row) => {\r\n      //     return (\r\n      //       <button className=\"btn btn-primary\" onClick={ ()=>remainderHandler(row) }>Remainder</button>\r\n      //     );\r\n      //   },\r\n\r\n      // },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextFollowUp\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect,  forwardRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { fetchLeadList } from '../actions/leadActions';\r\nimport {\r\n  Chart,\r\n  ArcElement,\r\n  LineElement,\r\n  BarElement,\r\n  PointElement,\r\n  BarController,\r\n  BubbleController,\r\n  DoughnutController,\r\n  LineController,\r\n  PieController,\r\n  PolarAreaController,\r\n  RadarController,\r\n  ScatterController,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  RadialLinearScale,\r\n  TimeScale,\r\n  TimeSeriesScale,\r\n  Decimation,\r\n  Filler,\r\n  Legend,\r\n  Title,\r\n  Tooltip\r\n} from 'chart.js'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { faCashRegister, faChartLine, faCloudUploadAlt, faPlus, faRocket, faTasks, faUserShield } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { trafficShares, totalOrders } from \"../data/charts\";\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\n\r\nimport NextFollowUp from './NextFollowUp';\r\n\r\nconst ManagerDashboard = ({history}) => {\r\n  var leadStatData = [], bookedData = [], lostLeadData = [], siteVisitData = []\r\n  var leadCount = 0, bookedCount = 0, lostLeadCount=0, siteVisitCount = 0\r\n\r\n  const d = new Date()\r\n\r\n  const monthArray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n  const [leadStats , setLeadStats] = useState([])\r\n  const [bookedStats , setBookedStats] = useState([])\r\n  const [bookedAvg , setBookedAvg] = useState(0)\r\n  const [thisMonthBooked , setThisMonthBooked] = useState(0)\r\n  const [lostLeadStats , setLostLeadStats] = useState([])\r\n  const [lostLeadAvg , setLostLeadAvg] = useState(0)\r\n  const [thisMonthLostLead , setThisMonthLostLead] = useState(0)\r\n  const [siteVisitStats , setSiteVisitStats] = useState([])\r\n  const [siteVisitAvg , setSiteVisitAvg] = useState(0)\r\n  const [thisMonthSiteVisit , setThisMonthSiteVisit] = useState(0)\r\n  const [totalLeads , setTotalLeads] = useState(0)\r\n  const [nextFollowUpCount, setNextFollowUpCount] = useState(0)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  const leadList = useSelector((state) => state.leadList)\r\n    const { loading, error, leadInfo } = leadList\r\n\r\n  useEffect(()=>{\r\n    if (user && user.role === 'Manager') {\r\n      dispatch(fetchLeadList())\r\n    } else{\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(leadInfo){\r\n      setTotalLeads(leadInfo.length)\r\n      for (var i = 0; i <= d.getMonth(); i++) {\r\n        leadCount = 0\r\n        bookedCount = 0\r\n        lostLeadCount = 0\r\n        siteVisitCount = 0\r\n     leadInfo.forEach(lead=>{\r\n      \r\n\r\n      if (parseInt(lead.createdAt.split('-')[1]) - 1 === i && d.getFullYear() === parseInt(lead.createdAt.split('-')[0])) {\r\n        leadCount += 1\r\n        if(lead.status === \"Booked\"){\r\n          bookedCount += 1\r\n        }else if(lead.status === \"Lost\"){\r\n          lostLeadCount += 1\r\n        }else if (lead.status === \"Visited\"){\r\n          siteVisitCount += 1\r\n        }\r\n    }\r\n     })\r\n\r\n     leadStatData.push(leadCount)\r\n     bookedData.push(bookedCount)\r\n     lostLeadData.push(lostLeadCount)\r\n     siteVisitData.push(siteVisitCount)\r\n     \r\n     \r\n    }\r\n    setLeadStats(leadStatData)\r\n    setBookedStats(bookedData)\r\n    setLostLeadStats(lostLeadData)\r\n    setSiteVisitStats(siteVisitData)\r\n    if(bookedData[d.getMonth()] === bookedData[d.getMonth()-1] || bookedData[d.getMonth()-1] === 0){\r\n      setBookedAvg(0)\r\n    }else{\r\n    setBookedAvg((bookedData[d.getMonth()]-bookedData[d.getMonth()-1])/bookedData[d.getMonth()-1])\r\n    }\r\n    setThisMonthBooked(bookedData[d.getMonth()])\r\n    if(lostLeadData[d.getMonth()]===lostLeadData[d.getMonth()-1] || lostLeadData[d.getMonth()-1] === 0){\r\n      setLostLeadAvg(0)\r\n    }else{\r\n    setLostLeadAvg((lostLeadData[d.getMonth()]-lostLeadData[d.getMonth()-1])/lostLeadData[d.getMonth()-1])\r\n    }\r\n    setThisMonthLostLead(lostLeadData[d.getMonth()])\r\n    if(siteVisitData[d.getMonth()] === siteVisitData[d.getMonth()-1] || siteVisitData[d.getMonth()-1]===0){\r\n      setSiteVisitAvg(0)\r\n    }else{\r\n    setSiteVisitAvg((siteVisitData[d.getMonth()]-siteVisitData[d.getMonth()-1])/siteVisitData[d.getMonth()-1])\r\n    }\r\n    setThisMonthSiteVisit(siteVisitData[d.getMonth()])\r\n    setNextFollowUpCount(leadInfo.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  d.toISOString().split('T')[0]}}).length)\r\n\r\n    }\r\n    \r\n  },[leadInfo])\r\n\r\n  \r\n\r\n  \r\n\r\n  Chart.register(\r\n    ArcElement,\r\n    LineElement,\r\n    BarElement,\r\n    PointElement,\r\n    BarController,\r\n    BubbleController,\r\n    DoughnutController,\r\n    LineController,\r\n    PieController,\r\n    PolarAreaController,\r\n    RadarController,\r\n    ScatterController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    TimeSeriesScale,\r\n    Decimation,\r\n    Filler,\r\n    Legend,\r\n    Title,\r\n    Tooltip\r\n    );\r\n\r\n    var data = {\r\n        labels: monthArray,\r\n        datasets: [\r\n            {\r\n                label: \"Leads\",\r\n                data: leadStats,\r\n                fill: true,\r\n                backgroundColor: \"#4A5073\",\r\n                // backgroundColor: [\r\n                //     'rgba(255, 99, 132, 1)',\r\n                //     'rgba(54, 162, 235, 1)',\r\n                //     'rgba(255, 206, 86, 1)',\r\n                //     'rgba(75, 192, 192, 1)',\r\n                //     'rgba(153, 102, 255, 1)',\r\n                //     'rgba(255, 159, 64, 1)',\r\n                // ],\r\n                // borderColor: \"#4A5073\"\r\n            },\r\n            {\r\n              label: \"Booked Leads\",\r\n              data: bookedStats,\r\n              fill: true,\r\n              backgroundColor: \"green\",\r\n              // backgroundColor: [\r\n              //     'rgba(255, 99, 132, 1)',\r\n              //     'rgba(54, 162, 235, 1)',\r\n              //     'rgba(255, 206, 86, 1)',\r\n              //     'rgba(75, 192, 192, 1)',\r\n              //     'rgba(153, 102, 255, 1)',\r\n              //     'rgba(255, 159, 64, 1)',\r\n              // ],\r\n              // borderColor: \"green\"\r\n          },\r\n          {\r\n            label: \"Lost Leads\",\r\n            data: lostLeadStats,\r\n            fill: true,\r\n            backgroundColor: \"red\",\r\n            // backgroundColor: [\r\n            //     'rgba(255, 99, 132, 1)',\r\n            //     'rgba(54, 162, 235, 1)',\r\n            //     'rgba(255, 206, 86, 1)',\r\n            //     'rgba(75, 192, 192, 1)',\r\n            //     'rgba(153, 102, 255, 1)',\r\n            //     'rgba(255, 159, 64, 1)',\r\n            // ],\r\n            // borderColor: \"red\"\r\n        },\r\n        {\r\n          label: \"Site Visit\",\r\n          data: siteVisitStats,\r\n          fill: true,\r\n          // lineTension: 0.1,\r\n          // pointBorderColor: '#111',\r\n          // pointBackgroundColor: '#ff4000',\r\n          // pointBorderWidth: 2,\r\n          backgroundColor: \"yellow\",\r\n          // backgroundColor: [\r\n          //     'rgba(255, 99, 132, 1)',\r\n          //     'rgba(54, 162, 235, 1)',\r\n          //     'rgba(255, 206, 86, 1)',\r\n          //     'rgba(75, 192, 192, 1)',\r\n          //     'rgba(153, 102, 255, 1)',\r\n          //     'rgba(255, 159, 64, 1)',\r\n          // ],\r\n          // borderColor: \"yellow\"\r\n      }\r\n\r\n        ]\r\n    };\r\n\r\n    const data1 = {\r\n      labels: ['Booked Leads', 'Lost Leads', 'Site Visit'],\r\n      datasets: [\r\n        {\r\n          label: 'Lead Statistics',\r\n          data: [thisMonthBooked, thisMonthLostLead, thisMonthSiteVisit],\r\n          backgroundColor: [\r\n            'rgba(0,128,0 , 0.2)',\r\n            'rgba(255, 0, 0, 0.2)',\r\n            'rgba(255, 255, 0, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(0,128,0 , 1)',\r\n            'rgba(255, 0, 0, 1)',\r\n            'rgba(255, 255, 0, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n    const options = {\r\n      responsive: true,\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"left\"\r\n        }]\r\n      }\r\n    };\r\n\r\n    const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  const nextFollowUpHandler = () => {\r\n    history.push('/manager/nextfollowup')\r\n  }\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-md-center mt-5\">\r\n        {/* <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Total Leads\"\r\n            value={totalLeads}\r\n            percentage={10.57}\r\n            leadStats = {leadStats}\r\n          />\r\n        </Col> */}\r\n        {/* <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Booked Leads\"\r\n            value={thisMonthBooked}\r\n            percentage={bookedAvg}\r\n          />\r\n        </Col> */}\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <div onClick={()=>nextFollowUpHandler()} style={{cursor: \"pointer\"}}>\r\n          <CounterWidget\r\n            category=\"Next Follow Up\"\r\n            title={nextFollowUpCount}\r\n            period=\"\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n          </div>\r\n          </Col>\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Booked Leads\"\r\n            title={thisMonthBooked+`/${user && user.setMilestone.bookings}`}\r\n            period=\"monthly\"\r\n            percentage={bookedAvg}\r\n            icon={faChartLine}\r\n            iconColor=\"shape-secondary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Site Visited\"\r\n            title={thisMonthSiteVisit+`/${user && user.setMilestone.siteVisits}`}\r\n            period=\"monthly\"\r\n            percentage={siteVisitAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Lost Leads\"\r\n            title={thisMonthLostLead+`/${user && user.setMilestone.leads}`}\r\n            period=\"monthly\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        \r\n      </Row>\r\n      <Row className=\"p-5\">\r\n        <Col md={8}>\r\n        {(leadStats && leadStats.length>0) && <Bar data={data}  />}\r\n        </Col>\r\n        <Col md={4}>\r\n        <Doughnut data={data1} />\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} className=\"ms-5\">\r\n          <h3>Next Follow Up</h3>\r\n              <NextFollowUp/>\r\n          </Col>\r\n          </Row>\r\n\r\n          {/* <Row>\r\n          <Col xs={12}>\r\n              <LeadStatsTable bookedStats={bookedStats} lostLeadStats={lostLeadStats} siteVisitStats={siteVisitStats} monthArray={monthArray}/>\r\n          </Col>\r\n          </Row> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ManagerDashboard","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Image, Alert} from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst Leads = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n         useEffect(() => {\r\n           setTimeout(()=>{\r\n            const config = {\r\n              headers: {\r\n                Authorization: `Bearer ${user.token}`,\r\n              },\r\n            } \r\n\r\n            axios.get(`/api/leads/manager`, config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList;\r\n                setLeadData(lead)\r\n                setLoading(false)                     \r\n            }).catch(function (error) {\r\n              // handle error\r\n              setError(true)\r\n            })\r\n          }, 3000)\r\n          \r\n\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/manager/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        csvExport: false,\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n        filter: textFilter(),\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        csvExport: false,\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    A simple primary alert — check it out!\r\n  </Alert>)\r\n  :  (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Leads\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { managerList, teamLeadList, asmList, consultantsUnderManager } from \"./../actions/userActions\";\r\nimport { addLeadData} from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nexport default ({history}) => {\r\n    const [lead, setLead] = useState({})\r\n    const [createdUser, setCreatedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [assignedUser, setAssignedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    // var [projectData, setProjectData] = useState({\r\n    //   mainProject: \"\",\r\n    //   subporject: \"\",\r\n    //   projectId: \"\"\r\n    // })\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    const [booked, setBooked] = useState(false)\r\n    // const [payment, setPayment] = useState({\r\n    //   firstInstallment: 0,\r\n    //   secondInstallment: 0,\r\n    //   thirdInstallment: 0\r\n    // })\r\n    var [firstInstallment, setFirstIntallment] = useState(0)\r\n    var [secondInstallment, setSecondIntallment] = useState(0) \r\n    var [thirdInstallment, setThirdIntallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [teamLead, setTeamLead] = useState('')\r\n    const [index, setIndex] = useState(0);\r\n    const [manager, setManager] = useState('');\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addLead = useSelector((state) => state.addLead)\r\n    const { loading, error, leadInfo } = addLead\r\n\r\n    const fetchProjects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = fetchProjects\r\n\r\n\r\n\r\n    // const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    // const { loading: loadingManager, error: errorManager, managers: managersList } = fetchManagers\r\n\r\n    const fetchConsultantsUnderManager = useSelector((state) => state.fetchConsultantsUnderManager)\r\n    const { consultantsList } = fetchConsultantsUnderManager\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n    useEffect(()=>{\r\n      if (user && user.role === 'Manager') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantsUnderManager(user.managerId))\r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      if(projectInfo){\r\n        setMainProject(projectInfo[0].mainProject)\r\n        setProjectId(projectInfo[0].projectId)\r\n        setSubProject(projectInfo[0].subProject[0])\r\n        setStatus('Yet to Visit')\r\n        setLeadType('Hot')\r\n      }\r\n    }, [dispatch, projectInfo])\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()  \r\n      setLead(\r\n        lead.createdUser = createdUser, \r\n        lead.assignedConsultant = assignedUser,\r\n        lead.consultantName= consultant,\r\n        lead.enquiryDate= enquiryDate,\r\n        lead.customerName= customer,\r\n        lead.contactNumber= contactNumber,\r\n        lead.alternateNumber= alternateNumber,\r\n        lead.project ={\r\n          mainProject: mainProject,\r\n          subProject: subProject,\r\n          projectId: projectId\r\n        },\r\n        lead.leadScore= leadScore,\r\n        lead.leadType= leadType,\r\n        lead.status= status,\r\n        lead.remarks= remarks,\r\n        lead.nextFollowUp= nextFollow,\r\n        lead.managerRemarks= managerRemarks,\r\n        lead.booked= booked,\r\n        lead.payment = {\r\n          firstInstallment: firstInstallment,\r\n          secondInstallment: secondInstallment,\r\n          thirdInstallment: thirdInstallment,\r\n        },\r\n        lead.totalSqft= totalSqft\r\n        )\r\n      dispatch(addLeadData(lead))\r\n      history.push('/leads')\r\n  }\r\n\r\n  console.log(assignedUser)\r\n\r\n    useEffect(()=> {\r\n      if(projectInfo)\r\n      {const i = projectInfo.findIndex((element,i) => {\r\n        if (element.mainProject === mainProject){\r\n          // console.log(i)\r\n          setProjectId(element._id)\r\n        return true\r\n        }\r\n      })\r\n      setIndex(i)}\r\n   }, [mainProject])\r\n\r\n   const consultantHandler = (e) => {\r\n    //  console.log(e.target.value, consultantList)\r\n    // console.log(e.target.value._id)\r\n    setAssignedUser(consultantsList[e.target.value].userId.consultantId)\r\n      setConsultant(consultantsList[e.target.value].userId.name)\r\n   }\r\n\r\n    // useEffect(()=>{\r\n    //   console.log(\"hello1\")\r\n    //   if(customer){\r\n    //     console.log(\"hello2\")\r\n    //     dispatch(addLeadData(lead))\r\n    //         console.log(lead)\r\n    //         console.log(`3${mainProject}`)\r\n    //   }\r\n    // }, [ dispatch])\r\n\r\n\r\n  \r\n\r\n    // const submitHandler = ()=>{\r\n    //   console.log(mainProject, subProject)\r\n    // }\r\n\r\n    // const findSubProject = (element, i) => {\r\n    //   console.log(`${element.mainProject} = ${mainProject}`)\r\n    //   if (element.mainProject === mainProject){\r\n    //     return true\r\n    //   }else{\r\n    //     return false\r\n    //   }\r\n    // }\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e) =>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" value={enquiryDate} onChange={(e) => setEnquiryDate(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={contactNumber} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n           \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select defaultValue={consultant ? consultant : ' '} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.userId.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Main Project\" value={mainProject} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                  <Form.Label>Sub Project</Form.Label>\r\n                  <Form.Select required defaultValue={subProject? subProject : 'Not Found'} onChange={(e) => setSubProject(e.target.value)}>\r\n                    <option key={2001} value=''>Select</option>\r\n                  {\r\n                      projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                  </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>Lead Type</Form.Label>\r\n                <Form.Select required value={leadType} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Select required value={status} onChange={(e) => setStatus(e.target.value)}>\r\n                  <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                  <option value=\"Visited\">Visited</option>\r\n                  <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                  <option value=\"Detail Shared\">Detail Shared</option>\r\n                  <option value=\"Not Interested\">Not Interested</option>\r\n                  <option value=\"RFR\">RFR</option>\r\n                  <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" value={nextFollow} min={enquiryDate} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n                                 \r\n         </Row>\r\n\r\n         <Row>\r\n\r\n        \r\n            \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                      \r\n         </Row>\r\n\r\n          <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstIntallment(e.target.value && (firstInstallment = parseInt(e.target.value)))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondIntallment(secondInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdIntallment(thirdInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Add Lead & Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n   )}\r\n   </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst LostLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          }\r\n            axios.get(`/api/leads/manager`, config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList.filter(lead => lead.status === \"Lost\" );\r\n                setLeadData(lead) \r\n                setLoading(false)                    \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LostLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst SiteVisitsLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          }\r\n\r\n            axios.get(`/api/leads/manager`, config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList;\r\n                setLeadData(lead.filter(lead => lead.status === \"Visited\" ))                     \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteVisitsLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport axios from 'axios';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\n\r\nimport { addLeadData, fetchleadDetails} from '../actions/leadActions';\r\nimport { fetchCancelLeadList, deleteCancelledLead } from '../actions/cancellationLeadActions';\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\n\r\nconst CancelledLeads = ({history}) => {\r\n\r\n    // var element = document.getElementsByTagName(\"table\");\r\n    // element.classList.add(\"table-dark\");\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    // useEffect(() => {\r\n    //   dispatch(fetchLeadList())\r\n    // }, [])\r\n  \r\n    // const leadList = useSelector((state) => state.leadList)\r\n    //   const { loading, error, leadInfo } = leadList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    const selectOptions = {\r\n      0: 'Hot',\r\n      1: 'Warm',\r\n      2: 'Cold'\r\n    };\r\n  \r\n    const selectOptions2 = {\r\n      0: 'Yet to Visit',\r\n      1: 'Visited',\r\n      2: 'Visit Confirmed',\r\n      3: 'Detail Shared',\r\n      4: 'Lost',\r\n      5: 'Booked'\r\n    };\r\n  \r\n    const [leadData, setLeadData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n  \r\n           useEffect(() => {\r\n             setTimeout(()=>{\r\n              axios.get(`/api/cancelledleads`)\r\n              .then(res => {\r\n                  const lead = res.data;\r\n                  setLeadData(lead)\r\n                  setLoading(false)                     \r\n              })\r\n            }, 3000)\r\n            \r\n  \r\n           }, [])\r\n  \r\n           useEffect(() => {\r\n             console.log(leadData)\r\n           }, [leadData])\r\n  \r\n          // const retriveHandler = (lead) => {\r\n          //   const \r\n          //       userInfo\r\n          //      = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxNjU0ODFhMjVkMjk3MWE5NDU3OWUxNyIsImlhdCI6MTYzNDUyOTE3MSwiZXhwIjoxNjM0NjE1NTcxfQ.zWvQzJ1yMehQxu0JB3V_5RMlpLKhtHPmExGsGl-hN-Y\"\r\n               \r\n        \r\n          \r\n          //     const config = {\r\n          //       headers: {\r\n          //         'Content-Type': 'application/json',\r\n          //         Authorization: `Bearer ${userInfo}`,\r\n          //       },\r\n          //     }\r\n\r\n          //   axios.post(`/api/leads`,leadData,\r\n          //   config)\r\n          //   axios.delete(`/api/cancelledleads/${lead._id}`, config) \r\n          //   .then(res => {\r\n          //       history.go(0)            \r\n          //   })             \r\n          // }\r\n\r\n          const retriveHandler = (row) => {\r\n            dispatch(addLeadData(row))\r\n            dispatch(deleteCancelledLead(row._id))\r\n            history.go(0)\r\n          }\r\n\r\n          const editTableHandler = (lead) => {\r\n            history.push(`/cancelledleads/${lead._id}/edit`)\r\n          }\r\n         \r\n  \r\n          const { ExportCSVButton } = CSVExport;\r\n  \r\n      const columns = [\r\n        {\r\n          dataField: \"leadData\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, leadData) => {\r\n            console.log(row, index)\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customerName\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n            return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          },\r\n          filter: dateFilter({\r\n            defaultValue: {comparator: Comparator.GT }\r\n          })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"consultantName\",\r\n          text: \"Consultant\",\r\n          sort: true,\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"project.mainProject\",\r\n          text: \"Main Project\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Sub Project\",\r\n          filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n          filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollowUp\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (nextFollowUp) => {\r\n            return new Date(`${nextFollowUp}`).toISOString().split('T')[0]\r\n          },\r\n          filter: dateFilter({\r\n            defaultValue: {comparator: Comparator.GT }\r\n          })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          formatter: (cell,row) => {\r\n            return (\r\n              // <button className=\"btn btn-primary\" onClick={ ()=>retriveHandler(row) }>Retrive</button>\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n  \r\n  \r\n  \r\n  \r\n  \r\n    return (\r\n      <>\r\n      {loading? (\r\n        <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n      ) : (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"_id\"\r\n          data={ leadData }\r\n          columns={ columns }\r\n          exportCSV\r\n        >\r\n          {\r\n            props => (\r\n              <div>\r\n                <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                <hr />\r\n                {/* <BootstrapTable { ...props.baseProps } /> */}\r\n                <BootstrapTable\r\n                     { ...props.baseProps }\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                  />\r\n                    \r\n              </div>\r\n            )\r\n          }\r\n        </ToolkitProvider>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default CancelledLeads\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const TotalLeads = () => {\r\n//     const [email, setEmail] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n//     const [leadData, setLeadData] = useState({})\r\n//     const [leadType, setLeadType] = useState('')\r\n//     const [status, setStatus] = useState('')\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     // const userLogin = useSelector((state) => state.userLogin)\r\n//     // const {userInfo: user } = userLogin\r\n\r\n//     const cancelLeadList = useSelector((state) => state.cancelLeadList)\r\n//     const { loading, error, cancelLeadInfo } = cancelLeadList\r\n\r\n//     const leadDetails = useSelector((state) => state.leadDetails)\r\n//     const { loading: loadingLead, error: errorLead, leadInfo: leadInfoLead } = leadDetails\r\n\r\n\r\n\r\n//     useEffect(() => {\r\n//         dispatch(fetchCancelLeadList())\r\n//     }, [])\r\n\r\n\r\n\r\n\r\n//     const updateHandler = (e, lead) => {\r\n//         console.log(e.target.value)\r\n//         e.preventDefault()\r\n//         if(e.target.value){\r\n//         dispatch(addLeadData(lead))\r\n//         dispatch(deleteCancelledLead(lead._id))\r\n//         setTimeout(() => {\r\n//             dispatch(fetchCancelLeadList())\r\n//             }, 1000)\r\n//         console.log(lead)\r\n//         }       \r\n//     }\r\n    \r\n//     return (\r\n//         <div>\r\n//             { loading ? <Preloader /> : (\r\n//                 <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n//                 <Card.Body className=\"pt-0\">\r\n//                 <Table hover className=\"user-table align-items-center\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th className=\"border-bottom\">Serial No.</th>\r\n//                         <th className=\"border-bottom\">Enquiry date</th>\r\n//                         <th className=\"border-bottom\">Customer</th>\r\n//                         <th className=\"border-bottom\">Contact</th>\r\n//                         <th className=\"border-bottom\">Project</th> \r\n//                         <th className=\"border-bottom\">Lead Score</th>\r\n//                         <th className=\"border-bottom\">Lead Type</th>\r\n//                         <th className=\"border-bottom\">Status</th>\r\n//                         <th className=\"border-bottom\">Remarks</th>\r\n//                         <th className=\"border-bottom\">Next Follow Up</th>            \r\n//                         <th className=\"border-bottom\">Manager Remarks</th>                       \r\n//                         <th className=\"border-bottom\">Cancellation</th> \r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {cancelLeadInfo && cancelLeadInfo.map((lead, i) => \r\n//                     <tr key={i}>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {i+1}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {new Date(`${lead.enquiryDate}`).toISOString().split('T')[0]}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.customer}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.contactNumber}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.project.subProject}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.leadScore}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.leadType}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                             {lead.status}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.remarks}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {new Date(`${lead.nextFollow}`).toISOString().split('T')[0]}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.managerRemarks}\r\n//                         </span>\r\n//                     </td>\r\n//                     {/* <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.firstInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.secondInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.thirdInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.totalSqft ? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {(lead.payment.firstInstallment) + (lead.payment.secondInstallment) + (lead.payment.thirdInstallment) }\r\n//                         </span>\r\n//                     </td> */}\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                             <select defaultValue={!lead.cancellation} onChange={(e) => updateHandler(e, lead)}>\r\n//                                 <option value={false}>Cancelled</option>\r\n//                                 <option value={true}>Not Cancel</option>\r\n//                             </select>\r\n//                         </span>\r\n//                     </td>\r\n//                     {/* <td>\r\n//                         <Dropdown as={ButtonGroup}>\r\n//                         <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n//                             <span className=\"icon icon-sm\">\r\n//                             <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n//                             </span>\r\n//                         </Dropdown.Toggle>\r\n//                         <Dropdown.Menu>\r\n//                             <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item><Link to={`/leads/${lead._id}/edit`}>\r\n//                                 <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit</Link>\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item className=\"text-danger\">\r\n//                             <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n//                             </Dropdown.Item>\r\n//                         </Dropdown.Menu>\r\n//                         </Dropdown>\r\n//                     </td> */}\r\n//                     </tr>\r\n//                     )}\r\n//                     </tbody>\r\n//                 </Table>\r\n//                 <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n//                     <Nav>\r\n//                     <Pagination className=\"mb-2 mb-lg-0\">\r\n//                         <Pagination.Prev>\r\n//                         Previous\r\n//                         </Pagination.Prev>\r\n//                         <Pagination.Item active>1</Pagination.Item>\r\n//                         <Pagination.Item>2</Pagination.Item>\r\n//                         <Pagination.Item>3</Pagination.Item>\r\n//                         <Pagination.Item>4</Pagination.Item>\r\n//                         <Pagination.Item>5</Pagination.Item>\r\n//                         <Pagination.Next>\r\n//                         Next\r\n//                         </Pagination.Next>\r\n//                     </Pagination>\r\n//                     </Nav>\r\n//                     {/* <small className=\"fw-bold\">\r\n//                     Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n//                     </small> */}\r\n//                 </Card.Footer>\r\n//                 </Card.Body>\r\n//             </Card>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default TotalLeads\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import moment from \"moment-timezone\";\r\n// import Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup, Alert } from '@themesberg/react-bootstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\nimport { addUser, managerList, teamLeadList, teamLeadsUnderManager} from \"../actions/userActions\";\r\nimport { projects } from \"../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nexport default ({history}) => {\r\n    const [userData, setUserData] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    // const [underManager, setUnderManager] = useState('')\r\n    // const [underTeamLead, setUnderTeamLead] = useState('')\r\n    const [role, setRole] = useState('')\r\n    // const [mainProject, setMainProject] = useState('')\r\n \r\n    const { addToast } = useToasts();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    const { loading, error, managers } = fetchManagers\r\n\r\n    const teamLeads = useSelector((state) => state.teamLeadsUnderManager)\r\n    const { teamleadList : teamlead } = teamLeads\r\n    \r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n  \r\n    // useEffect(() => {\r\n    //   if (userInfo) {\r\n    //     history.push('/')\r\n    //   }\r\n    // }, [history, userData])\r\n\r\n    // useEffect(()=>{\r\n    //   if(!managers){\r\n    //     dispatch(managerList())\r\n    //   }\r\n    //   if(underManager){\r\n    //     dispatch(teamLeadsUnderManager(underManager))\r\n    //   }\r\n    //   if(!projectInfo){\r\n    //     dispatch(projects())\r\n    //   }\r\n    //   if(underManager){\r\n    //     setMainProject(managers.filter(m => m._id === underManager)[0].project.mainProject)\r\n    //   }\r\n    // },[underManager, role ])\r\n\r\n    // useEffect(() => {\r\n    //   if(projectInfo){\r\n    //   setMainProject(projectInfo[0].mainProject)\r\n    //   setProjectId(projectInfo[0].projectId)\r\n    //   }\r\n    // }, [projectInfo])\r\n\r\n  \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setUserData(\r\n            userData.name = name, \r\n            userData.email = email,\r\n            userData.empCode= empCode,\r\n            userData.mobile= mobile,\r\n            userData.password= password,\r\n            userData.role= role,\r\n            // userData.managerId= underManager? underManager : null,\r\n            // userData.teamLeadId= underTeamLead ? underTeamLead : null,\r\n            userData.asm= \"null\",\r\n            userData.cpm= \"null\",\r\n            userData.isAdmin= \"false\",\r\n            // userData.project=mainProject? mainProject : null,\r\n          userData.setMilestone = {\r\n            bookings: 0,\r\n            leads: 0,\r\n            siteVisits: 0\r\n          }\r\n        )\r\n        dispatch(addUser(userData, addToast))\r\n        // setName('')\r\n        // setEmail('')\r\n        // setMobile('')\r\n        // setUserData({})\r\n        // setRole('')\r\n        // setMainProject('')\r\n        // setUnderManager('')\r\n        // setUnderTeamLead('')\r\n        // setPassword('')\r\n        // window.location.reload();\r\n    }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={submitHandler}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"birthday\">\r\n                <Form.Label>Birthday</Form.Label>\r\n                <Datetime\r\n                  timeFormat={false}\r\n                  onChange={setBirthday}\r\n                  renderInput={(props, openCalendar) => (\r\n                    <InputGroup>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                        placeholder=\"mm/dd/yyyy\"\r\n                        onFocus={openCalendar}\r\n                        onChange={() => { }} />\r\n                    </InputGroup>\r\n                  )} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Select defaultValue=\"0\">\r\n                  <option value=\"0\">Gender</option>\r\n                  <option value=\"1\">Female</option>\r\n                  <option value=\"2\">Male</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            \r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group className=\"mb-2\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Select id=\"state\" onChange={e=> setRole(e.target.value)} required>\r\n                <option>Select</option>\r\n                  \r\n                  <option value=\"TeamLead\">TeamLead</option>\r\n                  {/* <option value=\"ASM\">ASM</option> */}\r\n                  <option value=\"Consultant\">Consultant</option>\r\n                  {/* <option value=\"Lead Assigner\">Lead Assigner</option> */}\r\n                </Form.Select>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n           {/* <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Manager</Form.Label>\r\n\r\n                  <Form.Select required id=\"state\" defaultValue={underManager} onChange={e=> setUnderManager(e.target.value)}  disabled={(role==='Consultant' || role==='TeamLead') ? false:true}>\r\n\r\n                <option>Select</option>\r\n                <>\r\n                  {managers && managers.map((manager,i)=>{return (<option key={i} value={manager._id}>{manager.name}</option>)})}\r\n                  </>\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>TeamLead</Form.Label>\r\n\r\n                  <Form.Select required id=\"state\" defaultValue={underTeamLead} onChange={e=> setUnderTeamLead(e.target.value)} disabled={role==='Consultant'? false:true}>\r\n                  <option>Select</option>\r\n                  {(teamlead && teamlead.teamLeadsList.length>0)&& teamlead.teamLeadsList.map((lead,i)=><option value={lead.userId._id}>{lead.userId.name}</option>)}\r\n\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Project</Form.Label>\r\n                  <Form.Select id=\"state\" defaultValue={mainProject} onChange={e=> setMainProject(e.target.value)} required disabled={(role==='Manager' || role==='CPM') ? false:true}>\r\n                  <option>Select</option>\r\n                  {projectInfo && projectInfo.map((pro,i)=><option key={i} value={pro._id}>{pro.mainProject}</option>)}\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>  */}\r\n\r\n          \r\n\r\n        {/*  <h5 className=\"my-4\">Address</h5>\r\n           <Row>\r\n            <Col sm={9} className=\"mb-3\">\r\n              <Form.Group id=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={3} className=\"mb-3\">\r\n              <Form.Group id=\"addressNumber\">\r\n                <Form.Label>Number</Form.Label>\r\n                <Form.Control required type=\"number\" placeholder=\"No.\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group id=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"City\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4} className=\"mb-3\">\r\n              <Form.Group className=\"mb-2\">\r\n                <Form.Label>Select state</Form.Label>\r\n                <Form.Select id=\"state\" defaultValue=\"0\">\r\n                  <option value=\"0\">State</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Group id=\"zip\">\r\n                <Form.Label>ZIP</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"ZIP\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n           */}\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport { deleteUser } from '../actions/userActions';\r\nimport axios from 'axios';\r\nimport { createHashHistory } from 'history'\r\n\r\n\r\nconst ReactTable2 = ({users}) => {\r\n    const dispatch = useDispatch()\r\n    const history = createHashHistory()\r\n\r\n    const deleteUserProfile = useSelector((state) => state.deleteUserProfile)\r\n    const { loading: deleteLoading, error:deleteError, success } = deleteUserProfile\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n         dispatch(deleteUser(id))\r\n        //  history.push('/remove/consultant')\r\n        window.location.reload()\r\n        }\r\n    }\r\n\r\n    const editHandler = (id) => {\r\n      history.push(`/manager/user/${id}/edit`)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"users\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, users) => {\r\n            console.log(row, index)\r\n            return users+1\r\n          },\r\n        },\r\n        {\r\n          dataField: \"userId.empCode\",\r\n          text: \"Employee Code\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"userId.name\",\r\n          text: \"Name\",\r\n          sort: true,\r\n          \r\n        },\r\n        {\r\n          dataField: \"userId.mobile\",\r\n          text: \"Mobile no.\"\r\n        },\r\n        {\r\n          dataField: \"userId.email\",\r\n          text: \"Email Id\",\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          formatter: (cell,row) => {\r\n            return (\r\n              // <button className=\"btn btn-primary\" onClick={ ()=>deleteHandler(row._id) }>Remove</button>\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editHandler(row.userId._id) }>Edit</button>\r\n\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n    return (\r\n        <div>\r\n            <BootstrapTable\r\n                 \r\n                 bootstrap4\r\n                 keyField=\"_id\"\r\n                 data={users}\r\n                 columns={columns}\r\n                 filter={ filterFactory() }\r\n                 pagination={paginationFactory({ sizePerPage: 10 })}\r\n                 striped\r\n               />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactTable2\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\nimport { consultantsUnderManager } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport ReactTable2 from './ReactTable2';\r\n\r\n\r\nconst Consultant = ({history}) => {\r\n    // const [userList, setUserList] = useState([])\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const fetchConsultantsUnderManager = useSelector((state) => state.fetchConsultantsUnderManager)\r\n    const { loading, error, consultantsList: users } = fetchConsultantsUnderManager\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n        dispatch(consultantsUnderManager(user._id))\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(consultants())\r\n    // }, [])\r\n\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     setUserList(users)\r\n    // }, [users])\r\n\r\n//     const [usersData, setUsersData] = useState([])\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//          useEffect(() => {\r\n//            setTimeout(()=>{\r\n//             axios.get(`/api/users/consultant`)\r\n//             .then(res => {\r\n//                 console.log(\"sgh\")\r\n//                 const users = res.data;\r\n//                 setUsersData(users)\r\n//                 setLoading(false)                     \r\n//             })\r\n//           }, 3000)\r\n          \r\n\r\n//          }, [])\r\n\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n        }\r\n        history.push('/')\r\n    }\r\n  \r\n\r\n  \r\n  \r\n  \r\n  if(users === undefined){\r\n  return (\r\n    <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n    \r\n  )\r\n  } else{\r\n    return (\r\n      \r\n      <>\r\n      {loading? (\r\n        // <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        // <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={40} />\r\n        // </div>\r\n        <div></div>\r\n      ) : (\r\n      <div>\r\n        \r\n                    <ReactTable2 users={users}/>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n\r\n  export default Consultant","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\nimport { teamLeadsUnderManager } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport ReactTable2 from './ReactTable2';\r\n\r\n\r\nconst TeamLead = ({history}) => {\r\n  \r\n    const dispatch = useDispatch()\r\n\r\n    const fetchTeamLeadsUnderManager = useSelector((state) => state.teamLeadsUnderManager)\r\n    const { loading, error, teamleadList: users } = fetchTeamLeadsUnderManager\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n        dispatch(teamLeadsUnderManager(user._id))\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(teamLeads())\r\n    // }, [])\r\n\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     setUserList(users)\r\n    // }, [users])\r\n\r\n//     const [usersData, setUsersData] = useState([])\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//          useEffect(() => {\r\n//            setTimeout(()=>{\r\n//             axios.get(`/api/users/consultant`)\r\n//             .then(res => {\r\n//                 console.log(\"sgh\")\r\n//                 const users = res.data;\r\n//                 setUsersData(users)\r\n//                 setLoading(false)                     \r\n//             })\r\n//           }, 3000)\r\n          \r\n\r\n//          }, [])\r\n\r\n\r\n    const deleteHandler = (id) =>{\r\n        if (window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n        }\r\n        history.push('/')\r\n    }\r\n  \r\n\r\n    console.log(9, users)\r\n  \r\n  \r\n  if(users === undefined){\r\n  return (\r\n    <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n    \r\n  )\r\n  } else{\r\n    \r\n    return (\r\n      \r\n      <>\r\n    \r\n      <div>\r\n        \r\n                    <ReactTable2 users={users.teamLeadsList}/>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n\r\n  export default TeamLead\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport {activityLogData} from '../actions/activityLogActions'\r\n\r\n// delete lead -> null remaining\r\n\r\nconst ActivityLog = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const activityLogDetail = useSelector((state) => state.activityLogDetail)\r\n    const { loading , error, activityLog } = activityLogDetail\r\n\r\n  useEffect(()=>{\r\n    if(userInfo && userInfo.role === \"Manager\"){\r\n    dispatch(activityLogData(userInfo._id))\r\n    \r\n    }else{\r\n      history.push(`/login`)\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(activityLog && activityLog.activityLogData && activityLog.activityLogData.length>0){\r\n      setName(activityLog.activityLogData[0].member.name.charAt(0).toUpperCase()+activityLog.activityLogData[0].member.name.slice(1))\r\n    }\r\n  },[activityLog])\r\n\r\n  const leadHandler = (activity) => {\r\n    history.push(`/leads/${activity.leadId._id}/edit`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) : activityLog && activityLog.activityLogData.length > 0 ?(\r\n      <>\r\n      <h3 className='mb-3'>{activityLog && activityLog.activityLogData && (name + ' - ' +(activityLog.activityLogData[0].member.role)+'') }</h3>\r\n    <Row className=\"\">\r\n      <Col xs={12} sm={6} xl={8} className=\"mb-4 d-sm-block\">\r\n    <div className=''>\r\n      {(activityLog && activityLog.activityLogData) && activityLog.activityLogData.map((activity, i) => (\r\n      <Card className='px-3 py-3 mb-2 d-flex justify-content-between align-items-center flex-row' key={i}>\r\n        <div>\r\n        <a className={`mb-3 action-text ${activity.leadId === null ? 'deleted-lead':'' }`} onClick={()=>leadHandler(activity)} > {name} {activity.action}</a>\r\n        </div>\r\n        <div className='me-0 mt-2'>\r\n        {/* <p className='mb-1'>{new Date(activity.createdAt).toDateString()}</p> */}\r\n        <p className='mb-1' style={{\"color\":\"#69acbf\"}}>  <TimeAgo date={new Date(activity.createdAt)} /> </p>\r\n        </div>\r\n      </Card>\r\n      ))\r\n  }\r\n  </div>\r\n  </Col>\r\n  \r\n      <Col xs={12} sm={6} xl={4} className=\"mb-4 d-sm-block\">\r\n      <CounterWidget\r\n            category=\"Booked\"\r\n            title={40}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n          <br/>\r\n\r\n      <CounterWidget\r\n            category=\"Site Visit\"\r\n            title={80}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n<br/>\r\n      <CounterWidget\r\n            category=\"Leads\"\r\n            title={160}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n      </Col>\r\n      </Row>\r\n    </>\r\n  ):(\r\n    <div className='p-5 d-flex justify-content-center align-items-center'>\r\n      <h1>\"No Activity\"</h1>\r\n    </div>\r\n  )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ActivityLog","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\n\r\nimport { consultantsUnderManager, updateUser } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\nimport Preloader from '../components/Preloader';\r\n\r\n\r\n\r\nconst SetMilestone = ({history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [bookingNumber, setBookingNumber] = useState(0)\r\n    const [ userDetails, setUserDetails] = useState({})\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {userInfo: user } = userLogin\r\n\r\n    const fetchConsultantsUnderManager = useSelector((state) => state.fetchConsultantsUnderManager)\r\n    const { loading, error, consultantsList: users } = fetchConsultantsUnderManager\r\n\r\n    // const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    // const { loading, error, consultants: users } = fetchConsultants\r\n\r\n    const userUpdate = useSelector((state) => state.up)\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(user && user.role === 'Manager'){\r\n        dispatch(consultantsUnderManager(user.managerId))\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, user])\r\n\r\n    useEffect(() => {\r\n        if(userDetails.name){\r\n        dispatch(updateUser(userDetails))\r\n        }\r\n    },[dispatch, userDetails])\r\n\r\n\r\n    const bookingHandler = (e, user) => {\r\n        e.preventDefault()\r\n        user.setMilestone ={\r\n            bookings : bookingNumber,\r\n            leads : bookingNumber * 6,\r\n            siteVisits : bookingNumber * 4\r\n        }\r\n        setUserDetails(user)\r\n        console.log(userDetails)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { loading ? <Preloader /> : (\r\n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n                <Card.Body className=\"pt-0\">\r\n                <Table hover className=\"user-table align-items-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"border-bottom\">Serial No.</th>\r\n                        <th className=\"border-bottom\">Employee Code</th>\r\n                        <th className=\"border-bottom\">Name</th>\r\n                        <th className=\"border-bottom\">Email Id</th>\r\n                        <th className=\"border-bottom\">Mobile no.</th> \r\n                        <th className=\"border-bottom\">Bookings Number<br/>(per month)</th>  \r\n                        {/* <th className=\"border-bottom\">Leads<br/>(per month)</th>  \r\n                        <th className=\"border-bottom\">Site Visits<br/>(per month)</th>             */}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {users && users.map((user, i) => \r\n                    <tr key={i}>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {i+1}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.empCode}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.name}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.email}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.mobile}\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <input\r\n                            type=\"number\"\r\n                            defaultValue={user.setMilestone.bookings}\r\n                            onChange = { (e) => setBookingNumber(e.target.value)}\r\n                        />\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <div className=\"mt-3\">\r\n                            <Button variant=\"primary\" type=\"submit\" onClick = {(e) => bookingHandler(e,user)}>Save</Button>\r\n                        </div>\r\n                    </td>\r\n                    {/* <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.setMilestone.bookings * 6}\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.setMilestone.bookings * 4}\r\n                        </span>\r\n                    </td> */}\r\n                    \r\n                    {/* <td>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={}/>\r\n                    </td> */}\r\n                    {/* <td>\r\n                        <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                            <span className=\"icon icon-sm\">\r\n                            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"text-danger\" onClick= {()=> deleteHandler(user._id)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td> */}\r\n                    </tr>\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n                {/* <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n                    <Nav>\r\n                    <Pagination className=\"mb-2 mb-lg-0\">\r\n                        <Pagination.Prev>\r\n                        Previous\r\n                        </Pagination.Prev>\r\n                        <Pagination.Item active>1</Pagination.Item>\r\n                        <Pagination.Item>2</Pagination.Item>\r\n                        <Pagination.Item>3</Pagination.Item>\r\n                        <Pagination.Item>4</Pagination.Item>\r\n                        <Pagination.Item>5</Pagination.Item>\r\n                        <Pagination.Next>\r\n                        Next\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                    </Nav>\r\n                    {/* <small className=\"fw-bold\">\r\n                    Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n                    </small> \r\n                </Card.Footer> */}\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetMilestone\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup, Modal, Form } from '@themesberg/react-bootstrap';\r\n// import { Form } from 'react-bootstrap';\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport { activityLogData } from '../actions/activityLogActions'\r\nimport { deleteTask, fetchIndividualTasks } from '../actions/taskManagerActions';\r\nimport { fetchUserList } from '../actions//userActions'\r\nimport { addTask, updateTask } from '../actions/taskManagerActions';\r\nimport { UPDATE_TASK_RESET, DELETE_TASK_RESET } from '../constants/taskManagerContants';\r\n\r\n\r\n// delete lead -> null remaining\r\n\r\nconst TaskManager = ({ history, match }) => {\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showEditDefault, setShowEditDefault] = useState(false);\r\n    const [task, setTask] = useState('')\r\n    const [dueDate, setDueDate] = useState('')\r\n    const [assignTo, setAssignTo] = useState('')\r\n    const [note, setNote] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [editedTask, setEditedTask] = useState('')\r\n    const [previousTask, setPreviousTask] = useState('')\r\n    const [editedDueDate, setEditedDueDate] = useState('')\r\n    const [editedAssignTo, setEditedAssignTo] = useState('')\r\n    const [editedNote, setEditedNote] = useState('')\r\n    const [editedStatus, setEditedStatus] = useState('')\r\n    \r\n\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n\r\n    const handleEditClose = () => setShowEditDefault(false);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const fetchUserTasks = useSelector((state) => state.fetchIndividualTasks)\r\n    const { loading, error, taskList } = fetchUserTasks\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { users } = userList\r\n\r\n    const addTaskData = useSelector((state) => state.addTask)\r\n    const { loading: taskLoading, error: taskError, addedTask } = addTaskData\r\n\r\n    const updateTaskData = useSelector((state) => state.updateTask)\r\n    const { success } = updateTaskData\r\n\r\n    const deleteTaskData = useSelector((state) => state.deleteTask)\r\n    const { success: deleteSuccess } = deleteTaskData\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.role === \"Manager\") {\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n            dispatch(fetchUserList())\r\n        } else {\r\n            history.push(`/login`)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(success) {\r\n            dispatch({\r\n                type: UPDATE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    },[success])\r\n\r\n    useEffect(()=>{\r\n        if(deleteSuccess) {\r\n            dispatch({\r\n                type: DELETE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    }, [deleteSuccess])\r\n\r\n    const addtaskHandler = (e) => {\r\n        e.preventDefault()\r\n       \r\n        dispatch(addTask({\r\n            task,\r\n            member: userInfo._id,\r\n            dueDate,\r\n            note,\r\n            assignTo : assignTo? assignTo: userInfo._id\r\n        }))\r\n\r\n        setShowDefault(false)\r\n        dispatch(fetchIndividualTasks(userInfo._id))\r\n        setAssignTo('')\r\n        setDueDate('')\r\n        setNote('')\r\n        setStatus('')\r\n        setTask('')\r\n        \r\n    }\r\n\r\n    const taskStatusHandler = (e, task) => {\r\n      \r\n        if(task.status === 'Pending'){\r\n            task.status = 'Completed'\r\n        }else{\r\n            task.status ='Pending'\r\n        }\r\n\r\n        dispatch(updateTask(task))\r\n    }\r\n\r\n    const deleteTaskHandler = (e, task) => {\r\n        dispatch(deleteTask(task._id))\r\n    }\r\n\r\n\r\n    const editTaskHandler = (e,task) => {\r\n        e.preventDefault()\r\n        setPreviousTask(task)\r\n        setShowEditDefault(true)\r\n\r\n        setEditedTask(task.task)\r\n        setEditedDueDate(task.dueDate)\r\n        setEditedNote(task.note)\r\n        setEditedAssignTo(task.assignTo)\r\n    }\r\n\r\n    const saveEditedTaskHandler = (e, task) => {\r\n        e.preventDefault()\r\n        dispatch(updateTask({\r\n            _id : previousTask._id,\r\n            task : editedTask,\r\n            note: editedNote,\r\n            status : editedStatus,\r\n            member: userInfo._id,\r\n            assignTo: editedAssignTo,\r\n            dueDate: editedDueDate\r\n        }))\r\n\r\n        setShowEditDefault(false)\r\n        setEditedAssignTo('')\r\n        setEditedDueDate('')\r\n        setEditedNote('')\r\n        setEditedStatus('')\r\n        setEditedTask('')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<Preloader />) : error ? (<Alert>{error}</Alert>) : true ? (\r\n                <>\r\n                    <Row className='pt-3 pb-3'>\r\n                        <Col>\r\n                        {/* <a href=\"#\" className='btn btn-primary'>Add New Task</a> */}\r\n                        <Button variant=\"primary\" className=\"my-3\" onClick={() => setShowDefault(true)}>Add New Task</Button>\r\n                        <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                            <Modal.Header>\r\n                            <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                            <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form className='p-3' onSubmit={(e)=>addtaskHandler(e)}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Task</Form.Label>\r\n                                <Form.Control required  type=\"text\" onChange={(e) => setTask(e.target.value)}/>\r\n                                {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                 </Form.Group>\r\n                                 <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                    <Form.Label>Due time</Form.Label>\r\n                                    <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" defaultValue={dueDate}  onChange={(e) => {setDueDate(e.target.value)}}/>\r\n                                </Form.Group>\r\n                                    \r\n\r\n                                    <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                        <Form.Label>Assign to</Form.Label>\r\n                                        <Form.Select value={assignTo || ''} onChange={(e) => setAssignTo(e.target.value)}>\r\n                                        <option value=\" \">Select</option>\r\n                                        \r\n                                        {users && users.map((user, i) => (\r\n                                            \r\n                                        (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                            \r\n                                        ))}\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Note</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" onChange={(e) => setNote(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <button className=\"btn btn-primary\" type='submit'>Add Task</button>\r\n                            </Form>\r\n                                </Modal.Body>\r\n                                {/* <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    I Got It\r\n                                </Button>\r\n                                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                </Modal.Footer> */}\r\n                            </Modal>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        {(taskList && taskList.length>0)? taskList.map((task, i)=>(\r\n                        <Col xs={12} sm={12} xl={12} className=\"mb-4 d-sm-block\" key={i}>\r\n                            <div className=\"hover-state rounded-0 rounded-top py-3 card border-bottom\">\r\n                                <div className=\"d-sm-flex align-items-center flex-wrap flex-lg-nowrap py-0 card-body\">\r\n                                    <div className=\"text-left text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check me-sm-2\">\r\n                                            <input type=\"checkbox\" id=\"task-584be4d2-bec0-4fb1-80b1-690358ca4809\" className=\"form-check-input\"\r\n                                                value=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"px-0 mb-4 mb-md-0 col-lg-9 col-9\">\r\n                                        <div className=\"mb-2\">\r\n                                            <h5 className=\"\">{task.task}</h5>\r\n                                            <div className=\"d-block d-sm-flex\">\r\n                                                <div>\r\n                                                    <h6 className=\"fw-normal text-gray mb-3 mb-sm-0\"><svg width={15} xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                        className=\"icon icon-xxs text-gray-500 me-2\">\r\n                                                        <path fillRule=\"evenodd\"\r\n                                                            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\r\n                                                            clipRule=\"evenodd\"></path>\r\n                                                    </svg> {new Date(task.dueDate).toLocaleDateString() + ` (` + new Date(task.dueDate).toLocaleTimeString() + `)`}</h6>\r\n                                                </div>\r\n                                                <div className=\"ms-sm-3\" onClick={(e) => taskStatusHandler(e, task)} style={{cursor: 'pointer'}}>\r\n                                                    {task.status === 'Pending'? <span className=\"super-badge badge bg-warning\">In Progress</span> : <span className=\"super-badge badge bg-success\">Completed</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"fw-bold text-dark card-link\">\r\n                                                <span className=\"fw-normal text-gray \">{task.note && task.note}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fas fa-edit\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> editTaskHandler(e,task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fa fa-trash red\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> deleteTaskHandler(e, task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    \r\n                                    <div\r\n                                        className=\"d-none d-lg-block d-xl-inline-flex align-items-center ms-lg-auto text-right justify-content-center px-md-0 col-xl-1 col-lg-1 col-sm-1 col-10\">\r\n                                        <div className=\"d-flex justify-content-end dropdown\">\r\n                                            <button id=\"react-aria8234133146-25\" aria-expanded=\"false\" type=\"button\"\r\n                                                className=\"text-dark dropdown-toggle-split m-0 p-0 dropdown-toggle btn btn-link\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                    className=\"icon icon-xs icon-dark\">\r\n                                                    <path\r\n                                                        d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Modal as={Modal.Dialog} centered show={showEditDefault} onHide={handleEditClose}>\r\n                                    <Modal.Header>\r\n                                    <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                                    <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditClose} />\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form className='p-3' onSubmit={(e)=>saveEditedTaskHandler(e, task)}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control required  type=\"text\"  value={editedTask} onChange={(e)=> setEditedTask(e.target.value)}/>\r\n                                        {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                            <Form.Label>Due time</Form.Label>\r\n                                            <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" value={editedDueDate.split('.')[0]}  onChange={(e) => {setEditedDueDate(e.target.value)}}/>\r\n                                        </Form.Group>\r\n                                            \r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Assign to</Form.Label>\r\n                                                <Form.Select value={editedAssignTo} onChange={(e) => setEditedAssignTo(e.target.value)}>\r\n                                                <option value=\" \">Select</option>\r\n                                                \r\n                                                {users && users.map((user, i) => (\r\n                                                    \r\n                                                (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                                    \r\n                                                ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Status</Form.Label>\r\n                                                <Form.Select value={editedStatus} onChange={(e) => setEditedStatus(e.target.value)}>\r\n                                                <option value=\"Pending\">In Progress</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Note</Form.Label>\r\n                                                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" value={editedNote} onChange={(e) => setEditedNote(e.target.value)}/>\r\n                                            </Form.Group>\r\n                                            <button className=\"btn btn-primary\" type='submit'>Save Task</button>\r\n                                    </Form>\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            I Got It\r\n                                        </Button>\r\n                                        <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        </Modal.Footer> */}\r\n                                    </Modal>\r\n\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        )): (\r\n                            <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                                <h1>\"No Task\"</h1>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                    <h1>\"No Task\"</h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskManager","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup, Alert } from '@themesberg/react-bootstrap';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\nimport {fetchUserDetail, updateUser, managerList, teamLeadsUnderManager} from '../actions/userActions'\r\nimport { projects } from \"../actions/projectActions\";\r\nimport { fetchConsultantLeadList } from \"../actions/leadActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\n\r\nexport default ({history, match}) => {\r\n    const userId = match.params.id\r\n    const d = new Date()\r\n\r\n    const [user, setUser] = useState({})\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [empCode, setEmpCode] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    // const [underManager, setUnderManager] = useState('')\r\n    // const [underTeamLead, setUnderTeamLead] = useState('')\r\n    const [role, setRole] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [bookingTarget, setBookingTarget] = useState(0)\r\n    const [bookingMonthlyStatus, setBookingMonthlyStatus] = useState(0)\r\n    const [siteVisitsMonthlyStatus, setSiteVisitsMonthlyStatus] = useState(0)\r\n    const [leadMonthlyStatus, setLeadMonthlyStatus] = useState(0)\r\n    const [bookingDailyStatus, setBookingDailyStatus] = useState(0)\r\n    const [siteVisitsDailyStatus, setSiteVisitsDailyStatus] = useState(0)\r\n    const [leadDailyStatus, setLeadDailyStatus] = useState(0)\r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const { addToast } = useToasts();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const userDetail = useSelector((state) => state.userDetail)\r\n    const { loading, error, userData} = userDetail\r\n\r\n    const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    const { managers } = fetchManagers\r\n\r\n    const teamLeads = useSelector((state) => state.teamLeadsUnderManager)\r\n    const { teamleadList: teamlead } = teamLeads\r\n    \r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const consultantLeadList = useSelector((state) => state.consultantLeadList)\r\n    const {leadList: consultantLeads } = consultantLeadList\r\n\r\n    useEffect(()=>{\r\n      if (userInfo && userInfo.role === 'Manager') {\r\n        dispatch(fetchUserDetail(userId))\r\n        dispatch(fetchConsultantLeadList(userId))\r\n\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [userInfo, history])\r\n\r\n    console.log(userData)\r\n\r\n    useEffect(()=>{\r\n      if(consultantLeads && consultantLeads.leadsList ){\r\n      setBookingDailyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'booked' && new Date(lead.updatedAt).toISOString().split('T')[0] === d.toISOString().split('T')[0] ).length)\r\n      setSiteVisitsDailyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'visited' && new Date(lead.updatedAt).toISOString().split('T')[0] === d.toISOString().split('T')[0]).length)\r\n      setLeadDailyStatus(consultantLeads.leadsList.filter(lead =>new Date(lead.updatedAt).toISOString().split('T')[0] === d.toISOString().split('T')[0]).length)\r\n      setBookingMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'booked' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      setSiteVisitsMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'visited' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      setLeadMonthlyStatus(consultantLeads.leadsList.filter(lead =>new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      }\r\n    }, [consultantLeads])\r\n\r\n    // useEffect(()=>{\r\n    //   if(!managers){\r\n    //     dispatch(managerList())\r\n    //   }\r\n    //   if(underManager){\r\n    //     dispatch(teamLeadsUnderManager(underManager))\r\n    //   }\r\n    //   if(!projectInfo){\r\n    //     dispatch(projects())\r\n    //   }\r\n    //   if(underManager && managers){\r\n    //     const a  = managers.filter(m => m._id === underManager)[0]\r\n    //     setMainProject(a? a.project : null)\r\n    //   }\r\n    // },[underManager, role ])\r\n\r\n    useEffect(()=>{\r\n      if(projectInfo){\r\n        setMainProject(projectInfo.filter(project => project._id === mainProject)[0]?projectInfo.filter(project => project._id === mainProject)[0].mainProject : '')\r\n      }else{\r\n        dispatch(projects())\r\n      }\r\n    }, [projectInfo])\r\n\r\n    useEffect(()=>{\r\n      if(userData){\r\n        setName(userData.name)\r\n        setEmail(userData.email)\r\n        setMobile(userData.mobile)\r\n        setRole(userData.role)\r\n        setEmpCode(userData.empCode)\r\n        setMainProject(userData.project)\r\n        // setUnderManager(userData.managerId)\r\n        // setUnderTeamLead(userData.teamLeadId)\r\n        setBookingTarget(userData.setMilestone.bookings)\r\n        // setUser(user._id = userData._id)\r\n\r\n      }\r\n    },[userData])\r\n\r\n    const submitHandler = (e) => {\r\n\r\n      e.preventDefault()\r\n      setUser(\r\n        user._id = userData._id,\r\n          user.name = name, \r\n          user.email = email,\r\n          user.empCode= empCode,\r\n          user.mobile= mobile,\r\n         (password && (password === confirmPassword))?  user.password= password : null,\r\n          user.role= role,\r\n          user.asm= \"null\",\r\n          user.cpm= \"null\",\r\n          user.isAdmin= \"false\",\r\n        user.setMilestone = {\r\n          bookings: bookingTarget,\r\n          leads: bookingTarget * 4,\r\n          siteVisits: bookingTarget * 6\r\n        })\r\n      dispatch(updateUser(user, addToast))\r\n    }\r\n\r\n  \r\n  return (\r\n    <>\r\n\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form onSubmit={(e)=>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Employee Code</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter your Employee Code\" value={empCode} onChange={(e) => setEmpCode(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"name@company.com\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control required type=\"number\" minLength={10} maxLength={10} placeholder=\"Mobile no.\" value={mobile} onChange={(e) => setMobile(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n          <Col md={6} className=\"mb-3\">\r\n            <Form.Group className=\"mb-2\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Select id=\"state\" value={role} onChange={e=> setRole(e.target.value)} required>\r\n                <option>Select</option>\r\n                  <option value=\"Manager\">Manager</option>\r\n                  <option value=\"TeamLead\">TeamLead</option>\r\n                  <option value=\"asm\">ASM</option>\r\n                  <option value=\"Consultant\">Consultant</option>\r\n                  <option value=\"cpm\">Channel Partner Manager</option>\r\n                  <option value=\"cp\">Channel Partner</option>\r\n                  <option value=\"lead assigner\">Lead Assigner</option>\r\n                </Form.Select>\r\n            </Form.Group>\r\n            </Col>\r\n\r\n          <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Project</Form.Label>\r\n                  {/* <Form.Select id=\"state\" defaultValue={(mainProject && mainProject.mainProject)? mainProject : \"No Project\"} onChange={e=> setMainProject(e.target.value)} required disabled={false}>\r\n                  <option>Select</option>\r\n                </Form.Select> */}\r\n                <Form.Control required type=\"text\"  value={mainProject? mainProject.mainProject : \"No Project Assigned\"} disabled/>\r\n                {/* <p>{(mainProject && mainProject.mainProject)? mainProject : \"No Project\"}</p> */}\r\n                </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n           {/* <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>Manager</Form.Label>\r\n                  <Form.Select id=\"state\" value={underManager} onChange={e=> setUnderManager(e.target.value)}  disabled={(role==='Consultant' || role==='TeamLead') ? false:true}>\r\n                <option>Select</option>\r\n                <>\r\n                  {managers && managers.map((manager,i)=>{return (<option key={i} value={manager._id}>{manager.name}</option>)})}\r\n                  </>\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n            <Form.Group id=\"project\" className=\"mb-4\">\r\n                  <Form.Label>TeamLead</Form.Label>\r\n                  <Form.Select id=\"state\" value={underTeamLead} onChange={e=> setUnderTeamLead(e.target.value)} disabled={role==='Consultant'? false:true}>\r\n                  <option>Select</option>\r\n                  {(teamlead && teamlead.teamLeadsList.length>0) && teamlead.teamLeadsList.map((lead,i)=><option key={i} value={lead.userId._id}>{lead.userId.name}</option>)}\r\n                </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            \r\n            \r\n          </Row>  */}\r\n\r\n          <Row>\r\n            <h5 className=\"mb-4\">Set Milestone (monthly)</h5>\r\n            <Col md={4} className=\"mb-3\">\r\n              <Form.Group id=\"booking\">\r\n                <Form.Label>Booking Target</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingTarget} onChange={(e) => setBookingTarget(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Site Visits Target</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingTarget*4} onChange={(e) => setBookingTarget(e.target.value)} disabled/>\r\n              </Form.Group>\r\n              {/* Site Visits Target : {bookingTarget * 4} */}\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Lead Generation Target</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingTarget*6} onChange={(e) => setBookingTarget(e.target.value)} disabled/>\r\n              </Form.Group>\r\n              {/* Lead Generation Target : {bookingTarget * 4} */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <h5 className=\"mb-4\">Achieved (monthly)</h5>\r\n            <Col md={4} className=\"mb-3\">\r\n              <Form.Group id=\"booking\">\r\n                <Form.Label>Booking Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingMonthlyStatus}  disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Site Visits Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={siteVisitsMonthlyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Site Visits Target : {bookingTarget * 4} */}\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Lead Generation Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={leadMonthlyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Lead Generation Target : {bookingTarget * 4} */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <h5 className=\"mb-4\">Achieved (Daily)</h5>\r\n            <Col md={4} className=\"mb-3\">\r\n              <Form.Group id=\"booking\">\r\n                <Form.Label>Booking Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={bookingDailyStatus}  disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Site Visits Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={siteVisitsDailyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Site Visits Target : {bookingTarget * 4} */}\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"booking\">\r\n                <Form.Label>Lead Generation Achieved</Form.Label>\r\n                <Form.Control required type=\"number\" min={0} placeholder=\"0\" value={leadDailyStatus}  disabled/>\r\n              </Form.Group>\r\n              {/* Lead Generation Target : {bookingTarget * 4} */}\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          <Row className=\"mt-3\">\r\n          <h5 className=\"mb-4\">Change Password</h5>\r\n          <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Change Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control  type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control required = {password? true : false} type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <p className=\"alert-message\">{password & (password === confirmPassword)? \"Password does not match\": ''}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CSVReader from 'react-csv-reader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Button, Image, Alert } from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport template from \"../assets/files/Bulk_upload_sheet.csv\"\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport Preloader from '../components/Preloader';\r\n\r\nimport { addBulkLeadData, assignBulkLead, getBulkLeadList, editBulkLeadData } from '../actions/bulkLeadActions';\r\n\r\n\r\nconst UploadLeads = ({history}) => {\r\n    const [leadData, setLeadData] = useState([])\r\n    const [leadList, setLeadList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const getBulkLead = useSelector((state) => state.getBulkLead)\r\n    const {leadList: leads } = getBulkLead\r\n\r\n    // const getBulkLead = useSelector((state) => state.getBulkLead)\r\n    // const {leadList: leads } = getBulkLead\r\n\r\n\r\n    useEffect(()=>{\r\n      if (userInfo && userInfo.role === \"Manager\") {\r\n        dispatch(getBulkLeadList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [userInfo, history])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      setTimeout(()=>{\r\n       axios.get(`/api/bulkLead`, config)\r\n       .then(res => {\r\n           const lead = res.data;\r\n           setLeadData(lead.bulkLeadList)\r\n           setLoading(false)                     \r\n       }).catch(function (error) {\r\n         // handle error\r\n         setLoading(false)\r\n         setError(error)\r\n       })\r\n     }, 3000)\r\n     \r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n     \r\n      if(leadList && leadList.length>0){\r\n        var b = []\r\n        for(var i=1; i< leadList.length-1; i++){\r\n          const a = {\r\n              \"serial\": i,\r\n              \"customerName\" : leadList[i][0],\r\n              \"enquiryDate\" : leadList[i][1]? `${leadList[i][1]}T00:00:00.000Z` : '',\r\n              \"contactNumber\": leadList[i][2],\r\n              \"project\": {\r\n                  \"mainProject\": leadList[i][3],\r\n                  \"subProject\": leadList[i][4]\r\n              },\r\n              \"leadScore\": leadList[i][5],\r\n              \"leadType\": leadList[i][6],\r\n              \"status\": leadList[i][7],\r\n              \"remarks\": leadList[i][8],\r\n              \"nextFollow\": leadList[i][9]?`${leadList[i][9]}T00:00:00.000Z`:'',\r\n              \"managerRemarks\": leadList[i][10],\r\n              \"payment\":{\r\n                  \"firstInstallment\" : 0,\r\n                  \"secondInstallment\" : 0,\r\n                  \"thirdInstallment\" : 0\r\n              },\r\n              \"cancellation\":false,\r\n              \"totalSqft\" : 0,\r\n              \"createdUser\": userInfo._id,\r\n              \"assignedUser\":\"\"\r\n          }\r\n  \r\n          b.push(a)\r\n          \r\n          }\r\n          if(leadData.length > 0){\r\n          setLeadData([...leadData, ...b])\r\n          }else{\r\n            setLeadData(b)\r\n          }\r\n  \r\n        dispatch(addBulkLeadData(b))\r\n      }\r\n    },[leadList])\r\n\r\n\r\n    const assignHandler = (e) => {\r\n      dispatch(assignBulkLead(leads))\r\n\r\n    }\r\n\r\n    const editTableHandler = (lead) => {\r\n        dispatch(editBulkLeadData(lead))\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"serial\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, leadData) => {\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customerName\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n              if(enquiryDate){\r\n            return enquiryDate && new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Project\",\r\n        //   filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n        //   filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollow\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (nextFollow) => {\r\n              if(nextFollow){\r\n            return nextFollow && new Date(`${nextFollow}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          csvExport: false,\r\n          formatter: (cell,row) => {\r\n            return (\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n \r\n\r\n    \r\n    return (\r\n        <>\r\n        {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    {error}\r\n  </Alert>):(\r\n        <div>\r\n          <div className=\"d-flex justify-content-between my-3 px-md-3 px-sm-1\">\r\n            <div>\r\n          <a href={template} className='btn btn-primary' download>Template</a>\r\n          <Button className='btn btn-primary ms-3' onClick={(e)=>assignHandler(e)} disabled={leadData && leadData.length>0? false : true}> Assign Leads</Button>\r\n          </div>\r\n            <CSVReader onFileLoaded={(data, fileInfo, originalFile) => setLeadList(data)} />           \r\n            {/* <img src={Profile1} alt=\"\" /> */}\r\n            </div>\r\n            <div>\r\n    \r\n                <BootstrapTable\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                    />\r\n        </div>\r\n        </div>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadLeads\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nimport {fetchleadDetails, updateLeadData, deleteLead } from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport { addCancelLeadData } from \"../actions/cancellationLeadActions\";\r\nimport { consultantsUnderManager } from \"../actions/userActions\";\r\n\r\n\r\n\r\nexport default ({match, history}) => {\r\n    const leadId = match.params.id\r\n\r\n    var gapi = window.gapi\r\n\r\n    var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n    const [createdUser, setCreatedUser] = useState('')\r\n    const [assignedUser, setAssignedUser] = useState('')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    var [firstInstallment, setFirstInstallment] = useState(0)\r\n    var [secondInstallment, setSecondInstallment] = useState(0)\r\n    var [thirdInstallment, setThirdInstallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [index, setIndex] = useState(0)\r\n    const [remainder, setRemainder] = useState(false)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const leadDetails = useSelector((state) => state.leadDetails)\r\n    const { loading, error, leadInfo } = leadDetails\r\n\r\n    const updateLead = useSelector((state) => state.updateLead)\r\n    const { loading: loadingUpdate, error: errorUpdate , success: successUpdate } = updateLead\r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const fetchConsultantsUnderManager = useSelector((state) => state.fetchConsultantsUnderManager)\r\n    const { loading: loadingConsultants, error: errorConsultants, consultantsList } = fetchConsultantsUnderManager\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    console.log(consultantsList)\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n        dispatch(consultantsUnderManager(user.managerId))\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n\r\n    useEffect(() => {\r\n      if(successUpdate){\r\n        history.push('/manager/leads')\r\n      }\r\n    },[successUpdate])\r\n\r\n    useEffect(()=>{\r\n    }, [mainProject, subProject])\r\n\r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      \r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n  \r\n    useEffect(() => {\r\n     \r\n      if (!leadInfo || leadInfo._id !== leadId) {\r\n        dispatch(fetchleadDetails(leadId))\r\n      }else{ \r\n        setCreatedUser(leadInfo.createdUser)\r\n        setAssignedUser(leadInfo.assignedConsultant)\r\n        setConsultant(leadInfo.consultantName)\r\n        setCustomer(leadInfo.customerName)\r\n        setEnquiryDate(leadInfo.enquiryDate)\r\n        setContactNumber(leadInfo.contactNumber)\r\n        setAlternateNumber(leadInfo.alternateNumber)\r\n        setMainProject(leadInfo.project.mainProject)\r\n        setSubProject(leadInfo.project.subProject)\r\n        setProjectId(leadInfo.project.projectId)\r\n        setLeadType(leadInfo.leadType)\r\n        setLeadScore(leadInfo.leadScore)\r\n        setStatus(leadInfo.status)\r\n        setRemarks(leadInfo.remarks)\r\n        setNextFollow(leadInfo.nextFollowUp)\r\n        setManagerRemarks(leadInfo.managerRemarks)\r\n        setFirstInstallment(leadInfo.payment.firstInstallment)\r\n        setSecondInstallment(leadInfo.payment.secondInstallment)\r\n        setThirdInstallment(leadInfo.payment.thirdInstallment)\r\n        setTotalSqft(leadInfo.totalSqft? leadInfo.totalSqft : 0)\r\n        setRemainder(leadInfo.remainder? leadInfo.remainder : false)\r\n      }\r\n    }, [dispatch, leadInfo, successUpdate])\r\n\r\n    \r\n\r\n    function findSubProject(project) {\r\n      return project.mainProject === mainProject\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(mainProject){\r\n        if(projectInfo)\r\n        {\r\n          const main = projectInfo.findIndex(findSubProject);\r\n        setIndex(main)\r\n\r\n      }\r\n      }\r\n    },[mainProject])\r\n\r\n\r\n    // const subProjectHandler = () => {\r\n    //   if(projectInfo)\r\n    //   {\r\n    //     const main = projectInfo.findIndex(findSubProject);\r\n    //   setIndex(main)\r\n    // }\r\n      \r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //   subProjectHandler()\r\n    // }, [mainProject])\r\n\r\n    const consultantHandler = (e) => {\r\n      //  console.log(e.target.value, consultantList)\r\n      // console.log(e.target.value._id)\r\n      setAssignedUser(consultantsList[e.target.value]._id)\r\n        setConsultant(consultantsList[e.target.value].userId.name)\r\n     }\r\n\r\n     const deleteHandler = (e) => {\r\n       e.preventDefault()\r\n      if (window.confirm('Are you sure?')){\r\n      dispatch(deleteLead(leadId))\r\n      }\r\n     }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n        dispatch(\r\n          updateLeadData({\r\n            _id: leadId,\r\n            createdUser,\r\n            assignedConsultant: assignedUser,\r\n            customerName:customer,\r\n            consultantName:consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            alternateNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : false,\r\n            remainder\r\n          }))\r\n    }\r\n\r\n    const projectHandler = (e) => {\r\n      setMainProject(e.target.value)\r\n    }\r\n\r\n    const cancelLeadHandler = (e, id) => {\r\n      e.preventDefault()\r\n      if (window.confirm('Are you sure')) {\r\n          dispatch(addCancelLeadData({\r\n            _id: leadId,\r\n            createdUser,\r\n            assignedConsultant: assignedUser,\r\n            customerName:customer,\r\n            consultantName: consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            alternateNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : true\r\n          }))\r\n          dispatch(deleteLead(leadId)) \r\n          history.push('/leads')\r\n        }\r\n\r\n  }\r\n\r\n  const handleClick = () => {\r\n    gapi.load('client:auth2', () => {\r\n      // console.log('loaded client')\r\n\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n\r\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n      gapi.auth2.getAuthInstance().signIn()\r\n      .then(() => {\r\n        \r\n        var event = {\r\n          'summary': leadInfo.customerName,\r\n          'location': '',\r\n          'description': leadInfo.project.subProject,\r\n          'start': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'end': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'recurrence': [\r\n            'RRULE:FREQ=DAILY;COUNT=1'\r\n          ],\r\n          'attendees': [\r\n            {'email': 'deve.metromindz@gmail.com'}\r\n          ],\r\n          'reminders': {\r\n            'useDefault': false,\r\n            'overrides': [\r\n              {'method': 'email', 'minutes': 24 * 60},\r\n              {'method': 'popup', 'minutes': 10}\r\n            ]\r\n          }\r\n        }\r\n\r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event,\r\n        })\r\n\r\n        request.execute(event => {\r\n          console.log(event)\r\n          window.open(event.htmlLink)\r\n        })\r\n        \r\n\r\n        /*\r\n            Uncomment the following block to get events\r\n        */\r\n        /*\r\n        // get events\r\n        gapi.client.calendar.events.list({\r\n          'calendarId': 'primary',\r\n          'timeMin': (new Date()).toISOString(),\r\n          'showDeleted': false,\r\n          'singleEvents': true,\r\n          'maxResults': 10,\r\n          'orderBy': 'startTime'\r\n        }).then(response => {\r\n          const events = response.result.items\r\n          console.log('EVENTS: ', events)\r\n        })\r\n        */\r\n    \r\n\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading && loadingProject ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e)=>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer || ''} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" defaultValue={enquiryDate && enquiryDate.split('.')[0]}  onChange={(e) => {setEnquiryDate(e.target.value)}}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n          \r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"contact\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"987654321\" value={contactNumber || ''} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select value={consultantsList && consultantsList.findIndex(c=>c.userId && (c.userId.name===consultant))} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                 \r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.userId && consultant.userId.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n            </Row>\r\n\r\n            <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={mainProject} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                <Form.Label>Sub Project</Form.Label>\r\n                <Form.Select value={subProject} onChange={(e) => setSubProject(e.target.value)}>\r\n                  <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore || ''} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>LEAD TYPE</Form.Label>\r\n                <Form.Select value={leadType || ''} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>STATUS</Form.Label>\r\n                <Form.Select value={status || ''} onChange={(e) => setStatus(e.target.value)}>\r\n                    <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                    <option value=\"Visited\">Visited</option>\r\n                    <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                    <option value=\"Detail Shared\">Detail Shared</option>\r\n                    <option value=\"Not Interested\">Not Interested</option>\r\n                    <option value=\"RFR\">RFR</option>\r\n                    <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" min={enquiryDate} defaultValue={nextFollow && nextFollow.split('.')[0]} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                     \r\n         </Row>\r\n\r\n         <Row>  \r\n        \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks || ''} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstInstallment(firstInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondInstallment(secondInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdInstallment(thirdInstallment = parseInt(e.target.value ) || 0)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3 d-flex justify-content-between\">\r\n            <div>\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n            <Button variant=\"primary\" className=\"ms-3\" type=\"submit\" onClick={handleClick} disabled={!nextFollow}>Reminder</Button>\r\n            <Button className=\"ms-3\"  variant=\"primary\" type=\"button\" onClick = {(e)=>cancelLeadHandler(e, leadId)}>Cancellation</Button>\r\n            </div>\r\n            <div>\r\n            <Button variant =\"danger\" onClick={(e)=>{deleteHandler(e)}}>Delete</Button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  \r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image, Col, Row, Card, Nav, Tab, Table, Button, Modal, Form} from '@themesberg/react-bootstrap';\r\nimport { consultantList, fetchUserList, managerList, teamLeadList } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\nimport Select from \"react-select\";\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport { FormGroup } from '@material-ui/core';\r\nimport { getProjectDetails, updateProject } from '../actions/projectActions';\r\n\r\nimport ConsultantSelect from '../components/ConsultantSelect';\r\nimport { addTeam, teamDetails, deleteTeam, updateTeam, fetchTeamList } from '../actions/teamManagementActions';\r\nimport { ADD_TEAM_RESET, DELETE_TEAM_RESET, UPDATE_TEAM_RESET } from '../constants/teamManagementConstants';\r\n\r\n  \r\n\r\nconst TeamMember = ({history, match}) => {\r\n  const id = match.params.id\r\n  // var consultantArray =[]\r\n\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showSubProjectDefault, setShowSubProjectDefault] = useState(false);\r\n    const [showEditSubProjectDefault, setShowEditSubProjectDefault] = useState(false);\r\n    const [showEditTeamDefault, setShowEditTeamDefault] = useState(false);\r\n    const [editedSubProject, setEditedSubProject] = useState('')\r\n    const [previousSubProject, setPreviousSubProject] = useState('')\r\n    const [newSubProject, setNewSubProject] = useState('')\r\n    const [selectedManager, setSelectedManager] = useState('')\r\n    const [selectedTeamLead, setSelectedTeamLead] = useState('')\r\n    const [selectedConsultants, setSelectedConsultants] = useState([])\r\n    const [editManager, setEditManager] = useState('')\r\n    const [editTeamLead, setEditTeamLead] = useState('')\r\n    const [editConsultants, setEditConsultants] = useState([])\r\n    const [consultantArray, setConsultantArray] = useState([])\r\n    const [cons, setCons] = useState([])\r\n    const [teamId, setTeamId] = useState('')\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n    const handleSubProjectClose = () => setShowSubProjectDefault(false);\r\n    const handleEditSubProjectClose = () => setShowEditSubProjectDefault(false);\r\n    const handleEditTeamClose = () => setShowEditTeamDefault(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const projectDetails = useSelector((state) => state.projectDetails)\r\n    const { loading, error, projectInfo } = projectDetails\r\n\r\n    const fetchTeamLeads = useSelector((state) => state.fetchTeamLeads)\r\n    const { teamlead } = fetchTeamLeads\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { consultants } = fetchConsultants\r\n\r\n    // const projectTeamDetails = useSelector((state) => state.projectTeamDetails)\r\n    // const { teamDetails } = projectTeamDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  const projectTeamDetails = useSelector((state) => state.projectTeamDetails)\r\n  const { teamDetails: projectTeam } = projectTeamDetails\r\n\r\n  const addTeamData = useSelector((state) => state.addTeam)\r\n  const { addedTeam } = addTeamData\r\n\r\n  const getTeamList = useSelector((state) => state.getTeamList)\r\n  const { teamList } = getTeamList\r\n\r\n  const deleteTeamStatus = useSelector((state) => state.deleteTeam)\r\n  const { success } = deleteTeamStatus\r\n\r\n  const updateTeamData = useSelector((state) => state.updateTeamData)\r\n  const { success: updateSuccess } = updateTeamData\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n        dispatch(getProjectDetails(user.project))\r\n        dispatch(teamLeadList())\r\n        dispatch(consultantList())\r\n        dispatch(teamDetails(user.project))\r\n        dispatch(fetchTeamList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n    \r\n    useEffect(()=>{\r\n      if(addedTeam || success || updateSuccess){\r\n        dispatch({\r\n          type:DELETE_TEAM_RESET\r\n        })\r\n        dispatch({type: ADD_TEAM_RESET})\r\n        dispatch({\r\n          type: UPDATE_TEAM_RESET\r\n        })\r\n       \r\n      dispatch(teamDetails(user.project))\r\n      }\r\n    },[addedTeam, success, updateSuccess])\r\n\r\n\r\n    useEffect(()=>{\r\n      if(consultants){\r\n        // for(let i=0 ; i < consultants.length; i++){\r\n        //   // setConsultantArray([...consultantArray, {value : consultants[i]._id, label: consultants[i].name}])\r\n        //   consultantArray = [...consultantArray, {value : consultants[i]._id, label: consultants[i].name}]\r\n        //   console.log(consultantArray)\r\n        // }\r\n        var a = []\r\n        consultants.map(cons => {\r\n          if(cons.isAvailable){\r\n          a.push({value : cons.consultantId, label: cons.name})\r\n          }\r\n        })\r\n        setConsultantArray(a)\r\n      }\r\n    }, [consultants])\r\n\r\n    const editSubProjectHandler = (project) => {\r\n      setShowEditSubProjectDefault(true)\r\n      setEditedSubProject(project)\r\n      setPreviousSubProject(project)\r\n    }\r\n\r\n    const saveEditSubProjectHandler = (e) => {\r\n      e.preventDefault()\r\n      projectInfo.subProject[projectInfo.subProject.findIndex(pro => pro === previousSubProject)] = editedSubProject\r\n      dispatch(updateProject(projectInfo))\r\n      setShowEditSubProjectDefault(false)\r\n    }\r\n\r\n    const selectOptionsManager = [\r\n      { value: 'bootstrap', label: 'Bootstrap' },\r\n      { value: 'react', label: 'React' },\r\n      { value: 'vue', label: 'Vue' },\r\n      { value: 'angular', label: 'Angular' },\r\n      { value: 'svelte', label: 'Svelte' },\r\n    ];\r\n  \r\n  \r\n    const selectOptionsConsultant = [\r\n      { value: 'bootstrap', label: 'Bootstrap' },\r\n      { value: 'react', label: 'React' },\r\n      { value: 'vue', label: 'Vue' },\r\n      { value: 'angular', label: 'Angular' },\r\n      { value: 'svelte', label: 'Svelte' },\r\n    ];\r\n    \r\n    const customStyles = {\r\n    \r\n      control: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem',\r\n      }),\r\n    \r\n      multiValue: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem'\r\n      }),\r\n    \r\n      multiValueRemove: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem'\r\n      }),\r\n    \r\n      placeholder: (provided) => ({\r\n        ...provided,\r\n        borderRadius: '.5rem',\r\n      }),\r\n    \r\n      singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n    \r\n        return {\r\n          ...provided,\r\n          opacity,\r\n          transition,\r\n        };\r\n      }\r\n    };\r\n\r\n    const deleteSubProjectHandler = (project) => {\r\n      const a = projectInfo.subProject.filter((pro) => pro !== project)\r\n      projectInfo.subProject = a\r\n      dispatch(updateProject(projectInfo))\r\n      dispatch(getProjectDetails(user.project))\r\n    }\r\n\r\n    const addSubProjectHandler = () => {\r\n      if(newSubProject){\r\n      projectInfo.subProject.push(newSubProject)\r\n      dispatch(updateProject(projectInfo))\r\n      dispatch(getProjectDetails(user.project))\r\n      setShowSubProjectDefault(false)\r\n      }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   if(cons && cons.length>0){\r\n    //     dispatch(addTeam({\r\n    //       projectId: id,\r\n    //       managerId: selectedManager,\r\n    //       // teamLeads: [{teamLeadId:selectedTeamLead}],\r\n    //       // consultants: [{\r\n    //       //   consultantId : cons,\r\n    //       //   teamLeadId : selectedTeamLead\r\n    //       // }]\r\n    //     }))\r\n    //   }\r\n    // }, [cons])\r\n\r\n    // useEffect(()=>{\r\n    //   if(selectedConsultants && selectedConsultants.length>0){\r\n    //   var consArray = []\r\n    //   selectedConsultants.map(cons => {\r\n    //     consArray.push({consultantId: cons.value, teamLeadId: selectedTeamLead})\r\n    //   })\r\n    //   console.log(\"cons\", consArray)\r\n    //   setSelectedConsultants(consArray)\r\n    // }\r\n    // }, [])\r\n\r\n   \r\n\r\n\r\n    const addTeamHandler = (e) => {\r\n      e.preventDefault()\r\n\r\n      if(teamList){\r\n        var managerCheck = teamList.teamsData.filter(team => {\r\n          if(team.managerId._id === selectedManager)  {\r\n            return team.projectId._id !== user.project \r\n          }})\r\n       \r\n      }\r\n\r\n      \r\n      \r\n      let teamCheck = projectTeam.teamData.filter(team =>(team.teamLeads.filter(t=>t.teamLeadId._id === selectedTeamLead)))\r\n\r\n      // let managerCheck = teamList.teamData.filter(team => (team.projectId === id) && (team.managerId._id === selectedManager))\r\n      \r\n      if(selectedConsultants && selectedConsultants.length>0){\r\n        var consArray = []\r\n        selectedConsultants.map(cons => {\r\n          consArray.push({consultantId: cons.value, teamLeadId: selectedTeamLead})\r\n        })\r\n        console.log(managerCheck, teamCheck)\r\n        if( teamCheck && managerCheck.length>0){\r\n         alert(\"Already member is in team\")\r\n        }else{\r\n         \r\n        dispatch(addTeam({\r\n        projectId: user.project,\r\n        managerId: selectedManager,\r\n        teamLeads: [{\r\n          teamLeadId: selectedTeamLead}],\r\n        consultants: consArray\r\n        \r\n      })) }\r\n      setSelectedConsultants([])\r\n      handleClose()\r\n    }}\r\n\r\n    const editTeamHandler = () => {\r\n      if(editConsultants && editConsultants.length>0){\r\n        var consArray = []\r\n        editConsultants.map(cons => {\r\n          consArray.push({consultantId: cons.value, teamLeadId: editTeamLead})\r\n        })}\r\n       dispatch(updateTeam({\r\n            _id: teamId,\r\n            projectId: user.project,\r\n            managerId: editManager,\r\n            teamLeads: [{\r\n              teamLeadId: editTeamLead}],\r\n            consultants: consArray\r\n            \r\n          }))\r\n      handleEditTeamClose()\r\n    }\r\n\r\n    const deleteTeamHandler = (id) => {\r\n      dispatch(deleteTeam(id))\r\n      dispatch(teamDetails(id))\r\n    }\r\n\r\n    const editTeamFormHandler = (team, id) =>{ \r\n      setEditManager(team.managerId._id)\r\n      setEditTeamLead(id)\r\n      setTeamId(team._id)\r\n      if(team.consultants && team.consultants.length>0){\r\n      var a = []\r\n      team.consultants.map(cons => {\r\n        a.push({value : cons.consultantId.userId.consultantId, label: cons.consultantId.userId.name})\r\n        \r\n      })\r\n    }\r\n  \r\n      setEditConsultants(a)\r\n      setShowEditTeamDefault(true)\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n      \r\n      <>\r\n     \r\n      <div>\r\n          <Row className='py-3'>\r\n              <Col>\r\n              \r\n      <Tab.Container defaultActiveKey=\"overview\">\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Nav className=\"nav-tabs\">\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"overview\" className=\"mb-sm-3 mb-md-0\">\r\n                Project Overview\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" className=\"mb-sm-3 mb-md-0\">\r\n                Team Members\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n\r\n          </Nav>\r\n        </Col>\r\n        <Col lg={12}>\r\n          <Tab.Content className='py-4' style={{background:\"white\"}}>\r\n            <Tab.Pane eventKey=\"overview\" className=\"py-4 px-4\">\r\n            <Row className='pt-3 pb-3'>\r\n                <Col><h3>Sub Project Lists</h3></Col>\r\n                <Col className='d-flex justify-content-end'><Button variant=\"primary\" onClick={() => setShowSubProjectDefault(true)}>Add Sub Project</Button>\r\n                <Modal as={Modal.Dialog} centered show={showSubProjectDefault} onHide={handleSubProjectClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Sub Project</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleSubProjectClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form>\r\n                      <Form.Group id=\"firstName\" className = \"mb-3\">\r\n                        <Form.Label>Sub Project</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter sub project\" defaultValue={newSubProject} onChange={(e)=>setNewSubProject(e.target.value)}/>\r\n                      </Form.Group>\r\n                    <Button variant=\"primary\" onClick={()=> addSubProjectHandler()}>Add</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n                <Table responsive className=\"align-items-center table-flush\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Sub Project Name</th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {(projectInfo && projectInfo.subProject) && projectInfo.subProject.map((project, i)=> (\r\n            <tr key={i}>\r\n            <td>{project}</td>\r\n            <td>\r\n              <Button variant=\"primary\" onClick={() => editSubProjectHandler(project)}>Edit</Button>\r\n                <Modal as={Modal.Dialog} centered show={showEditSubProjectDefault} onHide={handleEditSubProjectClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Sub Project</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditSubProjectClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form onSubmit={(e) => saveEditSubProjectHandler(e)}>\r\n                      <Form.Group id=\"firstName\" className = \"mb-3\">\r\n                        <Form.Label>Sub Project</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter sub project\" value = {editedSubProject} onChange={(e)=> setEditedSubProject(e.target.value)}/>\r\n                      </Form.Group>\r\n                    <Button variant=\"primary\" type='submit'>Save</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                    </td>\r\n            <td>\r\n                    <Button variant=\"danger\" onClick={() => deleteSubProjectHandler(project)}>Delete</Button>\r\n            </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n            </Tab.Pane>\r\n\r\n            {projectTeam &&\r\n            <>\r\n             \r\n            <Tab.Pane eventKey=\"team\" className=\"py-4 px-4\">\r\n            <Row className='pt-3 pb-3'>\r\n                <Col><h3>Team Members</h3></Col>\r\n                <Col className='d-flex justify-content-end'><Button variant=\"primary\" onClick={() => setShowDefault(true)}>Add New Team</Button>\r\n                <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Add Team Members</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form onSubmit={(e)=>addTeamHandler(e)}>\r\n                     \r\n                     <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select TeamLead</Form.Label>\r\n                       <Form.Select onChange={(e) => setSelectedTeamLead(e.target.value)} required>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          teamlead && teamlead.map((lead,i) => {\r\n                            if(lead.isAvailable){\r\n                            return <option key={i} value={lead.teamLeadId}>{lead.name}</option>\r\n                            }\r\n  })\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                    \r\n                    {<Form.Group className=\"mb-2\">\r\n                    <Form.Label>Select Consultants</Form.Label>\r\n                    <Select\r\n                        value={selectedConsultants}\r\n                        onChange={setSelectedConsultants}\r\n                        options={consultantArray}\r\n                        isMulti = {true}\r\n                      />\r\n                    </Form.Group>}\r\n                    <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Table responsive className=\"align-items-center table-flush\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Manager</th>\r\n            <th scope=\"col\">Team Lead</th>\r\n            <th scope=\"col\">Consultant</th>        \r\n             <th scope=\"col\"></th>\r\n            {/*<th scope=\"col\"></th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            projectTeam && projectTeam.teamData.map((team, i) => (\r\n              \r\n              \r\n                team.consultants.map(cons => {\r\n                    return (\r\n                    \r\n                    <tr key={i}>\r\n                    <td>{team.managerId && team.managerId.name}</td>\r\n                    <td>{cons.teamLeadId && cons.teamLeadId.userId.name}</td>\r\n                    <td>{cons.consultantId && cons.consultantId.userId.name}</td>\r\n                    <td>\r\n                    <Button variant=\"primary\" onClick={() =>editTeamFormHandler(team, cons.teamLeadId.userId.teamLeadId)}>Edit Team</Button>\r\n                      <Modal as={Modal.Dialog} centered show={showEditTeamDefault} onHide={handleEditTeamClose}>\r\n                      <Modal.Header>\r\n                        <Modal.Title className=\"h6\">Edit Team Members</Modal.Title>\r\n                        <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditTeamClose} />\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form onSubmit={(e)=>editTeamHandler(e)}>\r\n                     \r\n                    <Form.Group className=\"mb-2\">\r\n                      <Form.Label>Select TeamLead</Form.Label>\r\n                       <Form.Select onChange={(e) => setEditTeamLead(e.target.value)} required value={editTeamLead}>\r\n                        <option value=\"\">Select</option>\r\n                        {\r\n                          teamlead && teamlead.map((lead,i) => (\r\n                            <option key={i} value={lead.teamLeadId}>{lead.name}</option>\r\n                          ))\r\n                        }\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                    \r\n                    {<Form.Group className=\"mb-2\">\r\n                    <Form.Label>Select Consultants</Form.Label>\r\n                    <Select\r\n                        value={editConsultants}\r\n                        onChange={setEditConsultants}\r\n                        options={consultantArray}\r\n                        isMulti = {true}\r\n                      />\r\n                    </Form.Group>}\r\n                    <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n                  </Form>\r\n                      </Modal.Body>\r\n                    </Modal></td>\r\n                    {/* <td><Button variant=\"danger\" onClick = {()=>deleteTeamHandler(team._id)}>Delete</Button></td> */}\r\n                  </tr>)\r\n                  \r\n                  \r\n                })\r\n              \r\n\r\n               // {team.teamLeads.map((teamLead) =>{\r\n              //  team.consultants.map((cons) => (\r\n              //  <tr>\r\n              //     <td>{team.managerId.name}</td>\r\n                  \r\n              //   <td>{teamLead._id === cons.teamLeadId && teamLead.name}</td>\r\n              //   <td>{teamLead._id === cons.teamLeadId && cons.name}</td>\r\n              //   <td><Button variant=\"secondary\">Edit</Button></td>\r\n              //   <td><Button variant=\"danger\">Delete</Button></td>\r\n              //   </tr>\r\n              //   ))\r\n              //  } )\r\n\r\n            )\r\n            \r\n            \r\n         \r\n           )}\r\n        </tbody>\r\n      </Table>\r\n            </Tab.Pane></>\r\n  }\r\n          </Tab.Content>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Container>\r\n              </Col>\r\n          </Row>\r\n      </div>\r\n      \r\n      </>\r\n    )\r\n  \r\n}\r\n  \r\n\r\n  export default TeamMember\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\n// import ReactLogo from '../assets/img/technologies/react-logo-transparent.svg'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst NextFollowUp = ({history}) => {\r\n  var gapi = window.gapi\r\n\r\n  var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n  const [remainder, setRemainder] = useState(false) \r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"CPM\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n            axios.get(`/api/leads`)\r\n            .then(res => {\r\n                const today = new Date()\r\n                const lead = res.data.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  today.toISOString().split('T')[0]}});\r\n                setLeadData(lead)   \r\n                setLoading(false)                   \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n\r\n        const remainderHandler = () => {\r\n          // if(leadData && leadData.nextFollowUp){\r\n            gapi.load('client:auth2', () => {\r\n              console.log('loaded client')\r\n        \r\n              gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: DISCOVERY_DOCS,\r\n                scope: SCOPES,\r\n              })\r\n        \r\n              gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n        \r\n        \r\n              gapi.auth2.getAuthInstance().signIn()\r\n              .then(() => {\r\n                \r\n                \r\n                console.log(leadData)\r\n                var event = {\r\n                  'summary': leadData.customer,\r\n                  'location': '',\r\n                  'description': leadData.status,\r\n                  'start': {\r\n                    'dateTime': leadData.nextFollowUp,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'end': {\r\n                    'dateTime': `${leadData.nextFollowUp}`,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'recurrence': [\r\n                    'RRULE:FREQ=DAILY;COUNT=2'\r\n                  ],\r\n                  'attendees': [\r\n                    // {'email': 'lpage@example.com'},\r\n                    // {'email': 'sbrin@example.com'}\r\n                  ],\r\n                  'reminders': {\r\n                    'useDefault': false,\r\n                    'overrides': [\r\n                      {'method': 'email', 'minutes': 24 * 60},\r\n                      {'method': 'popup', 'minutes': 10}\r\n                    ]\r\n                  }\r\n                }\r\n              \r\n        \r\n                var request = gapi.client.calendar.events.insert({\r\n                  'calendarId': 'primary',\r\n                  'resource': event,\r\n                })\r\n        \r\n                request.execute(event => {\r\n                  console.log(event)\r\n                  window.open(event.htmlLink)\r\n                })\r\n                \r\n        \r\n                /*\r\n                    Uncomment the following block to get events\r\n                */\r\n                /*\r\n                // get events\r\n                gapi.client.calendar.events.list({\r\n                  'calendarId': 'primary',\r\n                  'timeMin': (new Date()).toISOString(),\r\n                  'showDeleted': false,\r\n                  'singleEvents': true,\r\n                  'maxResults': 10,\r\n                  'orderBy': 'startTime'\r\n                }).then(response => {\r\n                  const events = response.result.items\r\n                  console.log('EVENTS: ', events)\r\n                })\r\n                */\r\n            \r\n        \r\n              })\r\n            })\r\n          // }\r\n          setRemainder(true)\r\n        }\r\n\r\n        \r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      // {\r\n      //   dataField: \"\",\r\n      //   text: \"\",\r\n      //   formatter: (cell,row) => {\r\n      //     return (\r\n      //       <button className=\"btn btn-primary\" onClick={ ()=>remainderHandler(row) }>Remainder</button>\r\n      //     );\r\n      //   },\r\n\r\n      // },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextFollowUp\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect,  forwardRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { fetchConsultantLeadList } from '../actions/leadActions';\r\nimport {\r\n  Chart,\r\n  ArcElement,\r\n  LineElement,\r\n  BarElement,\r\n  PointElement,\r\n  BarController,\r\n  BubbleController,\r\n  DoughnutController,\r\n  LineController,\r\n  PieController,\r\n  PolarAreaController,\r\n  RadarController,\r\n  ScatterController,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  RadialLinearScale,\r\n  TimeScale,\r\n  TimeSeriesScale,\r\n  Decimation,\r\n  Filler,\r\n  Legend,\r\n  Title,\r\n  Tooltip\r\n} from 'chart.js'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { faCashRegister, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row } from '@themesberg/react-bootstrap';\r\nimport { CounterWidget } from \"../components/Widgets\";\r\n\r\nimport NextFollowUp from './NextFollowUp';\r\n\r\nconst CPManagerDashboard = ({history}) => {\r\n  var leadStatData = [], bookedData = [], lostLeadData = [], siteVisitData = []\r\n  var leadCount = 0, bookedCount = 0, lostLeadCount=0, siteVisitCount = 0\r\n\r\n  const d = new Date()\r\n\r\n  const monthArray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n  const [leadStats , setLeadStats] = useState([])\r\n  const [bookedStats , setBookedStats] = useState([])\r\n  const [bookedAvg , setBookedAvg] = useState(0)\r\n  const [thisMonthBooked , setThisMonthBooked] = useState(0)\r\n  const [lostLeadStats , setLostLeadStats] = useState([])\r\n  const [lostLeadAvg , setLostLeadAvg] = useState(0)\r\n  const [thisMonthLostLead , setThisMonthLostLead] = useState(0)\r\n  const [siteVisitStats , setSiteVisitStats] = useState([])\r\n  const [siteVisitAvg , setSiteVisitAvg] = useState(0)\r\n  const [thisMonthSiteVisit , setThisMonthSiteVisit] = useState(0)\r\n  const [totalLeads , setTotalLeads] = useState(0)\r\n  const [nextFollowUpCount, setNextFollowUpCount] = useState(0)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  const consultantLeadList = useSelector((state) => state.consultantLeadList)\r\n    const { loading, error, leadList:leadInfo } = consultantLeadList\r\n\r\n  useEffect(()=>{\r\n    if (user && user.role === 'CPM') {\r\n      dispatch(fetchConsultantLeadList(user.consultantId))\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(leadInfo){\r\n      setTotalLeads(leadInfo.length)\r\n      for (var i = 0; i <= d.getMonth(); i++) {\r\n        leadCount = 0\r\n        bookedCount = 0\r\n        lostLeadCount = 0\r\n        siteVisitCount = 0\r\n     leadInfo.forEach(lead=>{\r\n      \r\n\r\n      if (parseInt(lead.createdAt.split('-')[1]) - 1 === i && d.getFullYear() === parseInt(lead.createdAt.split('-')[0])) {\r\n        leadCount += 1\r\n        if(lead.status === \"Booked\"){\r\n          bookedCount += 1\r\n        }else if(lead.status === \"Lost\"){\r\n          lostLeadCount += 1\r\n        }else if (lead.status === \"Visited\"){\r\n          siteVisitCount += 1\r\n        }\r\n    }\r\n     })\r\n\r\n     console.log(leadInfo)\r\n\r\n     leadStatData.push(leadCount)\r\n     bookedData.push(bookedCount)\r\n     lostLeadData.push(lostLeadCount)\r\n     siteVisitData.push(siteVisitCount)\r\n     \r\n     \r\n    }\r\n    setLeadStats(leadStatData)\r\n    setBookedStats(bookedData)\r\n    setLostLeadStats(lostLeadData)\r\n    setSiteVisitStats(siteVisitData)\r\n    if(bookedData[d.getMonth()] === bookedData[d.getMonth()-1] || bookedData[d.getMonth()-1] === 0){\r\n      setBookedAvg(0)\r\n    }else{\r\n    setBookedAvg((bookedData[d.getMonth()]-bookedData[d.getMonth()-1])/bookedData[d.getMonth()-1])\r\n    }\r\n    setThisMonthBooked(bookedData[d.getMonth()])\r\n    if(lostLeadData[d.getMonth()]===lostLeadData[d.getMonth()-1] || lostLeadData[d.getMonth()-1] === 0){\r\n      setLostLeadAvg(0)\r\n    }else{\r\n    setLostLeadAvg((lostLeadData[d.getMonth()]-lostLeadData[d.getMonth()-1])/lostLeadData[d.getMonth()-1])\r\n    }\r\n    setThisMonthLostLead(lostLeadData[d.getMonth()])\r\n    if(siteVisitData[d.getMonth()] === siteVisitData[d.getMonth()-1] || siteVisitData[d.getMonth()-1]===0){\r\n      setSiteVisitAvg(0)\r\n    }else{\r\n    setSiteVisitAvg((siteVisitData[d.getMonth()]-siteVisitData[d.getMonth()-1])/siteVisitData[d.getMonth()-1])\r\n    }\r\n    setThisMonthSiteVisit(siteVisitData[d.getMonth()])\r\n    setNextFollowUpCount(leadInfo.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  d.toISOString().split('T')[0]}}).length)\r\n\r\n    }\r\n    \r\n  },[leadInfo])\r\n\r\n  \r\n\r\n  \r\n\r\n  Chart.register(\r\n    ArcElement,\r\n    LineElement,\r\n    BarElement,\r\n    PointElement,\r\n    BarController,\r\n    BubbleController,\r\n    DoughnutController,\r\n    LineController,\r\n    PieController,\r\n    PolarAreaController,\r\n    RadarController,\r\n    ScatterController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    TimeSeriesScale,\r\n    Decimation,\r\n    Filler,\r\n    Legend,\r\n    Title,\r\n    Tooltip\r\n    );\r\n\r\n    var data = {\r\n        labels: monthArray,\r\n        datasets: [\r\n            {\r\n                label: \"Leads\",\r\n                data: leadStats,\r\n                fill: true,\r\n                backgroundColor: \"#4A5073\",\r\n                // backgroundColor: [\r\n                //     'rgba(255, 99, 132, 1)',\r\n                //     'rgba(54, 162, 235, 1)',\r\n                //     'rgba(255, 206, 86, 1)',\r\n                //     'rgba(75, 192, 192, 1)',\r\n                //     'rgba(153, 102, 255, 1)',\r\n                //     'rgba(255, 159, 64, 1)',\r\n                // ],\r\n                // borderColor: \"#4A5073\"\r\n            },\r\n            {\r\n              label: \"Booked Leads\",\r\n              data: bookedStats,\r\n              fill: true,\r\n              backgroundColor: \"green\",\r\n              // backgroundColor: [\r\n              //     'rgba(255, 99, 132, 1)',\r\n              //     'rgba(54, 162, 235, 1)',\r\n              //     'rgba(255, 206, 86, 1)',\r\n              //     'rgba(75, 192, 192, 1)',\r\n              //     'rgba(153, 102, 255, 1)',\r\n              //     'rgba(255, 159, 64, 1)',\r\n              // ],\r\n              // borderColor: \"green\"\r\n          },\r\n          {\r\n            label: \"Lost Leads\",\r\n            data: lostLeadStats,\r\n            fill: true,\r\n            backgroundColor: \"red\",\r\n            // backgroundColor: [\r\n            //     'rgba(255, 99, 132, 1)',\r\n            //     'rgba(54, 162, 235, 1)',\r\n            //     'rgba(255, 206, 86, 1)',\r\n            //     'rgba(75, 192, 192, 1)',\r\n            //     'rgba(153, 102, 255, 1)',\r\n            //     'rgba(255, 159, 64, 1)',\r\n            // ],\r\n            // borderColor: \"red\"\r\n        },\r\n        {\r\n          label: \"Site Visit\",\r\n          data: siteVisitStats,\r\n          fill: true,\r\n          // lineTension: 0.1,\r\n          // pointBorderColor: '#111',\r\n          // pointBackgroundColor: '#ff4000',\r\n          // pointBorderWidth: 2,\r\n          backgroundColor: \"yellow\",\r\n          // backgroundColor: [\r\n          //     'rgba(255, 99, 132, 1)',\r\n          //     'rgba(54, 162, 235, 1)',\r\n          //     'rgba(255, 206, 86, 1)',\r\n          //     'rgba(75, 192, 192, 1)',\r\n          //     'rgba(153, 102, 255, 1)',\r\n          //     'rgba(255, 159, 64, 1)',\r\n          // ],\r\n          // borderColor: \"yellow\"\r\n      }\r\n\r\n        ]\r\n    };\r\n\r\n    const data1 = {\r\n      labels: ['Booked Leads', 'Lost Leads', 'Site Visit'],\r\n      datasets: [\r\n        {\r\n          label: 'Lead Statistics',\r\n          data: [thisMonthBooked, thisMonthLostLead, thisMonthSiteVisit],\r\n          backgroundColor: [\r\n            'rgba(0,128,0 , 0.2)',\r\n            'rgba(255, 0, 0, 0.2)',\r\n            'rgba(255, 255, 0, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(0,128,0 , 1)',\r\n            'rgba(255, 0, 0, 1)',\r\n            'rgba(255, 255, 0, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n    const options = {\r\n      responsive: true,\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"left\"\r\n        }]\r\n      }\r\n    };\r\n\r\n    const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n \r\n  const nextFollowUpHandler = () => {\r\n    history.push('/manager/nextfollowup')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-md-center mt-5\">\r\n        {/* <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Total Leads\"\r\n            value={totalLeads}\r\n            percentage={10.57}\r\n            leadStats = {leadStats}\r\n          />\r\n        </Col> */}\r\n        {/* <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Booked Leads\"\r\n            value={thisMonthBooked}\r\n            percentage={bookedAvg}\r\n          />\r\n        </Col> */}\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n        <div onClick={()=>nextFollowUpHandler()} style={{cursor: \"pointer\"}}>\r\n          <CounterWidget\r\n            category=\"Next Follow Up\"\r\n            title={nextFollowUpCount}\r\n            period=\"today\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"         \r\n          /></div>\r\n        </Col>\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Booked Leads\"\r\n            title={thisMonthBooked +`/${user && user.setMilestone.bookings}`}\r\n            period=\"monthly\"\r\n            percentage={bookedAvg}\r\n            icon={faChartLine}\r\n            iconColor=\"shape-secondary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Site Visited\"\r\n            title={thisMonthSiteVisit +`/${user && user.setMilestone.siteVisits}`}\r\n            period=\"monthly\"\r\n            percentage={siteVisitAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Lost Leads\"\r\n            title={thisMonthLostLead +`/${user && user.setMilestone.leads}`}\r\n            period=\"monthly\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n\r\n        \r\n      </Row>\r\n      <Row className=\"p-5\">\r\n        <Col md={8}>\r\n        {(leadStats && leadStats.length>0) && <Bar data={data}  />}\r\n        </Col>\r\n        <Col md={4}>\r\n        <Doughnut data={data1} />\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n          <h2>Next Follow Up</h2>\r\n              <NextFollowUp/>\r\n          </Col>\r\n          </Row>\r\n\r\n          {/* <Row>\r\n          <Col xs={12}>\r\n              <LeadStatsTable bookedStats={bookedStats} lostLeadStats={lostLeadStats} siteVisitStats={siteVisitStats} monthArray={monthArray}/>\r\n          </Col>\r\n          </Row> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CPManagerDashboard","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Image, Alert} from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst Leads = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"CPM\") {\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n         useEffect(() => {\r\n           setTimeout(()=>{\r\n            const config = {\r\n              headers: {\r\n                Authorization: `Bearer ${user.token}`,\r\n              },\r\n            } \r\n\r\n            axios.get(`/api/cpm/lead/list`, config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList;\r\n                setLeadData(lead)\r\n                setLoading(false)                     \r\n            }).catch(function (error) {\r\n              // handle error\r\n              setError(true)\r\n            })\r\n          }, 3000)\r\n          \r\n\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/manager/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        csvExport: false,\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n        filter: textFilter(),\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        csvExport: false,\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    A simple primary alert — check it out!\r\n  </Alert>)\r\n  :  (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Leads\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { managerList, teamLeadList, asmList, consultantsUnderManager } from \"./../actions/userActions\";\r\nimport { addLeadData} from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nexport default ({history}) => {\r\n    const [lead, setLead] = useState({})\r\n    const [createdUser, setCreatedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [assignedUser, setAssignedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    // var [projectData, setProjectData] = useState({\r\n    //   mainProject: \"\",\r\n    //   subporject: \"\",\r\n    //   projectId: \"\"\r\n    // })\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    const [booked, setBooked] = useState(false)\r\n    // const [payment, setPayment] = useState({\r\n    //   firstInstallment: 0,\r\n    //   secondInstallment: 0,\r\n    //   thirdInstallment: 0\r\n    // })\r\n    var [firstInstallment, setFirstIntallment] = useState(0)\r\n    var [secondInstallment, setSecondIntallment] = useState(0) \r\n    var [thirdInstallment, setThirdIntallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [teamLead, setTeamLead] = useState('')\r\n    const [index, setIndex] = useState(0);\r\n    const [manager, setManager] = useState('');\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addLead = useSelector((state) => state.addLead)\r\n    const { loading, error, leadInfo } = addLead\r\n\r\n    const fetchProjects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = fetchProjects\r\n\r\n\r\n\r\n    // const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    // const { loading: loadingManager, error: errorManager, managers: managersList } = fetchManagers\r\n\r\n    const fetchConsultantsUnderManager = useSelector((state) => state.fetchConsultantsUnderManager)\r\n    const { consultantsList } = fetchConsultantsUnderManager\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n    useEffect(()=>{\r\n      if (user && user.role === 'CPM') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantsUnderManager(user._id))\r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      if(projectInfo){\r\n        setMainProject(projectInfo[0].mainProject)\r\n        setProjectId(projectInfo[0].projectId)\r\n        setSubProject(projectInfo[0].subProject[0])\r\n        setStatus('Yet to Visit')\r\n        setLeadType('Hot')\r\n      }\r\n    }, [dispatch, projectInfo])\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()  \r\n      setLead(\r\n        lead.createdUser = createdUser, \r\n        lead.assignedConsultant = assignedUser,\r\n        lead.consultantName= consultant,\r\n        lead.enquiryDate= enquiryDate,\r\n        lead.customerName= customer,\r\n        lead.contactNumber= contactNumber,\r\n        lead.alternateNumber= alternateNumber,\r\n        lead.project ={\r\n          mainProject: mainProject,\r\n          subProject: subProject,\r\n          projectId: projectId\r\n        },\r\n        lead.leadScore= leadScore,\r\n        lead.leadType= leadType,\r\n        lead.status= status,\r\n        lead.remarks= remarks,\r\n        lead.nextFollowUp= nextFollow,\r\n        lead.managerRemarks= managerRemarks,\r\n        lead.booked= booked,\r\n        lead.payment = {\r\n          firstInstallment: firstInstallment,\r\n          secondInstallment: secondInstallment,\r\n          thirdInstallment: thirdInstallment,\r\n        },\r\n        lead.totalSqft= totalSqft\r\n        )\r\n      dispatch(addLeadData(lead))\r\n      history.push('/leads')\r\n  }\r\n\r\n  console.log(assignedUser)\r\n\r\n    useEffect(()=> {\r\n      if(projectInfo)\r\n      {const i = projectInfo.findIndex((element,i) => {\r\n        if (element.mainProject === mainProject){\r\n          // console.log(i)\r\n          setProjectId(element._id)\r\n        return true\r\n        }\r\n      })\r\n      setIndex(i)}\r\n   }, [mainProject])\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e) =>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" value={enquiryDate} onChange={(e) => setEnquiryDate(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={contactNumber} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Main Project\" value={mainProject}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                  <Form.Label>Sub Project</Form.Label>\r\n                  <Form.Select required defaultValue={subProject? subProject : 'Not Found'} onChange={(e) => setSubProject(e.target.value)}>\r\n                    <option key={2001} value=''>Select</option>\r\n                  {\r\n                      projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                  </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>Lead Type</Form.Label>\r\n                <Form.Select required value={leadType} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Select required value={status} onChange={(e) => setStatus(e.target.value)}>\r\n                  <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                  <option value=\"Visited\">Visited</option>\r\n                  <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                  <option value=\"Detail Shared\">Detail Shared</option>\r\n                  <option value=\"Not Interested\">Not Interested</option>\r\n                  <option value=\"RFR\">RFR</option>\r\n                  <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" value={nextFollow} min={enquiryDate} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n                                 \r\n         </Row>\r\n\r\n         <Row>\r\n\r\n        \r\n            \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                      \r\n         </Row>\r\n\r\n          <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstIntallment(e.target.value && (firstInstallment = parseInt(e.target.value)))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondIntallment(secondInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdIntallment(thirdInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Add Lead & Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n   )}\r\n   </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst LostLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          }\r\n            axios.get(`/api/leads/manager`, config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList.filter(lead => lead.status === \"Lost\" );\r\n                setLeadData(lead) \r\n                setLoading(false)                    \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LostLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst SiteVisitsLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          }\r\n\r\n            axios.get(`/api/leads/manager`, config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList;\r\n                setLeadData(lead.filter(lead => lead.status === \"Visited\" ))                     \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteVisitsLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport axios from 'axios';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\n\r\nimport { addLeadData, fetchleadDetails} from '../actions/leadActions';\r\nimport { fetchCancelLeadList, deleteCancelledLead } from '../actions/cancellationLeadActions';\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\n\r\nconst CancelledLeads = ({history}) => {\r\n\r\n    // var element = document.getElementsByTagName(\"table\");\r\n    // element.classList.add(\"table-dark\");\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    // useEffect(() => {\r\n    //   dispatch(fetchLeadList())\r\n    // }, [])\r\n  \r\n    // const leadList = useSelector((state) => state.leadList)\r\n    //   const { loading, error, leadInfo } = leadList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Manager\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    const selectOptions = {\r\n      0: 'Hot',\r\n      1: 'Warm',\r\n      2: 'Cold'\r\n    };\r\n  \r\n    const selectOptions2 = {\r\n      0: 'Yet to Visit',\r\n      1: 'Visited',\r\n      2: 'Visit Confirmed',\r\n      3: 'Detail Shared',\r\n      4: 'Lost',\r\n      5: 'Booked'\r\n    };\r\n  \r\n    const [leadData, setLeadData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n  \r\n           useEffect(() => {\r\n             setTimeout(()=>{\r\n              axios.get(`/api/cancelledleads`)\r\n              .then(res => {\r\n                  const lead = res.data;\r\n                  setLeadData(lead)\r\n                  setLoading(false)                     \r\n              })\r\n            }, 3000)\r\n            \r\n  \r\n           }, [])\r\n  \r\n           useEffect(() => {\r\n             console.log(leadData)\r\n           }, [leadData])\r\n  \r\n          // const retriveHandler = (lead) => {\r\n          //   const \r\n          //       userInfo\r\n          //      = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxNjU0ODFhMjVkMjk3MWE5NDU3OWUxNyIsImlhdCI6MTYzNDUyOTE3MSwiZXhwIjoxNjM0NjE1NTcxfQ.zWvQzJ1yMehQxu0JB3V_5RMlpLKhtHPmExGsGl-hN-Y\"\r\n               \r\n        \r\n          \r\n          //     const config = {\r\n          //       headers: {\r\n          //         'Content-Type': 'application/json',\r\n          //         Authorization: `Bearer ${userInfo}`,\r\n          //       },\r\n          //     }\r\n\r\n          //   axios.post(`/api/leads`,leadData,\r\n          //   config)\r\n          //   axios.delete(`/api/cancelledleads/${lead._id}`, config) \r\n          //   .then(res => {\r\n          //       history.go(0)            \r\n          //   })             \r\n          // }\r\n\r\n          const retriveHandler = (row) => {\r\n            dispatch(addLeadData(row))\r\n            dispatch(deleteCancelledLead(row._id))\r\n            history.go(0)\r\n          }\r\n\r\n          const editTableHandler = (lead) => {\r\n            history.push(`/cancelledleads/${lead._id}/edit`)\r\n          }\r\n         \r\n  \r\n          const { ExportCSVButton } = CSVExport;\r\n  \r\n      const columns = [\r\n        {\r\n          dataField: \"leadData\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, leadData) => {\r\n            console.log(row, index)\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customerName\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n            return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          },\r\n          filter: dateFilter({\r\n            defaultValue: {comparator: Comparator.GT }\r\n          })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"consultantName\",\r\n          text: \"Consultant\",\r\n          sort: true,\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"project.mainProject\",\r\n          text: \"Main Project\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Sub Project\",\r\n          filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n          filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollowUp\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (nextFollowUp) => {\r\n            return new Date(`${nextFollowUp}`).toISOString().split('T')[0]\r\n          },\r\n          filter: dateFilter({\r\n            defaultValue: {comparator: Comparator.GT }\r\n          })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n          filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          formatter: (cell,row) => {\r\n            return (\r\n              // <button className=\"btn btn-primary\" onClick={ ()=>retriveHandler(row) }>Retrive</button>\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n  \r\n  \r\n  \r\n  \r\n  \r\n    return (\r\n      <>\r\n      {loading? (\r\n        <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n        <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n        </div>\r\n      ) : (\r\n      <div>\r\n        <ToolkitProvider\r\n          keyField=\"_id\"\r\n          data={ leadData }\r\n          columns={ columns }\r\n          exportCSV\r\n        >\r\n          {\r\n            props => (\r\n              <div>\r\n                <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                <hr />\r\n                {/* <BootstrapTable { ...props.baseProps } /> */}\r\n                <BootstrapTable\r\n                     { ...props.baseProps }\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                  />\r\n                    \r\n              </div>\r\n            )\r\n          }\r\n        </ToolkitProvider>\r\n      </div>\r\n      )}\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default CancelledLeads\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const TotalLeads = () => {\r\n//     const [email, setEmail] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n//     const [leadData, setLeadData] = useState({})\r\n//     const [leadType, setLeadType] = useState('')\r\n//     const [status, setStatus] = useState('')\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     // const userLogin = useSelector((state) => state.userLogin)\r\n//     // const {userInfo: user } = userLogin\r\n\r\n//     const cancelLeadList = useSelector((state) => state.cancelLeadList)\r\n//     const { loading, error, cancelLeadInfo } = cancelLeadList\r\n\r\n//     const leadDetails = useSelector((state) => state.leadDetails)\r\n//     const { loading: loadingLead, error: errorLead, leadInfo: leadInfoLead } = leadDetails\r\n\r\n\r\n\r\n//     useEffect(() => {\r\n//         dispatch(fetchCancelLeadList())\r\n//     }, [])\r\n\r\n\r\n\r\n\r\n//     const updateHandler = (e, lead) => {\r\n//         console.log(e.target.value)\r\n//         e.preventDefault()\r\n//         if(e.target.value){\r\n//         dispatch(addLeadData(lead))\r\n//         dispatch(deleteCancelledLead(lead._id))\r\n//         setTimeout(() => {\r\n//             dispatch(fetchCancelLeadList())\r\n//             }, 1000)\r\n//         console.log(lead)\r\n//         }       \r\n//     }\r\n    \r\n//     return (\r\n//         <div>\r\n//             { loading ? <Preloader /> : (\r\n//                 <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n//                 <Card.Body className=\"pt-0\">\r\n//                 <Table hover className=\"user-table align-items-center\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th className=\"border-bottom\">Serial No.</th>\r\n//                         <th className=\"border-bottom\">Enquiry date</th>\r\n//                         <th className=\"border-bottom\">Customer</th>\r\n//                         <th className=\"border-bottom\">Contact</th>\r\n//                         <th className=\"border-bottom\">Project</th> \r\n//                         <th className=\"border-bottom\">Lead Score</th>\r\n//                         <th className=\"border-bottom\">Lead Type</th>\r\n//                         <th className=\"border-bottom\">Status</th>\r\n//                         <th className=\"border-bottom\">Remarks</th>\r\n//                         <th className=\"border-bottom\">Next Follow Up</th>            \r\n//                         <th className=\"border-bottom\">Manager Remarks</th>                       \r\n//                         <th className=\"border-bottom\">Cancellation</th> \r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {cancelLeadInfo && cancelLeadInfo.map((lead, i) => \r\n//                     <tr key={i}>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {i+1}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {new Date(`${lead.enquiryDate}`).toISOString().split('T')[0]}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.customer}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.contactNumber}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.project.subProject}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.leadScore}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.leadType}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                             {lead.status}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.remarks}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {new Date(`${lead.nextFollow}`).toISOString().split('T')[0]}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.managerRemarks}\r\n//                         </span>\r\n//                     </td>\r\n//                     {/* <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.firstInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.secondInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.payment.thirdInstallment? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {lead.totalSqft ? lead.payment.firstInstallment : 0}\r\n//                         </span>\r\n//                     </td>\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                         {(lead.payment.firstInstallment) + (lead.payment.secondInstallment) + (lead.payment.thirdInstallment) }\r\n//                         </span>\r\n//                     </td> */}\r\n//                     <td>\r\n//                         <span className=\"fw-normal\">\r\n//                             <select defaultValue={!lead.cancellation} onChange={(e) => updateHandler(e, lead)}>\r\n//                                 <option value={false}>Cancelled</option>\r\n//                                 <option value={true}>Not Cancel</option>\r\n//                             </select>\r\n//                         </span>\r\n//                     </td>\r\n//                     {/* <td>\r\n//                         <Dropdown as={ButtonGroup}>\r\n//                         <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n//                             <span className=\"icon icon-sm\">\r\n//                             <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n//                             </span>\r\n//                         </Dropdown.Toggle>\r\n//                         <Dropdown.Menu>\r\n//                             <Dropdown.Item>\r\n//                             <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item><Link to={`/leads/${lead._id}/edit`}>\r\n//                                 <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit</Link>\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item className=\"text-danger\">\r\n//                             <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n//                             </Dropdown.Item>\r\n//                         </Dropdown.Menu>\r\n//                         </Dropdown>\r\n//                     </td> */}\r\n//                     </tr>\r\n//                     )}\r\n//                     </tbody>\r\n//                 </Table>\r\n//                 <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n//                     <Nav>\r\n//                     <Pagination className=\"mb-2 mb-lg-0\">\r\n//                         <Pagination.Prev>\r\n//                         Previous\r\n//                         </Pagination.Prev>\r\n//                         <Pagination.Item active>1</Pagination.Item>\r\n//                         <Pagination.Item>2</Pagination.Item>\r\n//                         <Pagination.Item>3</Pagination.Item>\r\n//                         <Pagination.Item>4</Pagination.Item>\r\n//                         <Pagination.Item>5</Pagination.Item>\r\n//                         <Pagination.Next>\r\n//                         Next\r\n//                         </Pagination.Next>\r\n//                     </Pagination>\r\n//                     </Nav>\r\n//                     {/* <small className=\"fw-bold\">\r\n//                     Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n//                     </small> */}\r\n//                 </Card.Footer>\r\n//                 </Card.Body>\r\n//             </Card>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default TotalLeads\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport {activityLogData} from '../actions/activityLogActions'\r\n\r\n// delete lead -> null remaining\r\n\r\nconst ActivityLog = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const activityLogDetail = useSelector((state) => state.activityLogDetail)\r\n    const { loading , error, activityLog } = activityLogDetail\r\n\r\n  useEffect(()=>{\r\n    if(userInfo && userInfo.role === \"CPM\"){\r\n    dispatch(activityLogData(userInfo._id))\r\n    \r\n    }else{\r\n      history.push(`/login`)\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(activityLog && activityLog.activityLogData && activityLog.activityLogData.length>0){\r\n      setName(activityLog.activityLogData[0].member.name.charAt(0).toUpperCase()+activityLog.activityLogData[0].member.name.slice(1))\r\n    }\r\n  },[activityLog])\r\n\r\n  const leadHandler = (activity) => {\r\n    history.push(`/leads/${activity.leadId._id}/edit`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) : activityLog && activityLog.activityLogData.length > 0 ?(\r\n      <>\r\n      <h3 className='mb-3'>{activityLog && activityLog.activityLogData && (name + ' - ' +(activityLog.activityLogData[0].member.role)+'') }</h3>\r\n    <Row className=\"\">\r\n      <Col xs={12} sm={6} xl={8} className=\"mb-4 d-sm-block\">\r\n    <div className=''>\r\n      {(activityLog && activityLog.activityLogData) && activityLog.activityLogData.map((activity, i) => (\r\n      <Card className='px-3 py-3 mb-2 d-flex justify-content-between align-items-center flex-row' key={i}>\r\n        <div>\r\n        <a className={`mb-3 action-text ${activity.leadId === null ? 'deleted-lead':'' }`} onClick={()=>leadHandler(activity)} > {name} {activity.action}</a>\r\n        </div>\r\n        <div className='me-0 mt-2'>\r\n        {/* <p className='mb-1'>{new Date(activity.createdAt).toDateString()}</p> */}\r\n        <p className='mb-1' style={{\"color\":\"#69acbf\"}}>  <TimeAgo date={new Date(activity.createdAt)} /> </p>\r\n        </div>\r\n      </Card>\r\n      ))\r\n  }\r\n  </div>\r\n  </Col>\r\n  \r\n      <Col xs={12} sm={6} xl={4} className=\"mb-4 d-sm-block\">\r\n      <CounterWidget\r\n            category=\"Booked\"\r\n            title={40}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n          <br/>\r\n\r\n      <CounterWidget\r\n            category=\"Site Visit\"\r\n            title={80}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n<br/>\r\n      <CounterWidget\r\n            category=\"Leads\"\r\n            title={160}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n      </Col>\r\n      </Row>\r\n    </>\r\n  ):(\r\n    <div className='p-5 d-flex justify-content-center align-items-center'>\r\n      <h1>\"No Activity\"</h1>\r\n    </div>\r\n  )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ActivityLog","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup, Modal, Form } from '@themesberg/react-bootstrap';\r\n// import { Form } from 'react-bootstrap';\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport { activityLogData } from '../actions/activityLogActions'\r\nimport { deleteTask, fetchIndividualTasks } from '../actions/taskManagerActions';\r\nimport { fetchUserList } from '../actions//userActions'\r\nimport { addTask, updateTask } from '../actions/taskManagerActions';\r\nimport { UPDATE_TASK_RESET, DELETE_TASK_RESET } from '../constants/taskManagerContants';\r\n\r\n\r\n// delete lead -> null remaining\r\n\r\nconst TaskManager = ({ history, match }) => {\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showEditDefault, setShowEditDefault] = useState(false);\r\n    const [task, setTask] = useState('')\r\n    const [dueDate, setDueDate] = useState('')\r\n    const [assignTo, setAssignTo] = useState('')\r\n    const [note, setNote] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [editedTask, setEditedTask] = useState('')\r\n    const [previousTask, setPreviousTask] = useState('')\r\n    const [editedDueDate, setEditedDueDate] = useState('')\r\n    const [editedAssignTo, setEditedAssignTo] = useState('')\r\n    const [editedNote, setEditedNote] = useState('')\r\n    const [editedStatus, setEditedStatus] = useState('')\r\n    \r\n\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n\r\n    const handleEditClose = () => setShowEditDefault(false);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const fetchUserTasks = useSelector((state) => state.fetchIndividualTasks)\r\n    const { loading, error, taskList } = fetchUserTasks\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { users } = userList\r\n\r\n    const addTaskData = useSelector((state) => state.addTask)\r\n    const { loading: taskLoading, error: taskError, addedTask } = addTaskData\r\n\r\n    const updateTaskData = useSelector((state) => state.updateTask)\r\n    const { success } = updateTaskData\r\n\r\n    const deleteTaskData = useSelector((state) => state.deleteTask)\r\n    const { success: deleteSuccess } = deleteTaskData\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.role === \"CPM\") {\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n            dispatch(fetchUserList())\r\n        } else {\r\n            history.push(`/login`)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(success) {\r\n            dispatch({\r\n                type: UPDATE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    },[success])\r\n\r\n    useEffect(()=>{\r\n        if(deleteSuccess) {\r\n            dispatch({\r\n                type: DELETE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    }, [deleteSuccess])\r\n\r\n    const addtaskHandler = (e) => {\r\n        e.preventDefault()\r\n       \r\n        dispatch(addTask({\r\n            task,\r\n            member: userInfo._id,\r\n            dueDate,\r\n            note,\r\n            assignTo : assignTo? assignTo: userInfo._id\r\n        }))\r\n\r\n        setShowDefault(false)\r\n        dispatch(fetchIndividualTasks(userInfo._id))\r\n        setAssignTo('')\r\n        setDueDate('')\r\n        setNote('')\r\n        setStatus('')\r\n        setTask('')\r\n        \r\n    }\r\n\r\n    const taskStatusHandler = (e, task) => {\r\n      \r\n        if(task.status === 'Pending'){\r\n            task.status = 'Completed'\r\n        }else{\r\n            task.status ='Pending'\r\n        }\r\n\r\n        dispatch(updateTask(task))\r\n    }\r\n\r\n    const deleteTaskHandler = (e, task) => {\r\n        dispatch(deleteTask(task._id))\r\n    }\r\n\r\n\r\n    const editTaskHandler = (e,task) => {\r\n        e.preventDefault()\r\n        setPreviousTask(task)\r\n        setShowEditDefault(true)\r\n\r\n        setEditedTask(task.task)\r\n        setEditedDueDate(task.dueDate)\r\n        setEditedNote(task.note)\r\n        setEditedAssignTo(task.assignTo)\r\n    }\r\n\r\n    const saveEditedTaskHandler = (e, task) => {\r\n        e.preventDefault()\r\n        dispatch(updateTask({\r\n            _id : previousTask._id,\r\n            task : editedTask,\r\n            note: editedNote,\r\n            status : editedStatus,\r\n            member: userInfo._id,\r\n            assignTo: editedAssignTo,\r\n            dueDate: editedDueDate\r\n        }))\r\n\r\n\r\n        setShowEditDefault(false)\r\n        setEditedAssignTo('')\r\n        setEditedDueDate('')\r\n        setEditedNote('')\r\n        setEditedStatus('')\r\n        setEditedTask('')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<Preloader />) : error ? (<Alert>{error}</Alert>) : true ? (\r\n                <>\r\n                    <Row className='pt-3 pb-3'>\r\n                        <Col>\r\n                        {/* <a href=\"#\" className='btn btn-primary'>Add New Task</a> */}\r\n                        <Button variant=\"primary\" className=\"my-3\" onClick={() => setShowDefault(true)}>Add New Task</Button>\r\n                        <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                            <Modal.Header>\r\n                            <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                            <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form className='p-3' onSubmit={(e)=>addtaskHandler(e)}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Task</Form.Label>\r\n                                <Form.Control required  type=\"text\" onChange={(e) => setTask(e.target.value)}/>\r\n                                {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                 </Form.Group>\r\n                                 <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                    <Form.Label>Due time</Form.Label>\r\n                                    <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" defaultValue={dueDate}  onChange={(e) => {setDueDate(e.target.value)}}/>\r\n                                </Form.Group>\r\n                                    \r\n\r\n                                    {/* <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                        <Form.Label>Assign to</Form.Label>\r\n                                        <Form.Select value={assignTo || ''} onChange={(e) => setAssignTo(e.target.value)}>\r\n                                        <option value=\" \">Select</option>\r\n                                        \r\n                                        {users && users.map((user, i) => (\r\n                                            \r\n                                        (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                            \r\n                                        ))}\r\n                                        </Form.Select>\r\n                                    </Form.Group> */}\r\n\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Note</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" onChange={(e) => setNote(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <button className=\"btn btn-primary\" type='submit'>Add Task</button>\r\n                            </Form>\r\n                                </Modal.Body>\r\n                                {/* <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    I Got It\r\n                                </Button>\r\n                                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                </Modal.Footer> */}\r\n                            </Modal>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        {(taskList && taskList.length>0)? taskList.map((task, i)=>(\r\n                        <Col xs={12} sm={12} xl={12} className=\"mb-4 d-sm-block\" key={i}>\r\n                            <div className=\"hover-state rounded-0 rounded-top py-3 card border-bottom\">\r\n                                <div className=\"d-sm-flex align-items-center flex-wrap flex-lg-nowrap py-0 card-body\">\r\n                                    <div className=\"text-left text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check me-sm-2\">\r\n                                            <input type=\"checkbox\" id=\"task-584be4d2-bec0-4fb1-80b1-690358ca4809\" className=\"form-check-input\"\r\n                                                value=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"px-0 mb-4 mb-md-0 col-lg-9 col-9\">\r\n                                        <div className=\"mb-2\">\r\n                                            <h5 className=\"\">{task.task}</h5>\r\n                                            <div className=\"d-block d-sm-flex\">\r\n                                                <div>\r\n                                                    <h6 className=\"fw-normal text-gray mb-3 mb-sm-0\"><svg width={15} xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                        className=\"icon icon-xxs text-gray-500 me-2\">\r\n                                                        <path fillRule=\"evenodd\"\r\n                                                            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\r\n                                                            clipRule=\"evenodd\"></path>\r\n                                                    </svg> {new Date(task.dueDate).toLocaleDateString() + ` (` + new Date(task.dueDate).toLocaleTimeString() + `)`}</h6>\r\n                                                </div>\r\n                                                <div className=\"ms-sm-3\" onClick={(e) => taskStatusHandler(e, task)} style={{cursor: 'pointer'}}>\r\n                                                    {task.status === 'Pending'? <span className=\"super-badge badge bg-warning\">In Progress</span> : <span className=\"super-badge badge bg-success\">Completed</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"fw-bold text-dark card-link\">\r\n                                                <span className=\"fw-normal text-gray \">{task.note && task.note}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fas fa-edit\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> editTaskHandler(e,task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fa fa-trash red\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> deleteTaskHandler(e, task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    \r\n                                    <div\r\n                                        className=\"d-none d-lg-block d-xl-inline-flex align-items-center ms-lg-auto text-right justify-content-center px-md-0 col-xl-1 col-lg-1 col-sm-1 col-10\">\r\n                                        <div className=\"d-flex justify-content-end dropdown\">\r\n                                            <button id=\"react-aria8234133146-25\" aria-expanded=\"false\" type=\"button\"\r\n                                                className=\"text-dark dropdown-toggle-split m-0 p-0 dropdown-toggle btn btn-link\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                    className=\"icon icon-xs icon-dark\">\r\n                                                    <path\r\n                                                        d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Modal as={Modal.Dialog} centered show={showEditDefault} onHide={handleEditClose}>\r\n                                    <Modal.Header>\r\n                                    <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                                    <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditClose} />\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form className='p-3' onSubmit={(e)=>saveEditedTaskHandler(e, task)}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control required  type=\"text\"  value={editedTask} onChange={(e)=> setEditedTask(e.target.value)}/>\r\n                                        {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                            <Form.Label>Due time</Form.Label>\r\n                                            <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" value={editedDueDate.split('.')[0]}  onChange={(e) => {setEditedDueDate(e.target.value)}}/>\r\n                                        </Form.Group>\r\n                                            \r\n\r\n                                            {/* <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Assign to</Form.Label>\r\n                                                <Form.Select value={editedAssignTo} onChange={(e) => setEditedAssignTo(e.target.value)}>\r\n                                                <option value=\" \">Select</option>\r\n                                                \r\n                                                {users && users.map((user, i) => (\r\n                                                    \r\n                                                (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                                    \r\n                                                ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group> */}\r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Status</Form.Label>\r\n                                                <Form.Select value={editedStatus} onChange={(e) => setEditedStatus(e.target.value)}>\r\n                                                <option value=\"Pending\">In Progress</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Note</Form.Label>\r\n                                                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" value={editedNote} onChange={(e) => setEditedNote(e.target.value)}/>\r\n                                            </Form.Group>\r\n                                            <button className=\"btn btn-primary\" type='submit'>Save Task</button>\r\n                                    </Form>\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            I Got It\r\n                                        </Button>\r\n                                        <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        </Modal.Footer> */}\r\n                                    </Modal>\r\n\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        )): (\r\n                            <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                                <h1>\"No Task\"</h1>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                    <h1>\"No Task\"</h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskManager","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CSVReader from 'react-csv-reader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Button, Image, Alert } from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport template from \"../assets/files/Bulk_upload_sheet.csv\"\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport Preloader from '../components/Preloader';\r\n\r\nimport { addBulkLeadData, assignBulkLead, getBulkLeadList, editBulkLeadData } from '../actions/bulkLeadActions';\r\n\r\n\r\nconst UploadLeads = ({history}) => {\r\n    const [leadData, setLeadData] = useState([])\r\n    const [leadList, setLeadList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const getBulkLead = useSelector((state) => state.getBulkLead)\r\n    const {leadList: leads } = getBulkLead\r\n\r\n    // const getBulkLead = useSelector((state) => state.getBulkLead)\r\n    // const {leadList: leads } = getBulkLead\r\n\r\n\r\n    useEffect(()=>{\r\n      if (userInfo && userInfo.role === \"Manager\") {\r\n        dispatch(getBulkLeadList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [userInfo, history])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      setTimeout(()=>{\r\n       axios.get(`/api/bulkLead`, config)\r\n       .then(res => {\r\n           const lead = res.data;\r\n           setLeadData(lead.bulkLeadList)\r\n           setLoading(false)                     \r\n       }).catch(function (error) {\r\n         // handle error\r\n         setLoading(false)\r\n         setError(error)\r\n       })\r\n     }, 3000)\r\n     \r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n     \r\n      if(leadList && leadList.length>0){\r\n        var b = []\r\n        for(var i=1; i< leadList.length-1; i++){\r\n          const a = {\r\n              \"serial\": i,\r\n              \"customerName\" : leadList[i][0],\r\n              \"enquiryDate\" : leadList[i][1]? `${leadList[i][1]}T00:00:00.000Z` : '',\r\n              \"contactNumber\": leadList[i][2],\r\n              \"project\": {\r\n                  \"mainProject\": leadList[i][3],\r\n                  \"subProject\": leadList[i][4]\r\n              },\r\n              \"leadScore\": leadList[i][5],\r\n              \"leadType\": leadList[i][6],\r\n              \"status\": leadList[i][7],\r\n              \"remarks\": leadList[i][8],\r\n              \"nextFollow\": leadList[i][9]?`${leadList[i][9]}T00:00:00.000Z`:'',\r\n              \"managerRemarks\": leadList[i][10],\r\n              \"payment\":{\r\n                  \"firstInstallment\" : 0,\r\n                  \"secondInstallment\" : 0,\r\n                  \"thirdInstallment\" : 0\r\n              },\r\n              \"cancellation\":false,\r\n              \"totalSqft\" : 0,\r\n              \"createdUser\": userInfo._id,\r\n              \"assignedUser\":\"\"\r\n          }\r\n  \r\n          b.push(a)\r\n          \r\n          }\r\n          if(leadData.length > 0){\r\n          setLeadData([...leadData, ...b])\r\n          }else{\r\n            setLeadData(b)\r\n          }\r\n  \r\n        dispatch(addBulkLeadData(b))\r\n      }\r\n    },[leadList])\r\n\r\n\r\n    const assignHandler = (e) => {\r\n      dispatch(assignBulkLead(leads))\r\n\r\n    }\r\n\r\n    const editTableHandler = (lead) => {\r\n        dispatch(editBulkLeadData(lead))\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"serial\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, leadData) => {\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customerName\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n              if(enquiryDate){\r\n            return enquiryDate && new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Project\",\r\n        //   filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n        //   filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollow\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (nextFollow) => {\r\n              if(nextFollow){\r\n            return nextFollow && new Date(`${nextFollow}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          csvExport: false,\r\n          formatter: (cell,row) => {\r\n            return (\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n \r\n\r\n    \r\n    return (\r\n        <>\r\n        {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    {error}\r\n  </Alert>):(\r\n        <div>\r\n          <div className=\"d-flex justify-content-between my-3 px-md-3 px-sm-1\">\r\n            <div>\r\n          <a href={template} className='btn btn-primary' download>Template</a>\r\n          <Button className='btn btn-primary ms-3' onClick={(e)=>assignHandler(e)} disabled={leadData && leadData.length>0? false : true}> Assign Leads</Button>\r\n          </div>\r\n            <CSVReader onFileLoaded={(data, fileInfo, originalFile) => setLeadList(data)} />           \r\n            {/* <img src={Profile1} alt=\"\" /> */}\r\n            </div>\r\n            <div>\r\n    \r\n                <BootstrapTable\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                    />\r\n        </div>\r\n        </div>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadLeads\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nimport {fetchleadDetails, updateLeadData, deleteLead } from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport { addCancelLeadData } from \"../actions/cancellationLeadActions\";\r\nimport { consultantsUnderManager } from \"../actions/userActions\";\r\n\r\n\r\n\r\nexport default ({match, history}) => {\r\n    const leadId = match.params.id\r\n\r\n    var gapi = window.gapi\r\n\r\n    var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n    const [createdUser, setCreatedUser] = useState('')\r\n    const [assignedUser, setAssignedUser] = useState('')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    var [firstInstallment, setFirstInstallment] = useState(0)\r\n    var [secondInstallment, setSecondInstallment] = useState(0)\r\n    var [thirdInstallment, setThirdInstallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [index, setIndex] = useState(0)\r\n    const [remainder, setRemainder] = useState(false)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const leadDetails = useSelector((state) => state.leadDetails)\r\n    const { loading, error, leadInfo } = leadDetails\r\n\r\n    const updateLead = useSelector((state) => state.updateLead)\r\n    const { loading: loadingUpdate, error: errorUpdate , success: successUpdate } = updateLead\r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const fetchConsultantsUnderManager = useSelector((state) => state.fetchConsultantsUnderManager)\r\n    const { loading: loadingConsultants, error: errorConsultants, consultantsList } = fetchConsultantsUnderManager\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    console.log(consultantsList)\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"CPM\") {\r\n        dispatch(consultantsUnderManager(user.managerId))\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n\r\n    useEffect(() => {\r\n      if(successUpdate){\r\n        history.push('/manager/leads')\r\n      }\r\n    },[successUpdate])\r\n\r\n    useEffect(()=>{\r\n    }, [mainProject, subProject])\r\n\r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      \r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n  \r\n    useEffect(() => {\r\n     \r\n      if (!leadInfo || leadInfo._id !== leadId) {\r\n        dispatch(fetchleadDetails(leadId))\r\n      }else{ \r\n        setCreatedUser(leadInfo.createdUser)\r\n        setAssignedUser(leadInfo.assignedConsultant)\r\n        setConsultant(leadInfo.consultantName)\r\n        setCustomer(leadInfo.customerName)\r\n        setEnquiryDate(leadInfo.enquiryDate)\r\n        setContactNumber(leadInfo.contactNumber)\r\n        setAlternateNumber(leadInfo.alternateNumber)\r\n        setMainProject(leadInfo.project.mainProject)\r\n        setSubProject(leadInfo.project.subProject)\r\n        setProjectId(leadInfo.project.projectId)\r\n        setLeadType(leadInfo.leadType)\r\n        setLeadScore(leadInfo.leadScore)\r\n        setStatus(leadInfo.status)\r\n        setRemarks(leadInfo.remarks)\r\n        setNextFollow(leadInfo.nextFollowUp)\r\n        setManagerRemarks(leadInfo.managerRemarks)\r\n        setFirstInstallment(leadInfo.payment.firstInstallment)\r\n        setSecondInstallment(leadInfo.payment.secondInstallment)\r\n        setThirdInstallment(leadInfo.payment.thirdInstallment)\r\n        setTotalSqft(leadInfo.totalSqft? leadInfo.totalSqft : 0)\r\n        setRemainder(leadInfo.remainder? leadInfo.remainder : false)\r\n      }\r\n    }, [dispatch, leadInfo, successUpdate])\r\n\r\n    \r\n\r\n    function findSubProject(project) {\r\n      return project.mainProject === mainProject\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(mainProject){\r\n        if(projectInfo)\r\n        {\r\n          const main = projectInfo.findIndex(findSubProject);\r\n        setIndex(main)\r\n\r\n      }\r\n      }\r\n    },[mainProject])\r\n\r\n\r\n    // const subProjectHandler = () => {\r\n    //   if(projectInfo)\r\n    //   {\r\n    //     const main = projectInfo.findIndex(findSubProject);\r\n    //   setIndex(main)\r\n    // }\r\n      \r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //   subProjectHandler()\r\n    // }, [mainProject])\r\n\r\n    const consultantHandler = (e) => {\r\n      //  console.log(e.target.value, consultantList)\r\n      // console.log(e.target.value._id)\r\n      setAssignedUser(consultantsList[e.target.value]._id)\r\n        setConsultant(consultantsList[e.target.value].userId.name)\r\n     }\r\n\r\n     const deleteHandler = (e) => {\r\n       e.preventDefault()\r\n      if (window.confirm('Are you sure?')){\r\n      dispatch(deleteLead(leadId))\r\n      }\r\n     }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n        dispatch(\r\n          updateLeadData({\r\n            _id: leadId,\r\n            createdUser,\r\n            assignedConsultant: assignedUser,\r\n            customerName:customer,\r\n            consultantName:consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            alternateNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : false,\r\n            remainder\r\n          }))\r\n    }\r\n\r\n    const projectHandler = (e) => {\r\n      setMainProject(e.target.value)\r\n    }\r\n\r\n    const cancelLeadHandler = (e, id) => {\r\n      e.preventDefault()\r\n      if (window.confirm('Are you sure')) {\r\n          dispatch(addCancelLeadData({\r\n            _id: leadId,\r\n            createdUser,\r\n            assignedConsultant: assignedUser,\r\n            customerName:customer,\r\n            consultantName: consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            alternateNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : true\r\n          }))\r\n          dispatch(deleteLead(leadId)) \r\n          history.push('/leads')\r\n        }\r\n\r\n  }\r\n\r\n  const handleClick = () => {\r\n    gapi.load('client:auth2', () => {\r\n      // console.log('loaded client')\r\n\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n\r\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n      gapi.auth2.getAuthInstance().signIn()\r\n      .then(() => {\r\n        \r\n        var event = {\r\n          'summary': leadInfo.customerName,\r\n          'location': '',\r\n          'description': leadInfo.project.subProject,\r\n          'start': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'end': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'recurrence': [\r\n            'RRULE:FREQ=DAILY;COUNT=1'\r\n          ],\r\n          'attendees': [\r\n            {'email': 'deve.metromindz@gmail.com'}\r\n          ],\r\n          'reminders': {\r\n            'useDefault': false,\r\n            'overrides': [\r\n              {'method': 'email', 'minutes': 24 * 60},\r\n              {'method': 'popup', 'minutes': 10}\r\n            ]\r\n          }\r\n        }\r\n\r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event,\r\n        })\r\n\r\n        request.execute(event => {\r\n          console.log(event)\r\n          window.open(event.htmlLink)\r\n        })\r\n        \r\n\r\n        /*\r\n            Uncomment the following block to get events\r\n        */\r\n        /*\r\n        // get events\r\n        gapi.client.calendar.events.list({\r\n          'calendarId': 'primary',\r\n          'timeMin': (new Date()).toISOString(),\r\n          'showDeleted': false,\r\n          'singleEvents': true,\r\n          'maxResults': 10,\r\n          'orderBy': 'startTime'\r\n        }).then(response => {\r\n          const events = response.result.items\r\n          console.log('EVENTS: ', events)\r\n        })\r\n        */\r\n    \r\n\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading && loadingProject ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e)=>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer || ''} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" defaultValue={enquiryDate.split('.')[0]}  onChange={(e) => {setEnquiryDate(e.target.value)}}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n          \r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"contact\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"987654321\" value={contactNumber || ''} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select value={consultantsList && consultantsList.findIndex(c=>c.userId && (c.userId.name===consultant))} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                 \r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.userId && consultant.userId.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n            </Row>\r\n\r\n            <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={mainProject} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                <Form.Label>Sub Project</Form.Label>\r\n                <Form.Select value={subProject} onChange={(e) => setSubProject(e.target.value)}>\r\n                  <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore || ''} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>LEAD TYPE</Form.Label>\r\n                <Form.Select value={leadType || ''} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>STATUS</Form.Label>\r\n                <Form.Select value={status || ''} onChange={(e) => setStatus(e.target.value)}>\r\n                    <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                    <option value=\"Visited\">Visited</option>\r\n                    <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                    <option value=\"Detail Shared\">Detail Shared</option>\r\n                    <option value=\"Not Interested\">Not Interested</option>\r\n                    <option value=\"RFR\">RFR</option>\r\n                    <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" min={enquiryDate} defaultValue={nextFollow.split('.')[0]} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                     \r\n         </Row>\r\n\r\n         <Row>  \r\n        \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks || ''} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstInstallment(firstInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondInstallment(secondInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdInstallment(thirdInstallment = parseInt(e.target.value ) || 0)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3 d-flex justify-content-between\">\r\n            <div>\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n            <Button variant=\"primary\" className=\"ms-3\" type=\"submit\" onClick={handleClick} disabled={!nextFollow}>Reminder</Button>\r\n            <Button className=\"ms-3\"  variant=\"primary\" type=\"button\" onClick = {(e)=>cancelLeadHandler(e, leadId)}>Cancellation</Button>\r\n            </div>\r\n            <div>\r\n            <Button variant =\"danger\" onClick={(e)=>{deleteHandler(e)}}>Delete</Button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  \r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\n// import ReactLogo from '../assets/img/technologies/react-logo-transparent.svg'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst NextFollowUp = ({history}) => {\r\n  var gapi = window.gapi\r\n\r\n  var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n  const [remainder, setRemainder] = useState(false) \r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"TeamLead\") {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          }\r\n\r\n            axios.get(`/api/leads/teamlead`, config)\r\n            .then(res => {\r\n                const today = new Date()\r\n                const lead = res.data.leadsList.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  today.toISOString().split('T')[0]}});\r\n                setLeadData(lead)   \r\n                setLoading(false)                   \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n\r\n      \r\n\r\n        \r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      // {\r\n      //   dataField: \"\",\r\n      //   text: \"\",\r\n      //   formatter: (cell,row) => {\r\n      //     return (\r\n      //       <button className=\"btn btn-primary\" onClick={ ()=>remainderHandler(row) }>Remainder</button>\r\n      //     );\r\n      //   },\r\n\r\n      // },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextFollowUp\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect,  forwardRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { fetchTeamLeadLeadList } from '../actions/leadActions';\r\nimport {\r\n  Chart,\r\n  ArcElement,\r\n  LineElement,\r\n  BarElement,\r\n  PointElement,\r\n  BarController,\r\n  BubbleController,\r\n  DoughnutController,\r\n  LineController,\r\n  PieController,\r\n  PolarAreaController,\r\n  RadarController,\r\n  ScatterController,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  RadialLinearScale,\r\n  TimeScale,\r\n  TimeSeriesScale,\r\n  Decimation,\r\n  Filler,\r\n  Legend,\r\n  Title,\r\n  Tooltip\r\n} from 'chart.js'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { faCashRegister, faChartLine, faCloudUploadAlt, faPlus, faRocket, faTasks, faUserShield } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { trafficShares, totalOrders } from \"../data/charts\";\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\n\r\nimport NextFollowUp from './NextFollowUp';\r\n\r\nconst TeamLeadDashboard = ({history}) => {\r\n  var leadStatData = [], bookedData = [], lostLeadData = [], siteVisitData = []\r\n  var leadCount = 0, bookedCount = 0, lostLeadCount=0, siteVisitCount = 0\r\n\r\n  const d = new Date()\r\n\r\n  const monthArray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n  const [leadStats , setLeadStats] = useState([])\r\n  const [bookedStats , setBookedStats] = useState([])\r\n  const [bookedAvg , setBookedAvg] = useState(0)\r\n  const [thisMonthBooked , setThisMonthBooked] = useState(0)\r\n  const [lostLeadStats , setLostLeadStats] = useState([])\r\n  const [lostLeadAvg , setLostLeadAvg] = useState(0)\r\n  const [thisMonthLostLead , setThisMonthLostLead] = useState(0)\r\n  const [siteVisitStats , setSiteVisitStats] = useState([])\r\n  const [siteVisitAvg , setSiteVisitAvg] = useState(0)\r\n  const [thisMonthSiteVisit , setThisMonthSiteVisit] = useState(0)\r\n  const [totalLeads , setTotalLeads] = useState(0)\r\n  const [nextFollowUpCount, setNextFollowUpCount] = useState(0)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  const teamLeadLeadList = useSelector((state) => state.teamLeadLeadList)\r\n    const { loading, error, teamList:leadInfo } = teamLeadLeadList\r\n\r\n  useEffect(()=>{\r\n    if (user && user.role === 'TeamLead') {\r\n      dispatch(fetchTeamLeadLeadList())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(leadInfo){\r\n      setTotalLeads(leadInfo.length)\r\n      for (var i = 0; i <= d.getMonth(); i++) {\r\n        leadCount = 0\r\n        bookedCount = 0\r\n        lostLeadCount = 0\r\n        siteVisitCount = 0\r\n     leadInfo.forEach(lead=>{\r\n      \r\n\r\n      if (parseInt(lead.createdAt.split('-')[1]) - 1 === i && d.getFullYear() === parseInt(lead.createdAt.split('-')[0])) {\r\n        leadCount += 1\r\n        if(lead.status === \"Booked\"){\r\n          bookedCount += 1\r\n        }else if(lead.status === \"Lost\"){\r\n          lostLeadCount += 1\r\n        }else if (lead.status === \"Visited\"){\r\n          siteVisitCount += 1\r\n        }\r\n    }\r\n     })\r\n\r\n     leadStatData.push(leadCount)\r\n     bookedData.push(bookedCount)\r\n     lostLeadData.push(lostLeadCount)\r\n     siteVisitData.push(siteVisitCount)\r\n     \r\n     \r\n    }\r\n    setLeadStats(leadStatData)\r\n    setBookedStats(bookedData)\r\n    setLostLeadStats(lostLeadData)\r\n    setSiteVisitStats(siteVisitData)\r\n    if(bookedData[d.getMonth()] === bookedData[d.getMonth()-1] || bookedData[d.getMonth()-1] === 0){\r\n      setBookedAvg(0)\r\n    }else{\r\n    setBookedAvg((bookedData[d.getMonth()]-bookedData[d.getMonth()-1])/bookedData[d.getMonth()-1])\r\n    }\r\n    setThisMonthBooked(bookedData[d.getMonth()])\r\n    if(lostLeadData[d.getMonth()]===lostLeadData[d.getMonth()-1] || lostLeadData[d.getMonth()-1] === 0){\r\n      setLostLeadAvg(0)\r\n    }else{\r\n    setLostLeadAvg((lostLeadData[d.getMonth()]-lostLeadData[d.getMonth()-1])/lostLeadData[d.getMonth()-1])\r\n    }\r\n    setThisMonthLostLead(lostLeadData[d.getMonth()])\r\n    if(siteVisitData[d.getMonth()] === siteVisitData[d.getMonth()-1] || siteVisitData[d.getMonth()-1]===0){\r\n      setSiteVisitAvg(0)\r\n    }else{\r\n    setSiteVisitAvg((siteVisitData[d.getMonth()]-siteVisitData[d.getMonth()-1])/siteVisitData[d.getMonth()-1])\r\n    }\r\n    setThisMonthSiteVisit(siteVisitData[d.getMonth()])\r\n    setNextFollowUpCount(leadInfo.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  d.toISOString().split('T')[0]}}).length)\r\n\r\n    }\r\n    \r\n  },[leadInfo])\r\n\r\n  \r\n\r\n  \r\n\r\n  Chart.register(\r\n    ArcElement,\r\n    LineElement,\r\n    BarElement,\r\n    PointElement,\r\n    BarController,\r\n    BubbleController,\r\n    DoughnutController,\r\n    LineController,\r\n    PieController,\r\n    PolarAreaController,\r\n    RadarController,\r\n    ScatterController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    TimeSeriesScale,\r\n    Decimation,\r\n    Filler,\r\n    Legend,\r\n    Title,\r\n    Tooltip\r\n    );\r\n\r\n    var data = {\r\n        labels: monthArray,\r\n        datasets: [\r\n            {\r\n                label: \"Leads\",\r\n                data: leadStats,\r\n                fill: true,\r\n                backgroundColor: \"#4A5073\",\r\n                // backgroundColor: [\r\n                //     'rgba(255, 99, 132, 1)',\r\n                //     'rgba(54, 162, 235, 1)',\r\n                //     'rgba(255, 206, 86, 1)',\r\n                //     'rgba(75, 192, 192, 1)',\r\n                //     'rgba(153, 102, 255, 1)',\r\n                //     'rgba(255, 159, 64, 1)',\r\n                // ],\r\n                // borderColor: \"#4A5073\"\r\n            },\r\n            {\r\n              label: \"Booked Leads\",\r\n              data: bookedStats,\r\n              fill: true,\r\n              backgroundColor: \"green\",\r\n              // backgroundColor: [\r\n              //     'rgba(255, 99, 132, 1)',\r\n              //     'rgba(54, 162, 235, 1)',\r\n              //     'rgba(255, 206, 86, 1)',\r\n              //     'rgba(75, 192, 192, 1)',\r\n              //     'rgba(153, 102, 255, 1)',\r\n              //     'rgba(255, 159, 64, 1)',\r\n              // ],\r\n              // borderColor: \"green\"\r\n          },\r\n          {\r\n            label: \"Lost Leads\",\r\n            data: lostLeadStats,\r\n            fill: true,\r\n            backgroundColor: \"red\",\r\n            // backgroundColor: [\r\n            //     'rgba(255, 99, 132, 1)',\r\n            //     'rgba(54, 162, 235, 1)',\r\n            //     'rgba(255, 206, 86, 1)',\r\n            //     'rgba(75, 192, 192, 1)',\r\n            //     'rgba(153, 102, 255, 1)',\r\n            //     'rgba(255, 159, 64, 1)',\r\n            // ],\r\n            // borderColor: \"red\"\r\n        },\r\n        {\r\n          label: \"Site Visit\",\r\n          data: siteVisitStats,\r\n          fill: true,\r\n          // lineTension: 0.1,\r\n          // pointBorderColor: '#111',\r\n          // pointBackgroundColor: '#ff4000',\r\n          // pointBorderWidth: 2,\r\n          backgroundColor: \"yellow\",\r\n          // backgroundColor: [\r\n          //     'rgba(255, 99, 132, 1)',\r\n          //     'rgba(54, 162, 235, 1)',\r\n          //     'rgba(255, 206, 86, 1)',\r\n          //     'rgba(75, 192, 192, 1)',\r\n          //     'rgba(153, 102, 255, 1)',\r\n          //     'rgba(255, 159, 64, 1)',\r\n          // ],\r\n          // borderColor: \"yellow\"\r\n      }\r\n\r\n        ]\r\n    };\r\n\r\n    const data1 = {\r\n      labels: ['Booked Leads', 'Lost Leads', 'Site Visit'],\r\n      datasets: [\r\n        {\r\n          label: 'Lead Statistics',\r\n          data: [thisMonthBooked, thisMonthLostLead, thisMonthSiteVisit],\r\n          backgroundColor: [\r\n            'rgba(0,128,0 , 0.2)',\r\n            'rgba(255, 0, 0, 0.2)',\r\n            'rgba(255, 255, 0, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(0,128,0 , 1)',\r\n            'rgba(255, 0, 0, 1)',\r\n            'rgba(255, 255, 0, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n    const options = {\r\n      responsive: true,\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"left\"\r\n        }]\r\n      }\r\n    };\r\n\r\n    const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n \r\n  const nextFollowUpHandler = () => {\r\n    history.push('/manager/nextfollowup')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-md-center mt-5\">\r\n        {/* <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Total Leads\"\r\n            value={totalLeads}\r\n            percentage={10.57}\r\n            leadStats = {leadStats}\r\n          />\r\n        </Col> */}\r\n        {/* <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Booked Leads\"\r\n            value={thisMonthBooked}\r\n            percentage={bookedAvg}\r\n          />\r\n        </Col> */}\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n        <div onClick={()=>nextFollowUpHandler()} style={{cursor: \"pointer\"}}>\r\n          <CounterWidget\r\n            category=\"Next Follow Up\"\r\n            title={nextFollowUpCount}\r\n            period=\"\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          /></div>\r\n              </Col>\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Booked Leads\"\r\n            title={thisMonthBooked +`/${user && user.setMilestone.bookings}`}\r\n            period=\"monthly\"\r\n            percentage={bookedAvg}\r\n            icon={faChartLine}\r\n            iconColor=\"shape-secondary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Site Visited\"\r\n            title={thisMonthSiteVisit +`/${user && user.setMilestone.siteVisits}`}\r\n            period=\"monthly\"\r\n            percentage={siteVisitAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Lost Leads\"\r\n            title={thisMonthLostLead +`/${user && user.setMilestone.leads}`}\r\n            period=\"monthly\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        \r\n      </Row>\r\n      <Row className=\"p-5\">\r\n        <Col md={8}>\r\n        {(leadStats && leadStats.length>0) && <Bar data={data}  />}\r\n        </Col>\r\n        <Col md={4}>\r\n        <Doughnut data={data1} />\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n          <h2>Next Follow Up</h2>\r\n              <NextFollowUp/>\r\n          </Col>\r\n          </Row>\r\n\r\n          {/* <Row>\r\n          <Col xs={12}>\r\n              <LeadStatsTable bookedStats={bookedStats} lostLeadStats={lostLeadStats} siteVisitStats={siteVisitStats} monthArray={monthArray}/>\r\n          </Col>\r\n          </Row> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamLeadDashboard","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Image, Alert} from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst Leads = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"TeamLead\") {\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n         useEffect(() => {\r\n           setTimeout(()=>{\r\n            const config = {\r\n              headers: {\r\n                Authorization: `Bearer ${user.token}`,\r\n              },\r\n            } \r\n\r\n            axios.get(`/api/leads/teamlead`, config)\r\n            .then(res => {\r\n                const lead = res.data;\r\n                setLeadData(lead.leadsList)\r\n                setLoading(false)                     \r\n            }).catch(function (error) {\r\n              // handle error\r\n              setError(true)\r\n            })\r\n          }, 3000)\r\n          \r\n\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/teamlead/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        csvExport: false,\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n        filter: textFilter(),\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        csvExport: false,\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    Sorry! Error has occured. Please try refreshing the page\r\n  </Alert>)\r\n  :  (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV={ { onlyExportFiltered: true, exportAll: false } }\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Leads\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { managerList, teamLeadList, asmList, consultantList } from \"./../actions/userActions\";\r\nimport { addLeadData} from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nexport default ({history}) => {\r\n    const [lead, setLead] = useState({})\r\n    const [createdUser, setCreatedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [assignedUser, setAssignedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    // var [projectData, setProjectData] = useState({\r\n    //   mainProject: \"\",\r\n    //   subporject: \"\",\r\n    //   projectId: \"\"\r\n    // })\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    const [booked, setBooked] = useState(false)\r\n    // const [payment, setPayment] = useState({\r\n    //   firstInstallment: 0,\r\n    //   secondInstallment: 0,\r\n    //   thirdInstallment: 0\r\n    // })\r\n    var [firstInstallment, setFirstIntallment] = useState(0)\r\n    var [secondInstallment, setSecondIntallment] = useState(0) \r\n    var [thirdInstallment, setThirdIntallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [teamLead, setTeamLead] = useState('')\r\n    const [index, setIndex] = useState(0);\r\n    const [manager, setManager] = useState('');\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addLead = useSelector((state) => state.addLead)\r\n    const { loading, error, leadInfo } = addLead\r\n\r\n    const fetchProjects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = fetchProjects\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading: loadingConsultants, error: errorConsultants, consultants: consultantsList } = fetchConsultants\r\n\r\n    // const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    // const { loading: loadingManager, error: errorManager, managers: managersList } = fetchManagers\r\n\r\n    // const fetchTeamLeads = useSelector((state) => state.fetchTeamLeads)\r\n    // const { loading: loadingTeamLead, error: errorTeamLead, teamleads: teamleadsList } = fetchTeamLeads\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === 'TeamLead') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantList())\r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      if(projectInfo){\r\n        setMainProject(projectInfo[0].mainProject)\r\n        setProjectId(projectInfo[0].projectId)\r\n        setSubProject(projectInfo[0].subProject[0])\r\n        setStatus('Yet to Visit')\r\n        setLeadType('Hot')\r\n        console.log(mainProject, subProject)\r\n      }\r\n    }, [dispatch, projectInfo])\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()  \r\n      setLead(\r\n        lead.createdUser = createdUser, \r\n        lead.assignedConsultant = assignedUser,\r\n        lead.consultantName= consultant,\r\n        lead.enquiryDate= enquiryDate,\r\n        lead.customerName= customer,\r\n        lead.contactNumber= contactNumber,\r\n        lead.alternateNumber= alternateNumber,\r\n        lead.project ={\r\n          mainProject: mainProject,\r\n          subProject: subProject,\r\n          projectId: projectId\r\n        },\r\n        lead.leadScore= leadScore,\r\n        lead.leadType= leadType,\r\n        lead.status= status,\r\n        lead.remarks= remarks,\r\n        lead.nextFollowUp= nextFollow,\r\n        lead.managerRemarks= managerRemarks,\r\n        lead.booked= booked,\r\n        lead.payment = {\r\n          firstInstallment: firstInstallment,\r\n          secondInstallment: secondInstallment,\r\n          thirdInstallment: thirdInstallment,\r\n        },\r\n        lead.totalSqft= totalSqft\r\n        )\r\n      dispatch(addLeadData(lead))\r\n      history.push('/leads')\r\n  }\r\n\r\n    const projectHandler = () => {\r\n      if(projectInfo){\r\n      const i = projectInfo.findIndex((element,i) => {\r\n        if (element.mainProject === mainProject){\r\n          // console.log(i)\r\n          setProjectId(element._id)\r\n        return true\r\n        }\r\n      })\r\n      setIndex(i);  \r\n      \r\n      }      \r\n    }\r\n\r\n    useEffect(()=> {\r\n      projectHandler()\r\n   }, [mainProject])\r\n\r\n   const consultantHandler = (e) => {\r\n    //  console.log(e.target.value, consultantList)\r\n    // console.log(e.target.value._id)\r\n    setAssignedUser(consultantsList[e.target.value]._id)\r\n      setConsultant(consultantsList[e.target.value].name)\r\n   }\r\n\r\n    // useEffect(()=>{\r\n    //   console.log(\"hello1\")\r\n    //   if(customer){\r\n    //     console.log(\"hello2\")\r\n    //     dispatch(addLeadData(lead))\r\n    //         console.log(lead)\r\n    //         console.log(`3${mainProject}`)\r\n    //   }\r\n    // }, [ dispatch])\r\n\r\n\r\n  \r\n\r\n    // const submitHandler = ()=>{\r\n    //   console.log(mainProject, subProject)\r\n    // }\r\n\r\n    // const findSubProject = (element, i) => {\r\n    //   console.log(`${element.mainProject} = ${mainProject}`)\r\n    //   if (element.mainProject === mainProject){\r\n    //     return true\r\n    //   }else{\r\n    //     return false\r\n    //   }\r\n    // }\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e) =>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" value={enquiryDate} onChange={(e) => setEnquiryDate(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={contactNumber} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n           \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select defaultValue={consultant ? consultant : ' '} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Select required defaultValue={mainProject? mainProject : 'Not Found'} onChange={(e) => setMainProject(e.target.value)}>\r\n                <option key={2001} value=''>Select</option>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro.mainProject}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                  <Form.Label>Sub Project</Form.Label>\r\n                  <Form.Select required defaultValue={subProject? subProject : 'Not Found'} onChange={(e) => setSubProject(e.target.value)}>\r\n                    <option key={2001} value=''>Select</option>\r\n                  {\r\n                      projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                  </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Scource</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>Lead Type</Form.Label>\r\n                <Form.Select required value={leadType} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Select required value={status} onChange={(e) => setStatus(e.target.value)}>\r\n                  <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                  <option value=\"Visited\">Visited</option>\r\n                  <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                  <option value=\"Detail Shared\">Detail Shared</option>\r\n                  <option value=\"Not Interested\">Not Interested</option>\r\n                  <option value=\"RFR\">RFR</option>\r\n                  <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" value={nextFollow} min={enquiryDate} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n                                 \r\n         </Row>\r\n\r\n         <Row>\r\n\r\n        \r\n            \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                      \r\n         </Row>\r\n\r\n          <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstIntallment(e.target.value && (firstInstallment = parseInt(e.target.value)))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondIntallment(secondInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdIntallment(thirdInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Add Lead & Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n   )}\r\n   </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst LostLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.isAdmin) {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n            axios.get(`/api/leads`)\r\n            .then(res => {\r\n                const lead = res.data.filter(lead => lead.status === \"Lost\" );\r\n                setLeadData(lead) \r\n                setLoading(false)                    \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LostLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst SiteVisitsLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === 'TeamLead') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n\r\n         useEffect(() => {\r\n            axios.get(`/api/leads/teamlead`)\r\n            .then(res => {\r\n                const lead = res.data.filter(lead => lead.status === \"Visited\" );\r\n                setLeadData(lead)                     \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"assignedConsultant.name\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteVisitsLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport {activityLogData} from '../actions/activityLogActions'\r\nimport { fetchUserDetail } from '../actions/userActions';\r\nimport { fetchConsultantLeadList } from '../actions/leadActions';\r\n\r\n// delete lead -> null remaining\r\n\r\nconst ActivityLog = ({history, match}) => {\r\n  const id = match.params.id\r\n  const d = new Date()\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n  const [bookingMonthlyStatus, setBookingMonthlyStatus] = useState(0)\r\n  const [siteVisitsMonthlyStatus, setSiteVisitsMonthlyStatus] = useState(0)\r\n  const [leadMonthlyStatus, setLeadMonthlyStatus] = useState(0)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const activityLogDetail = useSelector((state) => state.activityLogDetail)\r\n    const { loading , error, activityLog } = activityLogDetail\r\n\r\n    const userDetail = useSelector((state) => state.userDetail)\r\n    const { userData } = userDetail\r\n\r\n\r\n    const consultantLeadList = useSelector((state) => state.consultantLeadList)\r\n    const {leadList: consultantLeads } = consultantLeadList\r\n\r\n  useEffect(()=>{\r\n    if(userInfo && userInfo.role === 'Consultant'){\r\n    dispatch(activityLogData(id))\r\n    dispatch(fetchUserDetail(id))\r\n    }else{\r\n      history.push(`/login`)\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(consultantLeadList){\r\n      // setBookingMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'booked' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      // setSiteVisitsMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'visited' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      // setLeadMonthlyStatus(consultantLeads.leadsList.filter(lead =>new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      console.log(consultantLeadList)\r\n    }\r\n    else if(userData){\r\n      if(userData.role === \"Consultant\"){\r\n        dispatch(fetchConsultantLeadList(userData._id))\r\n      }\r\n    }\r\n\r\n  }, [userData])\r\n\r\n  useEffect(()=>{\r\n    if(activityLog && activityLog.activityLogData && activityLog.activityLogData.length>0){\r\n      setName(activityLog.activityLogData[0].member.name.charAt(0).toUpperCase()+activityLog.activityLogData[0].member.name.slice(1))\r\n    }\r\n  },[activityLog])\r\n\r\n  const leadHandler = (activity) => {\r\n    history.push(`/leads/${activity.leadId._id}/edit`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) : activityLog && activityLog.activityLogData.length > 0 ?(\r\n      <>\r\n      <h3 className='mb-3'>{activityLog && activityLog.activityLogData && (name + ' - ' +(activityLog.activityLogData[0].member.role)+'') }</h3>\r\n    <Row className=\"\">\r\n      <Col xs={12} sm={6} xl={8} className=\"mb-4 d-sm-block\">\r\n    <div className=''>\r\n      {(activityLog && activityLog.activityLogData) && activityLog.activityLogData.map((activity, i) => (\r\n      <Card className='px-3 py-3 mb-2 d-flex justify-content-between align-items-center flex-row' key={i}>\r\n        <div>\r\n        <a className={`mb-3 action-text ${activity.leadId === null ? 'deleted-lead':'' }`} onClick={()=>leadHandler(activity)} > {name} {activity.action}</a>\r\n        </div>\r\n        <div className='me-0 mt-2'>\r\n        {/* <p className='mb-1'>{new Date(activity.createdAt).toDateString()}</p> */}\r\n        <p className='mb-1' style={{\"color\":\"#69acbf\"}}>  <TimeAgo date={new Date(activity.createdAt)} /> </p>\r\n        </div>\r\n      </Card>\r\n      ))\r\n  }\r\n  </div>\r\n  </Col>\r\n  \r\n      <Col xs={12} sm={6} xl={4} className=\"mb-4 d-sm-block\">\r\n      <CounterWidget\r\n            category=\"Bookings\"\r\n            title={userData? `${bookingMonthlyStatus}/${userData.setMilestone.bookings}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n          <br/>\r\n\r\n      <CounterWidget\r\n            category=\"Site Visits\"\r\n            title={userData? `${siteVisitsMonthlyStatus}/${userData.setMilestone.siteVisits}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n<br/>\r\n      <CounterWidget\r\n            category=\"Leads\"\r\n            title={userData? `${leadMonthlyStatus}/${userData.setMilestone.leads}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n      </Col>\r\n      </Row>\r\n    </>\r\n  ):(\r\n    <div className='p-5 d-flex justify-content-center align-items-center'>\r\n      <h1>\"No Activity\"</h1>\r\n    </div>\r\n  )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ActivityLog","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp, faArrowDown, faArrowUp, faEdit, faEllipsisH, faExternalLinkAlt, faEye, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport { pageVisits, pageTraffic, pageRanking } from \"../data/tables\";\r\nimport transactions from \"../data/transactions\";\r\nimport commands from \"../data/commands\";\r\n\r\nimport { consultantsUnderManager, updateUser } from '../actions/userActions'\r\nimport { deleteUser } from '../actions/userActions';\r\nimport Preloader from '../components/Preloader';\r\n\r\n\r\n\r\nconst SetMilestone = ({history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [bookingNumber, setBookingNumber] = useState(0)\r\n    const [ userDetails, setUserDetails] = useState({})\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {userInfo: user } = userLogin\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading, error, consultants: users } = fetchConsultants\r\n\r\n    // const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    // const { loading, error, consultants: users } = fetchConsultants\r\n\r\n    const userUpdate = useSelector((state) => state.up)\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(user && user.role === 'Manager'){\r\n        dispatch(consultantsUnderManager(user._id))\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, user])\r\n\r\n    useEffect(() => {\r\n        if(userDetails.name){\r\n        dispatch(updateUser(userDetails))\r\n        }\r\n    },[dispatch, userDetails])\r\n\r\n\r\n    const bookingHandler = (e, user) => {\r\n        e.preventDefault()\r\n        user.setMilestone ={\r\n            bookings : bookingNumber,\r\n            leads : bookingNumber * 6,\r\n            siteVisits : bookingNumber * 4\r\n        }\r\n        setUserDetails(user)\r\n        console.log(userDetails)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { loading ? <Preloader /> : (\r\n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n                <Card.Body className=\"pt-0\">\r\n                <Table hover className=\"user-table align-items-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"border-bottom\">Serial No.</th>\r\n                        <th className=\"border-bottom\">Employee Code</th>\r\n                        <th className=\"border-bottom\">Name</th>\r\n                        <th className=\"border-bottom\">Email Id</th>\r\n                        <th className=\"border-bottom\">Mobile no.</th> \r\n                        <th className=\"border-bottom\">Bookings Number<br/>(per month)</th>  \r\n                        {/* <th className=\"border-bottom\">Leads<br/>(per month)</th>  \r\n                        <th className=\"border-bottom\">Site Visits<br/>(per month)</th>             */}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {users && users.map((user, i) => \r\n                    <tr key={i}>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {i+1}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.empCode}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.name}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.email}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.mobile}\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        <input\r\n                            type=\"number\"\r\n                            defaultValue={user.setMilestone.bookings}\r\n                            onChange = { (e) => setBookingNumber(e.target.value)}\r\n                        />\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <div className=\"mt-3\">\r\n                            <Button variant=\"primary\" type=\"submit\" onClick = {(e) => bookingHandler(e,user)}>Save</Button>\r\n                        </div>\r\n                    </td>\r\n                    {/* <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.setMilestone.bookings * 6}\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <span className=\"fw-normal\">\r\n                        {user.setMilestone.bookings * 4}\r\n                        </span>\r\n                    </td> */}\r\n                    \r\n                    {/* <td>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter your name\" value={}/>\r\n                    </td> */}\r\n                    {/* <td>\r\n                        <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as={Button} split variant=\"link\" className=\"text-dark m-0 p-0\">\r\n                            <span className=\"icon icon-sm\">\r\n                            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEye} className=\"me-2\" /> View Details\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"me-2\" /> Edit\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"text-danger\" onClick= {()=> deleteHandler(user._id)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" /> Remove\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td> */}\r\n                    </tr>\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n                {/* <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n                    <Nav>\r\n                    <Pagination className=\"mb-2 mb-lg-0\">\r\n                        <Pagination.Prev>\r\n                        Previous\r\n                        </Pagination.Prev>\r\n                        <Pagination.Item active>1</Pagination.Item>\r\n                        <Pagination.Item>2</Pagination.Item>\r\n                        <Pagination.Item>3</Pagination.Item>\r\n                        <Pagination.Item>4</Pagination.Item>\r\n                        <Pagination.Item>5</Pagination.Item>\r\n                        <Pagination.Next>\r\n                        Next\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                    </Nav>\r\n                    {/* <small className=\"fw-bold\">\r\n                    Showing <b>{totalTransactions}</b> out of <b>25</b> entries\r\n                    </small> \r\n                </Card.Footer> */}\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetMilestone\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup, Modal, Form } from '@themesberg/react-bootstrap';\r\n// import { Form } from 'react-bootstrap';\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport { activityLogData } from '../actions/activityLogActions'\r\nimport { deleteTask, fetchIndividualTasks } from '../actions/taskManagerActions';\r\nimport { fetchUserList } from '../actions//userActions'\r\nimport { addTask, updateTask } from '../actions/taskManagerActions';\r\nimport { UPDATE_TASK_RESET, DELETE_TASK_RESET } from '../constants/taskManagerContants';\r\n\r\n\r\n// delete lead -> null remaining\r\n\r\nconst TaskManager = ({ history, match }) => {\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showEditDefault, setShowEditDefault] = useState(false);\r\n    const [task, setTask] = useState('')\r\n    const [dueDate, setDueDate] = useState('')\r\n    const [assignTo, setAssignTo] = useState('')\r\n    const [note, setNote] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [editedTask, setEditedTask] = useState('')\r\n    const [previousTask, setPreviousTask] = useState('')\r\n    const [editedDueDate, setEditedDueDate] = useState('')\r\n    const [editedAssignTo, setEditedAssignTo] = useState('')\r\n    const [editedNote, setEditedNote] = useState('')\r\n    const [editedStatus, setEditedStatus] = useState('')\r\n    \r\n\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n\r\n    const handleEditClose = () => setShowEditDefault(false);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const fetchUserTasks = useSelector((state) => state.fetchIndividualTasks)\r\n    const { loading, error, taskList } = fetchUserTasks\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { users } = userList\r\n\r\n    const addTaskData = useSelector((state) => state.addTask)\r\n    const { loading: taskLoading, error: taskError, addedTask } = addTaskData\r\n\r\n    const updateTaskData = useSelector((state) => state.updateTask)\r\n    const { success } = updateTaskData\r\n\r\n    const deleteTaskData = useSelector((state) => state.deleteTask)\r\n    const { success: deleteSuccess } = deleteTaskData\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.role === \"Manager\") {\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n            dispatch(fetchUserList())\r\n        } else {\r\n            history.push(`/login`)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(success) {\r\n            dispatch({\r\n                type: UPDATE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    },[success])\r\n\r\n    useEffect(()=>{\r\n        if(deleteSuccess) {\r\n            dispatch({\r\n                type: DELETE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    }, [deleteSuccess])\r\n\r\n    const addtaskHandler = (e) => {\r\n        e.preventDefault()\r\n       \r\n        dispatch(addTask({\r\n            task,\r\n            member: userInfo._id,\r\n            dueDate,\r\n            note,\r\n            assignTo : assignTo? assignTo: userInfo._id\r\n        }))\r\n\r\n        setShowDefault(false)\r\n        dispatch(fetchIndividualTasks(userInfo._id))\r\n        setAssignTo('')\r\n        setDueDate('')\r\n        setNote('')\r\n        setStatus('')\r\n        setTask('')\r\n        \r\n    }\r\n\r\n    const taskStatusHandler = (e, task) => {\r\n      \r\n        if(task.status === 'Pending'){\r\n            task.status = 'Completed'\r\n        }else{\r\n            task.status ='Pending'\r\n        }\r\n\r\n        dispatch(updateTask(task))\r\n    }\r\n\r\n    const deleteTaskHandler = (e, task) => {\r\n        dispatch(deleteTask(task._id))\r\n    }\r\n\r\n\r\n    const editTaskHandler = (e,task) => {\r\n        e.preventDefault()\r\n        setPreviousTask(task)\r\n        setShowEditDefault(true)\r\n\r\n        setEditedTask(task.task)\r\n        setEditedDueDate(task.dueDate)\r\n        setEditedNote(task.note)\r\n        setEditedAssignTo(task.assignTo)\r\n    }\r\n\r\n    const saveEditedTaskHandler = (e, task) => {\r\n        e.preventDefault()\r\n        dispatch(updateTask({\r\n            _id : previousTask._id,\r\n            task : editedTask,\r\n            note: editedNote,\r\n            status : editedStatus,\r\n            member: userInfo._id,\r\n            assignTo: editedAssignTo,\r\n            dueDate: editedDueDate\r\n        }))\r\n\r\n        setShowEditDefault(false)\r\n        setEditedAssignTo('')\r\n        setEditedDueDate('')\r\n        setEditedNote('')\r\n        setEditedStatus('')\r\n        setEditedTask('')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<Preloader />) : error ? (<Alert>{error}</Alert>) : true ? (\r\n                <>\r\n                    <Row className='pt-3 pb-3'>\r\n                        <Col>\r\n                        {/* <a href=\"#\" className='btn btn-primary'>Add New Task</a> */}\r\n                        <Button variant=\"primary\" className=\"my-3\" onClick={() => setShowDefault(true)}>Add New Task</Button>\r\n                        <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                            <Modal.Header>\r\n                            <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                            <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form className='p-3' onSubmit={(e)=>addtaskHandler(e)}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Task</Form.Label>\r\n                                <Form.Control required  type=\"text\" onChange={(e) => setTask(e.target.value)}/>\r\n                                {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                 </Form.Group>\r\n                                 <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                    <Form.Label>Due time</Form.Label>\r\n                                    <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" defaultValue={dueDate}  onChange={(e) => {setDueDate(e.target.value)}}/>\r\n                                </Form.Group>\r\n                                    \r\n\r\n                                    <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                        <Form.Label>Assign to</Form.Label>\r\n                                        <Form.Select value={assignTo || ''} onChange={(e) => setAssignTo(e.target.value)}>\r\n                                        <option value=\" \">Select</option>\r\n                                        \r\n                                        {users && users.map((user, i) => (\r\n                                            \r\n                                        (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                            \r\n                                        ))}\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Note</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" onChange={(e) => setNote(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <button className=\"btn btn-primary\" type='submit'>Add Task</button>\r\n                            </Form>\r\n                                </Modal.Body>\r\n                                {/* <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    I Got It\r\n                                </Button>\r\n                                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                </Modal.Footer> */}\r\n                            </Modal>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        {(taskList && taskList.length>0)? taskList.map((task, i)=>(\r\n                        <Col xs={12} sm={12} xl={12} className=\"mb-4 d-sm-block\" key={i}>\r\n                            <div className=\"hover-state rounded-0 rounded-top py-3 card border-bottom\">\r\n                                <div className=\"d-sm-flex align-items-center flex-wrap flex-lg-nowrap py-0 card-body\">\r\n                                    <div className=\"text-left text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check me-sm-2\">\r\n                                            <input type=\"checkbox\" id=\"task-584be4d2-bec0-4fb1-80b1-690358ca4809\" className=\"form-check-input\"\r\n                                                value=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"px-0 mb-4 mb-md-0 col-lg-9 col-9\">\r\n                                        <div className=\"mb-2\">\r\n                                            <h5 className=\"\">{task.task}</h5>\r\n                                            <div className=\"d-block d-sm-flex\">\r\n                                                <div>\r\n                                                    <h6 className=\"fw-normal text-gray mb-3 mb-sm-0\"><svg width={15} xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                        className=\"icon icon-xxs text-gray-500 me-2\">\r\n                                                        <path fillRule=\"evenodd\"\r\n                                                            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\r\n                                                            clipRule=\"evenodd\"></path>\r\n                                                    </svg> {new Date(task.dueDate).toLocaleDateString() + ` (` + new Date(task.dueDate).toLocaleTimeString() + `)`}</h6>\r\n                                                </div>\r\n                                                <div className=\"ms-sm-3\" onClick={(e) => taskStatusHandler(e, task)} style={{cursor: 'pointer'}}>\r\n                                                    {task.status === 'Pending'? <span className=\"super-badge badge bg-warning\">In Progress</span> : <span className=\"super-badge badge bg-success\">Completed</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"fw-bold text-dark card-link\">\r\n                                                <span className=\"fw-normal text-gray \">{task.note && task.note}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fas fa-edit\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> editTaskHandler(e,task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fa fa-trash red\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> deleteTaskHandler(e, task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    \r\n                                    <div\r\n                                        className=\"d-none d-lg-block d-xl-inline-flex align-items-center ms-lg-auto text-right justify-content-center px-md-0 col-xl-1 col-lg-1 col-sm-1 col-10\">\r\n                                        <div className=\"d-flex justify-content-end dropdown\">\r\n                                            <button id=\"react-aria8234133146-25\" aria-expanded=\"false\" type=\"button\"\r\n                                                className=\"text-dark dropdown-toggle-split m-0 p-0 dropdown-toggle btn btn-link\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                    className=\"icon icon-xs icon-dark\">\r\n                                                    <path\r\n                                                        d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Modal as={Modal.Dialog} centered show={showEditDefault} onHide={handleEditClose}>\r\n                                    <Modal.Header>\r\n                                    <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                                    <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditClose} />\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form className='p-3' onSubmit={(e)=>saveEditedTaskHandler(e, task)}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control required  type=\"text\"  value={editedTask} onChange={(e)=> setEditedTask(e.target.value)}/>\r\n                                        {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                            <Form.Label>Due time</Form.Label>\r\n                                            <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" value={editedDueDate.split('.')[0]}  onChange={(e) => {setEditedDueDate(e.target.value)}}/>\r\n                                        </Form.Group>\r\n                                            \r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Assign to</Form.Label>\r\n                                                <Form.Select value={editedAssignTo} onChange={(e) => setEditedAssignTo(e.target.value)}>\r\n                                                <option value=\" \">Select</option>\r\n                                                \r\n                                                {users && users.map((user, i) => (\r\n                                                    \r\n                                                (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                                    \r\n                                                ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Status</Form.Label>\r\n                                                <Form.Select value={editedStatus} onChange={(e) => setEditedStatus(e.target.value)}>\r\n                                                <option value=\"Pending\">In Progress</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Note</Form.Label>\r\n                                                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" value={editedNote} onChange={(e) => setEditedNote(e.target.value)}/>\r\n                                            </Form.Group>\r\n                                            <button className=\"btn btn-primary\" type='submit'>Save Task</button>\r\n                                    </Form>\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            I Got It\r\n                                        </Button>\r\n                                        <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        </Modal.Footer> */}\r\n                                    </Modal>\r\n\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        )): (\r\n                            <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                                <h1>\"No Task\"</h1>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                    <h1>\"No Task\"</h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskManager","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\n// import ReactLogo from '../assets/img/technologies/react-logo-transparent.svg'\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst NextFollowUp = ({history}) => {\r\n\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if (user && user.role === \"Consultant\") {\r\n     \r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n\r\n\r\n  var gapi = window.gapi\r\n\r\n  var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n  const [remainder, setRemainder] = useState(false) \r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  \r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          } \r\n\r\n          axios.get(`/api/leads/consultant`, config)\r\n            .then(res => {\r\n                const today = new Date()\r\n                const lead = res.data.leadsList.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  today.toISOString().split('T')[0]}});\r\n                setLeadData(lead)   \r\n                setLoading(false)                   \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n\r\n        const remainderHandler = () => {\r\n          // if(leadData && leadData.nextFollowUp){\r\n            gapi.load('client:auth2', () => {\r\n              console.log('loaded client')\r\n        \r\n              gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: DISCOVERY_DOCS,\r\n                scope: SCOPES,\r\n              })\r\n        \r\n              gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n        \r\n        \r\n              gapi.auth2.getAuthInstance().signIn()\r\n              .then(() => {\r\n                \r\n                \r\n                console.log(leadData)\r\n                var event = {\r\n                  'summary': leadData.customer,\r\n                  'location': '',\r\n                  'description': leadData.status,\r\n                  'start': {\r\n                    'dateTime': leadData.nextFollowUp,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'end': {\r\n                    'dateTime': `${leadData.nextFollowUp}`,\r\n                    'timeZone': 'Asia/Kolkata'\r\n                  },\r\n                  'recurrence': [\r\n                    'RRULE:FREQ=DAILY;COUNT=2'\r\n                  ],\r\n                  'attendees': [\r\n                    // {'email': 'lpage@example.com'},\r\n                    // {'email': 'sbrin@example.com'}\r\n                  ],\r\n                  'reminders': {\r\n                    'useDefault': false,\r\n                    'overrides': [\r\n                      {'method': 'email', 'minutes': 24 * 60},\r\n                      {'method': 'popup', 'minutes': 10}\r\n                    ]\r\n                  }\r\n                }\r\n              \r\n        \r\n                var request = gapi.client.calendar.events.insert({\r\n                  'calendarId': 'primary',\r\n                  'resource': event,\r\n                })\r\n        \r\n                request.execute(event => {\r\n                  console.log(event)\r\n                  window.open(event.htmlLink)\r\n                })\r\n                \r\n        \r\n                /*\r\n                    Uncomment the following block to get events\r\n                */\r\n                /*\r\n                // get events\r\n                gapi.client.calendar.events.list({\r\n                  'calendarId': 'primary',\r\n                  'timeMin': (new Date()).toISOString(),\r\n                  'showDeleted': false,\r\n                  'singleEvents': true,\r\n                  'maxResults': 10,\r\n                  'orderBy': 'startTime'\r\n                }).then(response => {\r\n                  const events = response.result.items\r\n                  console.log('EVENTS: ', events)\r\n                })\r\n                */\r\n            \r\n        \r\n              })\r\n            })\r\n          // }\r\n          setRemainder(true)\r\n        }\r\n\r\n        \r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          if(enquiryDate){\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n          }\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      // {\r\n      //   dataField: \"\",\r\n      //   text: \"\",\r\n      //   formatter: (cell,row) => {\r\n      //     return (\r\n      //       <button className=\"btn btn-primary\" onClick={ ()=>remainderHandler(row) }>Remainder</button>\r\n      //     );\r\n      //   },\r\n\r\n      // },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextFollowUp\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect,  forwardRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport { fetchConsultantLeadList } from '../actions/leadActions';\r\nimport {\r\n  Chart,\r\n  ArcElement,\r\n  LineElement,\r\n  BarElement,\r\n  PointElement,\r\n  BarController,\r\n  BubbleController,\r\n  DoughnutController,\r\n  LineController,\r\n  PieController,\r\n  PolarAreaController,\r\n  RadarController,\r\n  ScatterController,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  RadialLinearScale,\r\n  TimeScale,\r\n  TimeSeriesScale,\r\n  Decimation,\r\n  Filler,\r\n  Legend,\r\n  Title,\r\n  Tooltip\r\n} from 'chart.js'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { faCashRegister, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row } from '@themesberg/react-bootstrap';\r\nimport { CounterWidget } from \"../components/Widgets\";\r\n\r\nimport NextFollowUp from './NextFollowUp';\r\n\r\nconst ConsultantDashboard = ({history}) => {\r\n  var leadStatData = [], bookedData = [], lostLeadData = [], siteVisitData = []\r\n  var leadCount = 0, bookedCount = 0, lostLeadCount=0, siteVisitCount = 0\r\n\r\n  const d = new Date()\r\n\r\n  const monthArray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n  const [leadStats , setLeadStats] = useState([])\r\n  const [bookedStats , setBookedStats] = useState([])\r\n  const [bookedAvg , setBookedAvg] = useState(0)\r\n  const [thisMonthBooked , setThisMonthBooked] = useState(0)\r\n  const [lostLeadStats , setLostLeadStats] = useState([])\r\n  const [lostLeadAvg , setLostLeadAvg] = useState(0)\r\n  const [thisMonthLostLead , setThisMonthLostLead] = useState(0)\r\n  const [siteVisitStats , setSiteVisitStats] = useState([])\r\n  const [siteVisitAvg , setSiteVisitAvg] = useState(0)\r\n  const [thisMonthSiteVisit , setThisMonthSiteVisit] = useState(0)\r\n  const [totalLeads , setTotalLeads] = useState(0)\r\n  const [nextFollowUpCount, setNextFollowUpCount] = useState(0)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  const consultantLeadList = useSelector((state) => state.consultantLeadList)\r\n    const { loading, error, leadList:leadInfo } = consultantLeadList\r\n\r\n  useEffect(()=>{\r\n    if (user && user.role === 'Consultant') {\r\n      dispatch(fetchConsultantLeadList(user.consultantId))\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(leadInfo){\r\n      setTotalLeads(leadInfo.length)\r\n      for (var i = 0; i <= d.getMonth(); i++) {\r\n        leadCount = 0\r\n        bookedCount = 0\r\n        lostLeadCount = 0\r\n        siteVisitCount = 0\r\n     leadInfo.forEach(lead=>{\r\n      \r\n\r\n      if (parseInt(lead.createdAt.split('-')[1]) - 1 === i && d.getFullYear() === parseInt(lead.createdAt.split('-')[0])) {\r\n        leadCount += 1\r\n        if(lead.status === \"Booked\"){\r\n          bookedCount += 1\r\n        }else if(lead.status === \"Lost\"){\r\n          lostLeadCount += 1\r\n        }else if (lead.status === \"Visited\"){\r\n          siteVisitCount += 1\r\n        }\r\n    }\r\n     })\r\n\r\n     console.log(leadInfo)\r\n\r\n     leadStatData.push(leadCount)\r\n     bookedData.push(bookedCount)\r\n     lostLeadData.push(lostLeadCount)\r\n     siteVisitData.push(siteVisitCount)\r\n     \r\n     \r\n    }\r\n    setLeadStats(leadStatData)\r\n    setBookedStats(bookedData)\r\n    setLostLeadStats(lostLeadData)\r\n    setSiteVisitStats(siteVisitData)\r\n    if(bookedData[d.getMonth()] === bookedData[d.getMonth()-1] || bookedData[d.getMonth()-1] === 0){\r\n      setBookedAvg(0)\r\n    }else{\r\n    setBookedAvg((bookedData[d.getMonth()]-bookedData[d.getMonth()-1])/bookedData[d.getMonth()-1])\r\n    }\r\n    setThisMonthBooked(bookedData[d.getMonth()])\r\n    if(lostLeadData[d.getMonth()]===lostLeadData[d.getMonth()-1] || lostLeadData[d.getMonth()-1] === 0){\r\n      setLostLeadAvg(0)\r\n    }else{\r\n    setLostLeadAvg((lostLeadData[d.getMonth()]-lostLeadData[d.getMonth()-1])/lostLeadData[d.getMonth()-1])\r\n    }\r\n    setThisMonthLostLead(lostLeadData[d.getMonth()])\r\n    if(siteVisitData[d.getMonth()] === siteVisitData[d.getMonth()-1] || siteVisitData[d.getMonth()-1]===0){\r\n      setSiteVisitAvg(0)\r\n    }else{\r\n    setSiteVisitAvg((siteVisitData[d.getMonth()]-siteVisitData[d.getMonth()-1])/siteVisitData[d.getMonth()-1])\r\n    }\r\n    setThisMonthSiteVisit(siteVisitData[d.getMonth()])\r\n    setNextFollowUpCount(leadInfo.filter(lead => {if(lead.nextFollowUp){return lead.nextFollowUp.split('T')[0]  ===  d.toISOString().split('T')[0]}}).length)\r\n\r\n    }\r\n    \r\n  },[leadInfo])\r\n\r\n  \r\n\r\n  \r\n\r\n  Chart.register(\r\n    ArcElement,\r\n    LineElement,\r\n    BarElement,\r\n    PointElement,\r\n    BarController,\r\n    BubbleController,\r\n    DoughnutController,\r\n    LineController,\r\n    PieController,\r\n    PolarAreaController,\r\n    RadarController,\r\n    ScatterController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    TimeSeriesScale,\r\n    Decimation,\r\n    Filler,\r\n    Legend,\r\n    Title,\r\n    Tooltip\r\n    );\r\n\r\n    var data = {\r\n        labels: monthArray,\r\n        datasets: [\r\n            {\r\n                label: \"Leads\",\r\n                data: leadStats,\r\n                fill: true,\r\n                backgroundColor: \"#4A5073\",\r\n                // backgroundColor: [\r\n                //     'rgba(255, 99, 132, 1)',\r\n                //     'rgba(54, 162, 235, 1)',\r\n                //     'rgba(255, 206, 86, 1)',\r\n                //     'rgba(75, 192, 192, 1)',\r\n                //     'rgba(153, 102, 255, 1)',\r\n                //     'rgba(255, 159, 64, 1)',\r\n                // ],\r\n                // borderColor: \"#4A5073\"\r\n            },\r\n            {\r\n              label: \"Booked Leads\",\r\n              data: bookedStats,\r\n              fill: true,\r\n              backgroundColor: \"green\",\r\n              // backgroundColor: [\r\n              //     'rgba(255, 99, 132, 1)',\r\n              //     'rgba(54, 162, 235, 1)',\r\n              //     'rgba(255, 206, 86, 1)',\r\n              //     'rgba(75, 192, 192, 1)',\r\n              //     'rgba(153, 102, 255, 1)',\r\n              //     'rgba(255, 159, 64, 1)',\r\n              // ],\r\n              // borderColor: \"green\"\r\n          },\r\n          {\r\n            label: \"Lost Leads\",\r\n            data: lostLeadStats,\r\n            fill: true,\r\n            backgroundColor: \"red\",\r\n            // backgroundColor: [\r\n            //     'rgba(255, 99, 132, 1)',\r\n            //     'rgba(54, 162, 235, 1)',\r\n            //     'rgba(255, 206, 86, 1)',\r\n            //     'rgba(75, 192, 192, 1)',\r\n            //     'rgba(153, 102, 255, 1)',\r\n            //     'rgba(255, 159, 64, 1)',\r\n            // ],\r\n            // borderColor: \"red\"\r\n        },\r\n        {\r\n          label: \"Site Visit\",\r\n          data: siteVisitStats,\r\n          fill: true,\r\n          // lineTension: 0.1,\r\n          // pointBorderColor: '#111',\r\n          // pointBackgroundColor: '#ff4000',\r\n          // pointBorderWidth: 2,\r\n          backgroundColor: \"yellow\",\r\n          // backgroundColor: [\r\n          //     'rgba(255, 99, 132, 1)',\r\n          //     'rgba(54, 162, 235, 1)',\r\n          //     'rgba(255, 206, 86, 1)',\r\n          //     'rgba(75, 192, 192, 1)',\r\n          //     'rgba(153, 102, 255, 1)',\r\n          //     'rgba(255, 159, 64, 1)',\r\n          // ],\r\n          // borderColor: \"yellow\"\r\n      }\r\n\r\n        ]\r\n    };\r\n\r\n    const data1 = {\r\n      labels: ['Booked Leads', 'Lost Leads', 'Site Visit'],\r\n      datasets: [\r\n        {\r\n          label: 'Lead Statistics',\r\n          data: [thisMonthBooked, thisMonthLostLead, thisMonthSiteVisit],\r\n          backgroundColor: [\r\n            'rgba(0,128,0 , 0.2)',\r\n            'rgba(255, 0, 0, 0.2)',\r\n            'rgba(255, 255, 0, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(0,128,0 , 1)',\r\n            'rgba(255, 0, 0, 1)',\r\n            'rgba(255, 255, 0, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n    const options = {\r\n      responsive: true,\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"left\"\r\n        }]\r\n      }\r\n    };\r\n\r\n    const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n \r\n  const nextFollowUpHandler = () => {\r\n    history.push('/manager/nextfollowup')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-md-center mt-5\">\r\n        {/* <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Total Leads\"\r\n            value={totalLeads}\r\n            percentage={10.57}\r\n            leadStats = {leadStats}\r\n          />\r\n        </Col> */}\r\n        {/* <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Booked Leads\"\r\n            value={thisMonthBooked}\r\n            percentage={bookedAvg}\r\n          />\r\n        </Col> */}\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n        <div onClick={()=>nextFollowUpHandler()} style={{cursor: \"pointer\"}}>\r\n          <CounterWidget\r\n            category=\"Next Follow Up\"\r\n            title={nextFollowUpCount}\r\n            period=\"today\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"         \r\n          /></div>\r\n        </Col>\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Booked Leads\"\r\n            title={thisMonthBooked +`/${user && user.setMilestone.bookings}`}\r\n            period=\"monthly\"\r\n            percentage={bookedAvg}\r\n            icon={faChartLine}\r\n            iconColor=\"shape-secondary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Site Visited\"\r\n            title={thisMonthSiteVisit +`/${user && user.setMilestone.siteVisits}`}\r\n            period=\"monthly\"\r\n            percentage={siteVisitAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} xl={6} className=\"mb-4\">\r\n          <CounterWidget\r\n            category=\"Lost Leads\"\r\n            title={thisMonthLostLead +`/${user && user.setMilestone.leads}`}\r\n            period=\"monthly\"\r\n            percentage={lostLeadAvg}\r\n            icon={faCashRegister}\r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n        </Col>\r\n\r\n\r\n        \r\n      </Row>\r\n      <Row className=\"p-5\">\r\n        <Col md={8}>\r\n        {(leadStats && leadStats.length>0) && <Bar data={data}  />}\r\n        </Col>\r\n        <Col md={4}>\r\n        <Doughnut data={data1} />\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n          <h2>Next Follow Up</h2>\r\n              <NextFollowUp/>\r\n          </Col>\r\n          </Row>\r\n\r\n          {/* <Row>\r\n          <Col xs={12}>\r\n              <LeadStatsTable bookedStats={bookedStats} lostLeadStats={lostLeadStats} siteVisitStats={siteVisitStats} monthArray={monthArray}/>\r\n          </Col>\r\n          </Row> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConsultantDashboard","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Image, Alert} from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport Preloader from '../components/Preloader';\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst Leads = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === \"Consultant\") {\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n         useEffect(() => {\r\n           setTimeout(()=>{\r\n            const config = {\r\n              headers: {\r\n                Authorization: `Bearer ${user.token}`,\r\n              },\r\n            } \r\n\r\n            axios.get(`/api/leads/consultant`, config)\r\n            .then(res => {\r\n                const lead = res.data;\r\n                setLeadData(lead.leadsList)\r\n                setLoading(false)                     \r\n            }).catch(function (error) {\r\n              // handle error\r\n              setError(true)\r\n            })\r\n          }, 3000)\r\n          \r\n\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/consultant/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        csvExport: false,\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n        filter: textFilter(),\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        csvExport: false,\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    A simple primary alert — check it out!\r\n  </Alert>)\r\n  :  (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Leads\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { managerList, teamLeadList, asmList, consultantsUnderManager } from \"./../actions/userActions\";\r\nimport { addLeadData} from \"./../actions/leadActions\";\r\nimport { getProjectDetails } from \"./../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nexport default ({history}) => {\r\n    const [lead, setLead] = useState({})\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    // var [projectData, setProjectData] = useState({\r\n    //   mainProject: \"\",\r\n    //   subporject: \"\",\r\n    //   projectId: \"\"\r\n    // })\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    const [booked, setBooked] = useState(false)\r\n    // const [payment, setPayment] = useState({\r\n    //   firstInstallment: 0,\r\n    //   secondInstallment: 0,\r\n    //   thirdInstallment: 0\r\n    // })\r\n    var [firstInstallment, setFirstIntallment] = useState(0)\r\n    var [secondInstallment, setSecondIntallment] = useState(0) \r\n    var [thirdInstallment, setThirdIntallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [teamLead, setTeamLead] = useState('')\r\n    const [index, setIndex] = useState(0);\r\n    const [manager, setManager] = useState('');\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addLead = useSelector((state) => state.addLead)\r\n    const { loading, error, leadInfo } = addLead\r\n\r\n    const projectDetails = useSelector((state) => state.projectDetails)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = projectDetails\r\n\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === 'Consultant') {\r\n        console.log(user)\r\n        if(user.projectId){\r\n        dispatch(getProjectDetails(user.projectId))\r\n        }\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n    useEffect(()=>{\r\n      if(projectInfo){\r\n        console.log(55, projectInfo)\r\n        setMainProject(projectInfo.mainProject)\r\n        setProjectId(projectInfo.projectId)\r\n        setSubProject(projectInfo.subProject[0])\r\n        setStatus('Yet to Visit')\r\n        setLeadType('Hot')\r\n      }\r\n    }, [dispatch, projectInfo])\r\n\r\n    console.log(mainProject, subProject)\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()  \r\n      setLead(\r\n        lead.createdUser = user._id, \r\n        lead.assignedConsultant = user.consultantId,\r\n        lead.consultantName= user.name,\r\n        lead.enquiryDate= enquiryDate,\r\n        lead.customerName= customer,\r\n        lead.contactNumber= contactNumber,\r\n        lead.alternateNumber= alternateNumber,\r\n        lead.project ={\r\n          mainProject: mainProject,\r\n          subProject: subProject,\r\n          projectId: user.project\r\n        },\r\n        lead.leadScore= leadScore,\r\n        lead.leadType= leadType,\r\n        lead.status= status,\r\n        lead.remarks= remarks,\r\n        lead.nextFollowUp= nextFollow,\r\n        lead.managerRemarks= managerRemarks,\r\n        lead.booked= booked,\r\n        lead.payment = {\r\n          firstInstallment: firstInstallment,\r\n          secondInstallment: secondInstallment,\r\n          thirdInstallment: thirdInstallment,\r\n        },\r\n        lead.totalSqft= totalSqft\r\n        )\r\n      dispatch(addLeadData(lead))\r\n      history.push('/leads')\r\n  }\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e) =>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" value={enquiryDate} onChange={(e) => setEnquiryDate(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={contactNumber} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"mob\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n           \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Assigned Consultant\" value={user && user.name} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"No Project\" value={mainProject} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                  <Form.Label>Sub Project</Form.Label>\r\n                  <Form.Select required defaultValue={subProject? subProject : 'Not Found'} onChange={(e) => setSubProject(e.target.value)}>\r\n                    <option key={2001} value=''>Select</option>\r\n                  {\r\n                      projectInfo  && (projectInfo.subProject.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                  </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>Lead Type</Form.Label>\r\n                <Form.Select required value={leadType} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Select required value={status} onChange={(e) => setStatus(e.target.value)}>\r\n                  <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                  <option value=\"Visited\">Visited</option>\r\n                  <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                  <option value=\"Detail Shared\">Detail Shared</option>\r\n                  <option value=\"Not Interested\">Not Interested</option>\r\n                  <option value=\"RFR\">RFR</option>\r\n                  <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" value={nextFollow} min={enquiryDate} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n                                 \r\n         </Row>\r\n\r\n         <Row>\r\n\r\n        \r\n            \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks} onChange={(e) => setManagerRemarks(e.target.value)} disabled/>\r\n              </Form.Group>\r\n            </Col>                      \r\n         </Row>\r\n\r\n          <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstIntallment(e.target.value && (firstInstallment = parseInt(e.target.value)))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondIntallment(secondInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdIntallment(thirdInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Add Lead & Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n   )}\r\n   </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst LostLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === 'Consultant') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          } \r\n\r\n            axios.get(`/api/leads/consultant`,config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList.filter(lead => lead.status === \"Not Interested\" );\r\n                setLeadData(lead) \r\n                setLoading(false)                    \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n        \r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LostLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\n\r\nimport { fetchLeadList, updateLeadData, fetchleadDetails, deleteLead} from '../actions/leadActions';\r\nimport { addCancelLeadData } from '../actions/cancellationLeadActions'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nconst SiteVisitsLeads = ({history}) => {\r\n\r\n  // var element = document.getElementsByTagName(\"table\");\r\n  // element.classList.add(\"table-dark\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchLeadList())\r\n  // }, [])\r\n\r\n  // const leadList = useSelector((state) => state.leadList)\r\n  //   const { loading, error, leadInfo } = leadList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === 'Consultant') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n  const selectOptions = {\r\n    0: 'Hot',\r\n    1: 'Warm',\r\n    2: 'Cold'\r\n  };\r\n\r\n  const selectOptions2 = {\r\n    0: 'Yet to Visit',\r\n    1: 'Visited',\r\n    2: 'Visit Confirmed',\r\n    3: 'Detail Shared',\r\n    4: 'Lost',\r\n    5: 'Booked'\r\n  };\r\n\r\n  const [leadData, setLeadData] = useState([])\r\n\r\n         useEffect(() => {\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          } \r\n\r\n            axios.get(`/api/cpm/lead/list`, config)\r\n            .then(res => {\r\n                const lead = res.data.leadsList && res.data.leadsList.filter(lead => lead.status === \"Visited\");\r\n                setLeadData(lead)                     \r\n            })\r\n         }, [])\r\n\r\n\r\n        const editTableHandler = (lead) => {\r\n          history.push(`/leads/${lead._id}/edit`)\r\n        }\r\n       \r\n\r\n        const { ExportCSVButton } = CSVExport;\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"leadData\",\r\n        text: \"Serial No.\",\r\n        formatter :(row,index, leadData) => {\r\n          return leadData+1\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"customerName\",\r\n        text: \"Customer\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"enquiryDate\",\r\n        text: \"Enquiry Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"contactNumber\",\r\n        text: \"Contact Number\"\r\n      },\r\n      {\r\n        dataField: \"consultantName\",\r\n        text: \"Consultant\",\r\n        sort: true,\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.mainProject\",\r\n        text: \"Main Project\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"project.subProject\",\r\n        text: \"Sub Project\",\r\n        filter: textFilter()\r\n      },\r\n     \r\n      {\r\n        dataField: \"leadScore\",\r\n        text: \"lead Score\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"leadType\",\r\n        text: \"lead Type\",\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: \"status\",\r\n        text: \"Status\",\r\n      },\r\n      {\r\n        dataField: \"remarks\",\r\n        text: \"Remarks\",\r\n      },\r\n      {\r\n        dataField: \"nextFollowUp\",\r\n        text: \"Next Follow Up Date\",\r\n        sort: true,\r\n        formatter: (enquiryDate) => {\r\n          return new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n        },\r\n        filter: dateFilter({\r\n          defaultValue: {comparator: Comparator.GT }\r\n        })\r\n      },\r\n      {\r\n        dataField: \"managerRemarks\",\r\n        text: \"Manager Remarks\",\r\n      },\r\n      {\r\n        dataField: \"\",\r\n        text: \"\",\r\n        formatter: (cell,row) => {\r\n          return (\r\n            <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n          );\r\n        },\r\n\r\n      },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ToolkitProvider\r\n        keyField=\"_id\"\r\n        data={ leadData }\r\n        columns={ columns }\r\n        exportCSV\r\n      >\r\n        {\r\n          props => (\r\n            <div>\r\n              <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n              <hr />\r\n              {/* <BootstrapTable { ...props.baseProps } /> */}\r\n              <BootstrapTable\r\n                   { ...props.baseProps }\r\n                  bootstrap4\r\n                  keyField=\"_id\"\r\n                  data={leadData}\r\n                  columns={columns}\r\n                  // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                  filter={ filterFactory() }\r\n                  pagination={paginationFactory({ sizePerPage: 10 })}\r\n                  striped\r\n                  table-dark\r\n                />\r\n                  \r\n            </div>\r\n          )\r\n        }\r\n      </ToolkitProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteVisitsLeads\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport {activityLogData} from '../actions/activityLogActions'\r\nimport { fetchUserDetail } from '../actions/userActions';\r\nimport { fetchConsultantLeadList } from '../actions/leadActions';\r\n\r\n// delete lead -> null remaining\r\n\r\nconst ActivityLog = ({history, match}) => {\r\n  const id = match.params.id\r\n  const d = new Date()\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n  const [bookingMonthlyStatus, setBookingMonthlyStatus] = useState(0)\r\n  const [siteVisitsMonthlyStatus, setSiteVisitsMonthlyStatus] = useState(0)\r\n  const [leadMonthlyStatus, setLeadMonthlyStatus] = useState(0)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const activityLogDetail = useSelector((state) => state.activityLogDetail)\r\n    const { loading , error, activityLog } = activityLogDetail\r\n\r\n    const userDetail = useSelector((state) => state.userDetail)\r\n    const { userData } = userDetail\r\n\r\n\r\n    const consultantLeadList = useSelector((state) => state.consultantLeadList)\r\n    const {leadList: consultantLeads } = consultantLeadList\r\n\r\n  useEffect(()=>{\r\n    if(userInfo && userInfo.role === 'Consultant'){\r\n    dispatch(activityLogData(id))\r\n    dispatch(fetchUserDetail(id))\r\n    }else{\r\n      history.push(`/login`)\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(consultantLeadList){\r\n      // setBookingMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'booked' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      // setSiteVisitsMonthlyStatus(consultantLeads.leadsList.filter(lead => lead.status === 'visited' && new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      // setLeadMonthlyStatus(consultantLeads.leadsList.filter(lead =>new Date(lead.updatedAt).getFullYear() === d.getFullYear() && new Date(lead.updatedAt).getMonth() === d.getMonth()).length)\r\n      console.log(consultantLeadList)\r\n    }\r\n    else if(userData){\r\n      if(userData.role === \"Consultant\"){\r\n        dispatch(fetchConsultantLeadList(userData._id))\r\n      }\r\n    }\r\n\r\n  }, [userData])\r\n\r\n  useEffect(()=>{\r\n    if(activityLog && activityLog.activityLogData && activityLog.activityLogData.length>0){\r\n      setName(activityLog.activityLogData[0].member.name.charAt(0).toUpperCase()+activityLog.activityLogData[0].member.name.slice(1))\r\n    }\r\n  },[activityLog])\r\n\r\n  const leadHandler = (activity) => {\r\n    history.push(`/leads/${activity.leadId._id}/edit`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) : activityLog && activityLog.activityLogData.length > 0 ?(\r\n      <>\r\n      <h3 className='mb-3'>{activityLog && activityLog.activityLogData && (name + ' - ' +(activityLog.activityLogData[0].member.role)+'') }</h3>\r\n    <Row className=\"\">\r\n      <Col xs={12} sm={6} xl={8} className=\"mb-4 d-sm-block\">\r\n    <div className=''>\r\n      {(activityLog && activityLog.activityLogData) && activityLog.activityLogData.map((activity, i) => (\r\n      <Card className='px-3 py-3 mb-2 d-flex justify-content-between align-items-center flex-row' key={i}>\r\n        <div>\r\n        <a className={`mb-3 action-text ${activity.leadId === null ? 'deleted-lead':'' }`} onClick={()=>leadHandler(activity)} > {name} {activity.action}</a>\r\n        </div>\r\n        <div className='me-0 mt-2'>\r\n        {/* <p className='mb-1'>{new Date(activity.createdAt).toDateString()}</p> */}\r\n        <p className='mb-1' style={{\"color\":\"#69acbf\"}}>  <TimeAgo date={new Date(activity.createdAt)} /> </p>\r\n        </div>\r\n      </Card>\r\n      ))\r\n  }\r\n  </div>\r\n  </Col>\r\n  \r\n      <Col xs={12} sm={6} xl={4} className=\"mb-4 d-sm-block\">\r\n      <CounterWidget\r\n            category=\"Bookings\"\r\n            title={userData? `${bookingMonthlyStatus}/${userData.setMilestone.bookings}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n          <br/>\r\n\r\n      <CounterWidget\r\n            category=\"Site Visits\"\r\n            title={userData? `${siteVisitsMonthlyStatus}/${userData.setMilestone.siteVisits}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n<br/>\r\n      <CounterWidget\r\n            category=\"Leads\"\r\n            title={userData? `${leadMonthlyStatus}/${userData.setMilestone.leads}` : 0}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n      </Col>\r\n      </Row>\r\n    </>\r\n  ):(\r\n    <div className='p-5 d-flex justify-content-center align-items-center'>\r\n      <h1>\"No Activity\"</h1>\r\n    </div>\r\n  )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ActivityLog","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup, Modal, Form } from '@themesberg/react-bootstrap';\r\n// import { Form } from 'react-bootstrap';\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport { activityLogData } from '../actions/activityLogActions'\r\nimport { deleteTask, fetchIndividualTasks } from '../actions/taskManagerActions';\r\nimport { fetchUserList } from '../actions//userActions'\r\nimport { addTask, updateTask } from '../actions/taskManagerActions';\r\nimport { UPDATE_TASK_RESET, DELETE_TASK_RESET } from '../constants/taskManagerContants';\r\n\r\n\r\n// delete lead -> null remaining\r\n\r\nconst TaskManager = ({ history, match }) => {\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showEditDefault, setShowEditDefault] = useState(false);\r\n    const [task, setTask] = useState('')\r\n    const [dueDate, setDueDate] = useState('')\r\n    const [assignTo, setAssignTo] = useState('')\r\n    const [note, setNote] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [editedTask, setEditedTask] = useState('')\r\n    const [previousTask, setPreviousTask] = useState('')\r\n    const [editedDueDate, setEditedDueDate] = useState('')\r\n    const [editedAssignTo, setEditedAssignTo] = useState('')\r\n    const [editedNote, setEditedNote] = useState('')\r\n    const [editedStatus, setEditedStatus] = useState('')\r\n    \r\n\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n\r\n    const handleEditClose = () => setShowEditDefault(false);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const fetchUserTasks = useSelector((state) => state.fetchIndividualTasks)\r\n    const { loading, error, taskList } = fetchUserTasks\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { users } = userList\r\n\r\n    const addTaskData = useSelector((state) => state.addTask)\r\n    const { loading: taskLoading, error: taskError, addedTask } = addTaskData\r\n\r\n    const updateTaskData = useSelector((state) => state.updateTask)\r\n    const { success } = updateTaskData\r\n\r\n    const deleteTaskData = useSelector((state) => state.deleteTask)\r\n    const { success: deleteSuccess } = deleteTaskData\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.role === \"Consultant\") {\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n            dispatch(fetchUserList())\r\n        } else {\r\n            history.push(`/login`)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(success) {\r\n            dispatch({\r\n                type: UPDATE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    },[success])\r\n\r\n    useEffect(()=>{\r\n        if(deleteSuccess) {\r\n            dispatch({\r\n                type: DELETE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    }, [deleteSuccess])\r\n\r\n    const addtaskHandler = (e) => {\r\n        e.preventDefault()\r\n       \r\n        dispatch(addTask({\r\n            task,\r\n            member: userInfo._id,\r\n            dueDate,\r\n            note,\r\n            assignTo : assignTo? assignTo: userInfo._id\r\n        }))\r\n\r\n        setShowDefault(false)\r\n        dispatch(fetchIndividualTasks(userInfo._id))\r\n        setAssignTo('')\r\n        setDueDate('')\r\n        setNote('')\r\n        setStatus('')\r\n        setTask('')\r\n        \r\n    }\r\n\r\n    const taskStatusHandler = (e, task) => {\r\n      \r\n        if(task.status === 'Pending'){\r\n            task.status = 'Completed'\r\n        }else{\r\n            task.status ='Pending'\r\n        }\r\n\r\n        dispatch(updateTask(task))\r\n    }\r\n\r\n    const deleteTaskHandler = (e, task) => {\r\n        dispatch(deleteTask(task._id))\r\n    }\r\n\r\n\r\n    const editTaskHandler = (e,task) => {\r\n        e.preventDefault()\r\n        setPreviousTask(task)\r\n        setShowEditDefault(true)\r\n\r\n        setEditedTask(task.task)\r\n        setEditedDueDate(task.dueDate)\r\n        setEditedNote(task.note)\r\n        setEditedAssignTo(task.assignTo)\r\n    }\r\n\r\n    const saveEditedTaskHandler = (e, task) => {\r\n        e.preventDefault()\r\n        dispatch(updateTask({\r\n            _id : previousTask._id,\r\n            task : editedTask,\r\n            note: editedNote,\r\n            status : editedStatus,\r\n            member: userInfo._id,\r\n            assignTo: editedAssignTo,\r\n            dueDate: editedDueDate\r\n        }))\r\n\r\n\r\n        setShowEditDefault(false)\r\n        setEditedAssignTo('')\r\n        setEditedDueDate('')\r\n        setEditedNote('')\r\n        setEditedStatus('')\r\n        setEditedTask('')\r\n    }\r\n\r\n    console.log(editedStatus)\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<Preloader />) : error ? (<Alert>{error}</Alert>) : true ? (\r\n                <>\r\n                    <Row className='pt-3 pb-3'>\r\n                        <Col>\r\n                        {/* <a href=\"#\" className='btn btn-primary'>Add New Task</a> */}\r\n                        <Button variant=\"primary\" className=\"my-3\" onClick={() => setShowDefault(true)}>Add New Task</Button>\r\n                        <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                            <Modal.Header>\r\n                            <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                            <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form className='p-3' onSubmit={(e)=>addtaskHandler(e)}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Task</Form.Label>\r\n                                <Form.Control required  type=\"text\" onChange={(e) => setTask(e.target.value)}/>\r\n                                {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                 </Form.Group>\r\n                                 <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                    <Form.Label>Due time</Form.Label>\r\n                                    <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" defaultValue={dueDate}  onChange={(e) => {setDueDate(e.target.value)}}/>\r\n                                </Form.Group>\r\n                                    \r\n\r\n                                    {/* <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                        <Form.Label>Assign to</Form.Label>\r\n                                        <Form.Select value={assignTo || ''} onChange={(e) => setAssignTo(e.target.value)}>\r\n                                        <option value=\" \">Select</option>\r\n                                        \r\n                                        {users && users.map((user, i) => (\r\n                                            \r\n                                        (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                            \r\n                                        ))}\r\n                                        </Form.Select>\r\n                                    </Form.Group> */}\r\n\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Note</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" onChange={(e) => setNote(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <button className=\"btn btn-primary\" type='submit'>Add Task</button>\r\n                            </Form>\r\n                                </Modal.Body>\r\n                                {/* <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    I Got It\r\n                                </Button>\r\n                                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                </Modal.Footer> */}\r\n                            </Modal>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        {(taskList && taskList.length>0)? taskList.map((task, i)=>(\r\n                        <Col xs={12} sm={12} xl={12} className=\"mb-4 d-sm-block\" key={i}>\r\n                            <div className=\"hover-state rounded-0 rounded-top py-3 card border-bottom\">\r\n                                <div className=\"d-sm-flex align-items-center flex-wrap flex-lg-nowrap py-0 card-body\">\r\n                                    <div className=\"text-left text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check me-sm-2\">\r\n                                            <input type=\"checkbox\" id=\"task-584be4d2-bec0-4fb1-80b1-690358ca4809\" className=\"form-check-input\"\r\n                                                value=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"px-0 mb-4 mb-md-0 col-lg-9 col-9\">\r\n                                        <div className=\"mb-2\">\r\n                                            <h5 className=\"\">{task.task}</h5>\r\n                                            <div className=\"d-block d-sm-flex\">\r\n                                                <div>\r\n                                                    <h6 className=\"fw-normal text-gray mb-3 mb-sm-0\"><svg width={15} xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                        className=\"icon icon-xxs text-gray-500 me-2\">\r\n                                                        <path fillRule=\"evenodd\"\r\n                                                            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\r\n                                                            clipRule=\"evenodd\"></path>\r\n                                                    </svg> {new Date(task.dueDate).toLocaleDateString() + ` (` + new Date(task.dueDate).toLocaleTimeString() + `)`}</h6>\r\n                                                </div>\r\n                                                <div className=\"ms-sm-3\" onClick={(e) => taskStatusHandler(e, task)} style={{cursor: 'pointer'}}>\r\n                                                    {task.status === 'Pending'? <span className=\"super-badge badge bg-warning\">In Progress</span> : <span className=\"super-badge badge bg-success\">Completed</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"fw-bold text-dark card-link\">\r\n                                                <span className=\"fw-normal text-gray \">{task.note && task.note}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fas fa-edit\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> editTaskHandler(e,task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fa fa-trash red\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> deleteTaskHandler(e, task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    \r\n                                    <div\r\n                                        className=\"d-none d-lg-block d-xl-inline-flex align-items-center ms-lg-auto text-right justify-content-center px-md-0 col-xl-1 col-lg-1 col-sm-1 col-10\">\r\n                                        <div className=\"d-flex justify-content-end dropdown\">\r\n                                            <button id=\"react-aria8234133146-25\" aria-expanded=\"false\" type=\"button\"\r\n                                                className=\"text-dark dropdown-toggle-split m-0 p-0 dropdown-toggle btn btn-link\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                    className=\"icon icon-xs icon-dark\">\r\n                                                    <path\r\n                                                        d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Modal as={Modal.Dialog} centered show={showEditDefault} onHide={handleEditClose}>\r\n                                    <Modal.Header>\r\n                                    <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                                    <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditClose} />\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form className='p-3' onSubmit={(e)=>saveEditedTaskHandler(e, task)}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control required  type=\"text\"  value={editedTask} onChange={(e)=> setEditedTask(e.target.value)}/>\r\n                                        {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                            <Form.Label>Due time</Form.Label>\r\n                                            <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" value={editedDueDate.split('.')[0]}  onChange={(e) => {setEditedDueDate(e.target.value)}}/>\r\n                                        </Form.Group>\r\n                                            \r\n\r\n                                            {/* <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Assign to</Form.Label>\r\n                                                <Form.Select value={editedAssignTo} onChange={(e) => setEditedAssignTo(e.target.value)}>\r\n                                                <option value=\" \">Select</option>\r\n                                                \r\n                                                {users && users.map((user, i) => (\r\n                                                    \r\n                                                (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                                    \r\n                                                ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group> */}\r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Status</Form.Label>\r\n                                                <Form.Select value={editedStatus} onChange={(e) => setEditedStatus(e.target.value)}>\r\n                                                <option value=\"Pending\">In Progress</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Note</Form.Label>\r\n                                                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" value={editedNote} onChange={(e) => setEditedNote(e.target.value)}/>\r\n                                            </Form.Group>\r\n                                            <button className=\"btn btn-primary\" type='submit'>Save Task</button>\r\n                                    </Form>\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            I Got It\r\n                                        </Button>\r\n                                        <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        </Modal.Footer> */}\r\n                                    </Modal>\r\n\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        )): (\r\n                            <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                                <h1>\"No Task\"</h1>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                    <h1>\"No Task\"</h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskManager","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nimport {fetchleadDetails, updateLeadData, deleteLead } from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport { addCancelLeadData } from \"../actions/cancellationLeadActions\";\r\nimport { consultantList } from \"../actions/userActions\";\r\n\r\n\r\n\r\nexport default ({match, history}) => {\r\n    const leadId = match.params.id\r\n\r\n    var gapi = window.gapi\r\n\r\n    var CLIENT_ID = \"1013896874235-1htic5jfq2uhg6s8kjt7130t98a0kd86.apps.googleusercontent.com\"\r\n    var API_KEY = \"AIzaSyBoJQl0S2P5iI5LxS4FQThPKm8b5rVagwc\"\r\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\r\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\r\n\r\n    const [createdUser, setCreatedUser] = useState('')\r\n    const [assignedUser, setAssignedUser] = useState('')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    var [firstInstallment, setFirstInstallment] = useState(0)\r\n    var [secondInstallment, setSecondInstallment] = useState(0)\r\n    var [thirdInstallment, setThirdInstallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [index, setIndex] = useState(0)\r\n    const [remainder, setRemainder] = useState(false)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const leadDetails = useSelector((state) => state.leadDetails)\r\n    const { loading, error, leadInfo } = leadDetails\r\n\r\n    const updateLead = useSelector((state) => state.updateLead)\r\n    const { loading: loadingUpdate, error: errorUpdate , success: successUpdate } = updateLead\r\n\r\n    const Projects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = Projects\r\n\r\n    const fetchConsultants = useSelector((state) => state.fetchConsultants)\r\n    const { loading: loadingConsultants, error: errorConsultants, consultants: consultantsList } = fetchConsultants\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n\r\n    useEffect(()=>{\r\n      if (user && user.role === 'Consultant') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n\r\n\r\n    useEffect(() => {\r\n      if(successUpdate){\r\n        history.push('/consultant/leads')\r\n      }\r\n    },[successUpdate])\r\n\r\n    useEffect(()=>{\r\n    }, [mainProject, subProject])\r\n\r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantList())\r\n    },[])\r\n  \r\n    useEffect(() => {\r\n     \r\n      if (!leadInfo || leadInfo._id !== leadId) {\r\n        dispatch(fetchleadDetails(leadId))\r\n      }else{ \r\n        setCreatedUser(leadInfo.createdUser)\r\n        setAssignedUser(leadInfo.assignedConsultant)\r\n        setConsultant(leadInfo.consultantName)\r\n        setCustomer(leadInfo.customerName)\r\n        setEnquiryDate(leadInfo.enquiryDate)\r\n        setContactNumber(leadInfo.contactNumber)\r\n        setAlternateNumber(leadInfo.alternateNumber)\r\n        setMainProject(leadInfo.project.mainProject)\r\n        setSubProject(leadInfo.project.subProject)\r\n        setProjectId(leadInfo.project.projectId)\r\n        setLeadType(leadInfo.leadType)\r\n        setLeadScore(leadInfo.leadScore)\r\n        setStatus(leadInfo.status)\r\n        setRemarks(leadInfo.remarks)\r\n        setNextFollow(leadInfo.nextFollowUp)\r\n        setManagerRemarks(leadInfo.managerRemarks)\r\n        setFirstInstallment(leadInfo.payment.firstInstallment)\r\n        setSecondInstallment(leadInfo.payment.secondInstallment)\r\n        setThirdInstallment(leadInfo.payment.thirdInstallment)\r\n        setTotalSqft(leadInfo.totalSqft? leadInfo.totalSqft : 0)\r\n        setRemainder(leadInfo.remainder? leadInfo.remainder : false)\r\n      }\r\n    }, [dispatch, leadInfo, successUpdate])\r\n\r\n    \r\n\r\n    function findSubProject(project) {\r\n      return project.mainProject === mainProject\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(mainProject){\r\n        if(projectInfo)\r\n        {\r\n          const main = projectInfo.findIndex(findSubProject);\r\n        setIndex(main)\r\n\r\n      }\r\n      }\r\n    },[mainProject])\r\n\r\n\r\n\r\n    const consultantHandler = (e) => {\r\n      setAssignedUser(consultantsList[e.target.value].consultantId)\r\n        setConsultant(consultantsList[e.target.value].name)\r\n     }\r\n\r\n     const deleteHandler = (e) => {\r\n       e.preventDefault()\r\n      if (window.confirm('Are you sure?')){\r\n      dispatch(deleteLead(leadId))\r\n      }\r\n     }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n        dispatch(\r\n          updateLeadData({\r\n            _id: leadId,\r\n            createdUser,\r\n            assignedConsultant: assignedUser,\r\n            customerName:customer,\r\n            consultantName:consultant,\r\n            enquiryDate,\r\n            contactNumber,\r\n            alternateNumber,\r\n            project: {\r\n              mainProject: mainProject,\r\n              subProject: subProject,\r\n              projectId: projectId\r\n            },\r\n            leadScore,\r\n            leadType,\r\n            status,\r\n            remarks,\r\n            managerRemarks,\r\n            nextFollowUp:nextFollow,\r\n            payment:{\r\n              firstInstallment: firstInstallment,\r\n              secondInstallment: secondInstallment,\r\n              thirdInstallment: thirdInstallment\r\n            },\r\n            totalSqft, \r\n            cancellation : false,\r\n            remainder\r\n          }))\r\n    }\r\n\r\n    const projectHandler = (e) => {\r\n      setMainProject(e.target.value)\r\n    }\r\n\r\n  //   const cancelLeadHandler = (e, id) => {\r\n  //     e.preventDefault()\r\n  //     if (window.confirm('Are you sure')) {\r\n  //         dispatch(addCancelLeadData({\r\n  //           _id: leadId,\r\n  //           createdUser,\r\n  //           assignedConsultant: assignedUser,\r\n  //           customerName:customer,\r\n  //           consultantName: consultant,\r\n  //           enquiryDate,\r\n  //           contactNumber,\r\n  //           alternateNumber,\r\n  //           project: {\r\n  //             mainProject: mainProject,\r\n  //             subProject: subProject,\r\n  //             projectId: projectId\r\n  //           },\r\n  //           leadScore,\r\n  //           leadType,\r\n  //           status,\r\n  //           remarks,\r\n  //           managerRemarks,\r\n  //           nextFollowUp:nextFollow,\r\n  //           payment:{\r\n  //             firstInstallment: firstInstallment,\r\n  //             secondInstallment: secondInstallment,\r\n  //             thirdInstallment: thirdInstallment\r\n  //           },\r\n  //           totalSqft, \r\n  //           cancellation : true\r\n  //         }))\r\n  //         dispatch(deleteLead(leadId)) \r\n  //         history.push('/leads')\r\n  //       }\r\n\r\n  // }\r\n\r\n  const handleClick = () => {\r\n    gapi.load('client:auth2', () => {\r\n      // console.log('loaded client')\r\n\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n\r\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n      gapi.auth2.getAuthInstance().signIn()\r\n      .then(() => {\r\n        \r\n        var event = {\r\n          'summary': leadInfo.customerName,\r\n          'location': '',\r\n          'description': leadInfo.project.subProject,\r\n          'start': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'end': {\r\n            'dateTime': new Date(nextFollow).toISOString().replace('Z',''),\r\n            'timeZone': 'Asia/Kolkata'\r\n          },\r\n          'recurrence': [\r\n            'RRULE:FREQ=DAILY;COUNT=1'\r\n          ],\r\n          'attendees': [\r\n            {'email': 'deve.metromindz@gmail.com'}\r\n          ],\r\n          'reminders': {\r\n            'useDefault': false,\r\n            'overrides': [\r\n              {'method': 'email', 'minutes': 24 * 60},\r\n              {'method': 'popup', 'minutes': 10}\r\n            ]\r\n          }\r\n        }\r\n\r\n        var request = gapi.client.calendar.events.insert({\r\n          'calendarId': 'primary',\r\n          'resource': event,\r\n        })\r\n\r\n        request.execute(event => {\r\n          console.log(event)\r\n          window.open(event.htmlLink)\r\n        })\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    { loading && loadingProject ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e)=>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer || ''} onChange={(e) => setCustomer(e.target.value)} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" defaultValue={enquiryDate.split('.')[0]}  onChange={(e) => {setEnquiryDate(e.target.value)}} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Row>\r\n          \r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"contact\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control required type=\"tel\" placeholder=\"987654321\" value={contactNumber || ''} onChange={(e) => setContactNumber(e.target.value)} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select value={consultantsList && consultantsList.findIndex(c=>c.name===consultant)} onChange={(e) => consultantHandler(e)} disabled>\r\n                  <option key={300} value=\"\">Select</option>\r\n                 \r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n            </Row>\r\n\r\n            <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Select value={mainProject? mainProject : ''} onChange={(e) => projectHandler(e)}>\r\n                <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && (projectInfo.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro.mainProject}>{pro.mainProject}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                <Form.Label>Sub Project</Form.Label>\r\n                <Form.Select value={subProject} onChange={(e) => setSubProject(e.target.value)}>\r\n                  <option key ={99999} value={''}>Select</option>\r\n                  {\r\n                    projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                      return (\r\n                        <option key ={i} value={pro}>{pro}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore || ''} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>LEAD TYPE</Form.Label>\r\n                <Form.Select value={leadType || ''} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>STATUS</Form.Label>\r\n                <Form.Select value={status || ''} onChange={(e) => setStatus(e.target.value)}>\r\n                    <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                    <option value=\"Visited\">Visited</option>\r\n                    <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                    <option value=\"Detail Shared\">Detail Shared</option>\r\n                    <option value=\"Not Interested\">Not Interested</option>\r\n                    <option value=\"RFR\">RFR</option>\r\n                    <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" min={enquiryDate} defaultValue={nextFollow.split('.')[0]} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                     \r\n         </Row>\r\n\r\n         <Row>  \r\n        \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks || ''} onChange={(e) => setManagerRemarks(e.target.value)} disabled/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstInstallment(firstInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondInstallment(secondInstallment = parseInt(e.target.value || 0))}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdInstallment(thirdInstallment = parseInt(e.target.value ) || 0)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3 d-flex justify-content-between\">\r\n            <div>\r\n            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n            <Button variant=\"primary\" className=\"ms-3\" type=\"submit\" onClick={handleClick} disabled={!nextFollow}>Reminder</Button>\r\n            {/* <Button className=\"ms-3\"  variant=\"primary\" type=\"button\" onClick = {(e)=>cancelLeadHandler(e, leadId)}>Cancellation</Button> */}\r\n            </div>\r\n            {/* <div>\r\n            <Button variant =\"danger\" onClick={(e)=>{deleteHandler(e)}}>Delete</Button>\r\n            </div> */}\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  \r\n    )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { managerList, teamLeadList, asmList, consultantsUnderManager } from \"./../actions/userActions\";\r\nimport { addLeadData} from \"./../actions/leadActions\";\r\nimport { projects } from \"./../actions/projectActions\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\n\r\nexport default ({history}) => {\r\n    const [lead, setLead] = useState({})\r\n    const [createdUser, setCreatedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [assignedUser, setAssignedUser] = useState('6123336fd4513a227cbd96f3')\r\n    const [consultant, setConsultant] = useState('')\r\n    const [enquiryDate, setEnquiryDate] = useState('')\r\n    const [customer, setCustomer] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [alternateNumber, setAlternateNumber] = useState('')\r\n    // var [projectData, setProjectData] = useState({\r\n    //   mainProject: \"\",\r\n    //   subporject: \"\",\r\n    //   projectId: \"\"\r\n    // })\r\n    const [mainProject, setMainProject] = useState('')\r\n    const [subProject, setSubProject] = useState('')\r\n    const [projectId, setProjectId] = useState('')\r\n    const [leadScore, setLeadScore] = useState('')\r\n    const [leadType, setLeadType] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [remarks, setRemarks] = useState('')\r\n    const [nextFollow, setNextFollow] = useState('')\r\n    const [managerRemarks, setManagerRemarks] = useState('')\r\n    const [booked, setBooked] = useState(false)\r\n    // const [payment, setPayment] = useState({\r\n    //   firstInstallment: 0,\r\n    //   secondInstallment: 0,\r\n    //   thirdInstallment: 0\r\n    // })\r\n    var [firstInstallment, setFirstIntallment] = useState(0)\r\n    var [secondInstallment, setSecondIntallment] = useState(0) \r\n    var [thirdInstallment, setThirdIntallment] = useState(0)\r\n    const [totalSqft, setTotalSqft] = useState(0)\r\n    const [teamLead, setTeamLead] = useState('')\r\n    const [index, setIndex] = useState(0);\r\n    const [manager, setManager] = useState('');\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addLead = useSelector((state) => state.addLead)\r\n    const { loading, error, leadInfo } = addLead\r\n\r\n    const fetchProjects = useSelector((state) => state.fetchProjects)\r\n    const { loading: loadingProject, error: errorProject , projectInfo } = fetchProjects\r\n\r\n\r\n\r\n    // const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    // const { loading: loadingManager, error: errorManager, managers: managersList } = fetchManagers\r\n\r\n    const fetchConsultantsUnderManager = useSelector((state) => state.fetchConsultantsUnderManager)\r\n    const { consultantsList } = fetchConsultantsUnderManager\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo: user } = userLogin\r\n    useEffect(()=>{\r\n      if (user && user.role === 'Manager') {\r\n       \r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [user, history])\r\n  \r\n    useEffect(() => {\r\n      dispatch(projects())\r\n      dispatch(consultantsUnderManager(user._id))\r\n      // dispatch(managers())\r\n      // dispatch(teamLeads())\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      if(projectInfo){\r\n        setMainProject(projectInfo[0].mainProject)\r\n        setProjectId(projectInfo[0].projectId)\r\n        setSubProject(projectInfo[0].subProject[0])\r\n        setStatus('Yet to Visit')\r\n        setLeadType('Hot')\r\n      }\r\n    }, [dispatch, projectInfo])\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()  \r\n      setLead(\r\n        lead.createdUser = createdUser, \r\n        lead.assignedConsultant = assignedUser,\r\n        lead.consultantName= consultant,\r\n        lead.enquiryDate= enquiryDate,\r\n        lead.customerName= customer,\r\n        lead.contactNumber= contactNumber,\r\n        lead.alternateNumber= alternateNumber,\r\n        lead.project ={\r\n          mainProject: mainProject,\r\n          subProject: subProject,\r\n          projectId: projectId\r\n        },\r\n        lead.leadScore= leadScore,\r\n        lead.leadType= leadType,\r\n        lead.status= status,\r\n        lead.remarks= remarks,\r\n        lead.nextFollowUp= nextFollow,\r\n        lead.managerRemarks= managerRemarks,\r\n        lead.booked= booked,\r\n        lead.payment = {\r\n          firstInstallment: firstInstallment,\r\n          secondInstallment: secondInstallment,\r\n          thirdInstallment: thirdInstallment,\r\n        },\r\n        lead.totalSqft= totalSqft\r\n        )\r\n      dispatch(addLeadData(lead))\r\n      history.push('/leads')\r\n  }\r\n\r\n  console.log(assignedUser)\r\n\r\n    useEffect(()=> {\r\n      if(projectInfo)\r\n      {const i = projectInfo.findIndex((element,i) => {\r\n        if (element.mainProject === mainProject){\r\n          // console.log(i)\r\n          setProjectId(element._id)\r\n        return true\r\n        }\r\n      })\r\n      setIndex(i)}\r\n   }, [mainProject])\r\n\r\n   const consultantHandler = (e) => {\r\n    //  console.log(e.target.value, consultantList)\r\n    // console.log(e.target.value._id)\r\n    setAssignedUser(consultantsList[e.target.value].userId.consultantId)\r\n      setConsultant(consultantsList[e.target.value].userId.name)\r\n   }\r\n\r\n    // useEffect(()=>{\r\n    //   console.log(\"hello1\")\r\n    //   if(customer){\r\n    //     console.log(\"hello2\")\r\n    //     dispatch(addLeadData(lead))\r\n    //         console.log(lead)\r\n    //         console.log(`3${mainProject}`)\r\n    //   }\r\n    // }, [ dispatch])\r\n\r\n\r\n  \r\n\r\n    // const submitHandler = ()=>{\r\n    //   console.log(mainProject, subProject)\r\n    // }\r\n\r\n    // const findSubProject = (element, i) => {\r\n    //   console.log(`${element.mainProject} = ${mainProject}`)\r\n    //   if (element.mainProject === mainProject){\r\n    //     return true\r\n    //   }else{\r\n    //     return false\r\n    //   }\r\n    // }\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<p>{error}</p>) :(\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">Lead information</h5>\r\n        <Form onSubmit={(e) =>submitHandler(e)}>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"customer\">\r\n                <Form.Label>Customer</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter customer name\" value={customer} onChange={(e) => setCustomer(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Enquiry Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Enter Enquiry Date\" value={enquiryDate} onChange={(e) => setEnquiryDate(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        \r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Contact no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" required type=\"tel\" placeholder=\"987654321\" value={contactNumber} onChange={(e) => setContactNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"tel\">\r\n                <Form.Label>Alternate no.</Form.Label>\r\n                <Form.Control min=\"10\" max=\"12\" type=\"tel\" placeholder=\"987654321\" value={alternateNumber} onChange={(e) => setAlternateNumber(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n           \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"consultant\">\r\n              <Form.Label>Assign to Consultant</Form.Label>\r\n                <Form.Select defaultValue={consultant ? consultant : ' '} onChange={(e) => consultantHandler(e)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                  {\r\n                    consultantsList && (consultantsList.map((consultant, i) => {\r\n                      return (\r\n                        <option key ={i} value={i}>{consultant.userId.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control  type=\"text\" placeholder=\"Remarks\" value={remarks} onChange={(e) => setRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col> \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Main Project\" value={mainProject} disabled/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"subProject\">\r\n                  <Form.Label>Sub Project</Form.Label>\r\n                  <Form.Select required defaultValue={subProject? subProject : 'Not Found'} onChange={(e) => setSubProject(e.target.value)}>\r\n                    <option key={2001} value=''>Select</option>\r\n                  {\r\n                      projectInfo && projectInfo[index] && (projectInfo[index].subProject.map((pro, i) => {\r\n                        return (\r\n                          <option key ={i} value={pro}>{pro}</option>\r\n                        )\r\n                      }))\r\n                    }\r\n                  </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Lead Source</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Lead Source\" value={leadScore} onChange={(e) => setLeadScore(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"leadType\">\r\n                <Form.Label>Lead Type</Form.Label>\r\n                <Form.Select required value={leadType} onChange={(e) => setLeadType(e.target.value)}>\r\n                  <option value=\"Hot\">Hot</option>\r\n                  <option value=\"Warm\">Warm</option>\r\n                  <option value=\"Cold\">Cold</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"status\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Select required value={status} onChange={(e) => setStatus(e.target.value)}>\r\n                  <option value=\"Yet to Visit\">Yet to Visit</option>\r\n                  <option value=\"Visited\">Visited</option>\r\n                  <option value=\"Visit Confirmed\">Visit Confirmed</option>\r\n                  <option value=\"Detail Shared\">Detail Shared</option>\r\n                  <option value=\"Not Interested\">Not Interested</option>\r\n                  <option value=\"RFR\">RFR</option>\r\n                  <option value=\"Booked\">Booked</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Next Follow Up Date</Form.Label>\r\n                <Form.Control required type=\"datetime-local\" placeholder=\"Next Follow Up Date\" value={nextFollow} min={enquiryDate} onChange={(e) => setNextFollow(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>\r\n                                 \r\n         </Row>\r\n\r\n         <Row>\r\n\r\n        \r\n            \r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Manager Remarks</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Manager Remarks\" value={managerRemarks} onChange={(e) => setManagerRemarks(e.target.value)}/>\r\n              </Form.Group>\r\n            </Col>                      \r\n         </Row>\r\n\r\n          <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"firstInstallment\">\r\n                <Form.Label>1st Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"1st Installment\" value={firstInstallment} onChange={(e) => setFirstIntallment(e.target.value && (firstInstallment = parseInt(e.target.value)))}/>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"secondInstallment\">\r\n                <Form.Label>2nd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"2nd Installment\" value={secondInstallment} onChange={(e) => setSecondIntallment(secondInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>                                 \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"thirdInstallment\">\r\n                <Form.Label>3rd Installment</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"3rd Installment\" value={thirdInstallment} onChange={(e) => setThirdIntallment(thirdInstallment = e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n          <h6 className=\"mb-4\">Payment</h6>                               \r\n            <Col md={4} className=\"mb-3\">\r\n            <Form.Group id=\"totalsqft\">\r\n                <Form.Label>Total Sqft</Form.Label>\r\n                  <Form.Control required type=\"number\" placeholder=\"Total Sqft\" value={totalSqft} onChange={(e) => setTotalSqft(e.target.value)}/>\r\n                </Form.Group>\r\n            </Col>\r\n         </Row>\r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Add Lead & Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n   )}\r\n   </>\r\n  );\r\n};\r\n","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CSVReader from 'react-csv-reader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BootstrapTable, {TableHeaderColumn} from 'react-bootstrap-table-next'\r\nimport { Button, Image, Alert, Form } from '@themesberg/react-bootstrap';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter, selectFilter, dateFilter, Comparator} from 'react-bootstrap-table2-filter'; \r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport template from \"../assets/files/Bulk_upload_sheet.csv\"\r\n\r\n\r\nimport ReactLogo from '../assets/img/technologies/loader.png'\r\nimport Preloader from '../components/Preloader';\r\n\r\nimport { addBulkLeadData, assignBulkLead, getBulkLeadList, editBulkLeadData, leadAssignerAddBulkLeadData, leadAssignerAssignBulkLeadData } from '../actions/bulkLeadActions';\r\nimport { managerList } from '../actions/userActions'\r\n\r\n\r\nconst UploadLeads = ({history}) => {\r\n    const [leadData, setLeadData] = useState([])\r\n    const [leadList, setLeadList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [selectedManager, setSelectedManager] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const getBulkLead = useSelector((state) => state.getBulkLead)\r\n    const {leadList: leads } = getBulkLead\r\n\r\n    const fetchManagers = useSelector((state) => state.fetchManagers)\r\n    const {managers } = fetchManagers \r\n\r\n\r\n    useEffect(()=>{\r\n      if (userInfo && userInfo.role === \"LeadAssigner\") {\r\n        dispatch(getBulkLeadList())\r\n        dispatch(managerList())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [userInfo, history])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      setTimeout(()=>{\r\n       axios.get(`/api/bulkLead`, config)\r\n       .then(res => {\r\n           const lead = res.data;\r\n           setLeadData(lead.bulkLeadList)\r\n           setLoading(false)                     \r\n       }).catch(function (error) {\r\n         // handle error\r\n         setLoading(false)\r\n         setError(error)\r\n       })\r\n     }, 3000)\r\n     \r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n     \r\n      if(leadList && leadList.length>0){\r\n        var b = []\r\n        for(var i=1; i< leadList.length-1; i++){\r\n          const a = {\r\n              \"serial\": i,\r\n              \"customerName\" : leadList[i][0],\r\n              \"enquiryDate\" : leadList[i][1]? `${leadList[i][1]}T00:00:00.000Z` : '',\r\n              \"contactNumber\": leadList[i][2],\r\n              \"project\": {\r\n                  \"mainProject\": leadList[i][3],\r\n                  \"subProject\": leadList[i][4]\r\n              },\r\n              \"leadScore\": leadList[i][5],\r\n              \"leadType\": leadList[i][6],\r\n              \"status\": leadList[i][7],\r\n              \"remarks\": leadList[i][8],\r\n              \"nextFollow\": leadList[i][9]?`${leadList[i][9]}T00:00:00.000Z`:'',\r\n              \"managerRemarks\": leadList[i][10],\r\n              \"payment\":{\r\n                  \"firstInstallment\" : 0,\r\n                  \"secondInstallment\" : 0,\r\n                  \"thirdInstallment\" : 0\r\n              },\r\n              \"cancellation\":false,\r\n              \"totalSqft\" : 0,\r\n              \"createdUser\": userInfo._id,\r\n              \"assignedUser\":\"\"\r\n          }\r\n  \r\n          b.push(a)\r\n          \r\n          }\r\n          if(leadData.length > 0){\r\n          setLeadData([...leadData, ...b])\r\n          }else{\r\n            setLeadData(b)\r\n          }\r\n  \r\n        dispatch(leadAssignerAddBulkLeadData(b))\r\n      }\r\n    },[leadList])\r\n\r\n\r\n    const assignHandler = (e) => {\r\n      dispatch(leadAssignerAssignBulkLeadData({selectedManager, leads}))\r\n    }\r\n\r\n    const editTableHandler = (lead) => {\r\n        dispatch(editBulkLeadData(lead))\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          dataField: \"serial\",\r\n          text: \"Serial No.\",\r\n          formatter :(row,index, leadData) => {\r\n            return leadData+1\r\n          },\r\n          \r\n        },\r\n        {\r\n          dataField: \"customerName\",\r\n          text: \"Customer\",\r\n          sort: true,\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"enquiryDate\",\r\n          text: \"Enquiry Date\",\r\n          sort: true,\r\n          formatter: (enquiryDate) => {\r\n              if(enquiryDate){\r\n            return enquiryDate && new Date(`${enquiryDate}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"contactNumber\",\r\n          text: \"Contact Number\"\r\n        },\r\n        {\r\n          dataField: \"project.subProject\",\r\n          text: \"Project\",\r\n        //   filter: textFilter()\r\n        },\r\n       \r\n        {\r\n          dataField: \"leadScore\",\r\n          text: \"lead Score\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"leadType\",\r\n          text: \"lead Type\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"status\",\r\n          text: \"Status\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"remarks\",\r\n          text: \"Remarks\",\r\n        //   filter: textFilter(),\r\n        },\r\n        {\r\n          dataField: \"nextFollow\",\r\n          text: \"Next Follow Up Date\",\r\n          sort: true,\r\n          formatter: (nextFollow) => {\r\n              if(nextFollow){\r\n            return nextFollow && new Date(`${nextFollow}`).toISOString().split('T')[0]\r\n              }\r\n          },\r\n        //   filter: dateFilter({\r\n        //     defaultValue: {comparator: Comparator.GT }\r\n        //   })\r\n        },\r\n        {\r\n          dataField: \"managerRemarks\",\r\n          text: \"Manager Remarks\",\r\n        //   filter: textFilter()\r\n        },\r\n        {\r\n          dataField: \"\",\r\n          text: \"\",\r\n          csvExport: false,\r\n          formatter: (cell,row) => {\r\n            return (\r\n              <button className=\"btn btn-primary\" onClick={ ()=>editTableHandler(row) }>Edit</button>\r\n            );\r\n          },\r\n  \r\n        },\r\n  \r\n      ];\r\n \r\n\r\n    \r\n    return (\r\n        <>\r\n        {loading? (\r\n      <div className={`preloader bg-softr flex-column justify-content-center align-items-center `}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={70} />\r\n      </div>\r\n    ): error?  (<Alert variant=\"primary\">\r\n    {error}\r\n  </Alert>):(\r\n        <div>\r\n          <div className=\"d-flex justify-content-between my-3 px-md-3 px-sm-1\">\r\n          <a href={template} className='btn btn-primary' download>Template</a>\r\n\r\n            <div className=\"d-flex \">\r\n\r\n                <Form.Select onChange={(e)=>setSelectedManager(e.target.value)}>\r\n                  <option key={300} value=\"\">Select</option>\r\n                  {\r\n                    managers && (managers.map((manager, i) => {\r\n                      return (\r\n                        <option key ={i} value={manager._id}>{manager.name}</option>\r\n                      )\r\n                    }))\r\n                  }\r\n                  \r\n                </Form.Select>\r\n             \r\n          <Button className='btn btn-primary ms-3' onClick={(e)=>assignHandler(e)} disabled={leadData && leadData.length>0? false : true}> Assign</Button>\r\n          </div>\r\n            <CSVReader onFileLoaded={(data, fileInfo, originalFile) => setLeadList(data)} />           \r\n            {/* <img src={Profile1} alt=\"\" /> */}\r\n            </div>\r\n            <div>\r\n    \r\n                <BootstrapTable\r\n                    bootstrap4\r\n                    keyField=\"_id\"\r\n                    data={leadData}\r\n                    columns={columns}\r\n                    // cellEdit={ cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                    filter={ filterFactory() }\r\n                    pagination={paginationFactory({ sizePerPage: 10 })}\r\n                    striped\r\n                    table-dark\r\n                    />\r\n        </div>\r\n        </div>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadLeads\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport {activityLogData} from '../actions/activityLogActions'\r\n\r\n// delete lead -> null remaining\r\n\r\nconst ActivityLog = ({history}) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const activityLogDetail = useSelector((state) => state.activityLogDetail)\r\n    const { loading , error, activityLog } = activityLogDetail\r\n\r\n  useEffect(()=>{\r\n    if(userInfo && userInfo.role === \"LeadAssigner\"){\r\n    dispatch(activityLogData(userInfo._id))\r\n    \r\n    }else{\r\n      history.push(`/login`)\r\n    }\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(activityLog && activityLog.activityLogData && activityLog.activityLogData.length>0){\r\n      setName(activityLog.activityLogData[0].member.name.charAt(0).toUpperCase()+activityLog.activityLogData[0].member.name.slice(1))\r\n    }\r\n  },[activityLog])\r\n\r\n  const leadHandler = (activity) => {\r\n    history.push(`/leads/${activity.leadId._id}/edit`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { loading ? (<Preloader />) : error? (<Alert>{error}</Alert>) : activityLog && activityLog.activityLogData.length > 0 ?(\r\n      <>\r\n      <h3 className='mb-3'>{activityLog && activityLog.activityLogData && (name + ' - ' +(activityLog.activityLogData[0].member.role)+'') }</h3>\r\n    <Row className=\"\">\r\n      <Col xs={12} sm={6} xl={8} className=\"mb-4 d-sm-block\">\r\n    <div className=''>\r\n      {(activityLog && activityLog.activityLogData) && activityLog.activityLogData.map((activity, i) => (\r\n      <Card className='px-3 py-3 mb-2 d-flex justify-content-between align-items-center flex-row' key={i}>\r\n        <div>\r\n        <a className={`mb-3 action-text ${activity.leadId === null ? 'deleted-lead':'' }`} onClick={()=>leadHandler(activity)} > {name} {activity.action}</a>\r\n        </div>\r\n        <div className='me-0 mt-2'>\r\n        {/* <p className='mb-1'>{new Date(activity.createdAt).toDateString()}</p> */}\r\n        <p className='mb-1' style={{\"color\":\"#69acbf\"}}>  <TimeAgo date={new Date(activity.createdAt)} /> </p>\r\n        </div>\r\n      </Card>\r\n      ))\r\n  }\r\n  </div>\r\n  </Col>\r\n  \r\n      <Col xs={12} sm={6} xl={4} className=\"mb-4 d-sm-block\">\r\n      <CounterWidget\r\n            category=\"Booked\"\r\n            title={40}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n          <br/>\r\n\r\n      <CounterWidget\r\n            category=\"Site Visit\"\r\n            title={80}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n<br/>\r\n      <CounterWidget\r\n            category=\"Leads\"\r\n            title={160}\r\n            period=\"\"\r\n            percentage={0}\r\n     \r\n            iconColor=\"shape-tertiary\"\r\n          />\r\n      </Col>\r\n      </Row>\r\n    </>\r\n  ):(\r\n    <div className='p-5 d-flex justify-content-center align-items-center'>\r\n      <h1>\"No Activity\"</h1>\r\n    </div>\r\n  )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ActivityLog","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Alert, Image } from '@themesberg/react-bootstrap'\r\nimport Preloader from \"../components/Preloader\";\r\nimport TimeAgo from 'react-timeago'\r\n\r\nimport { Col, Row, Button, Dropdown, ButtonGroup, Modal, Form } from '@themesberg/react-bootstrap';\r\n// import { Form } from 'react-bootstrap';\r\nimport { CounterWidget, CircleChartWidget, BarChartWidget, TeamMembersWidget, ProgressTrackWidget, RankingWidget, SalesValueWidget, SalesValueWidgetPhone, AcquisitionWidget } from \"../components/Widgets\";\r\nimport { activityLogData } from '../actions/activityLogActions'\r\nimport { deleteTask, fetchIndividualTasks } from '../actions/taskManagerActions';\r\nimport { fetchUserList } from '../actions//userActions'\r\nimport { addTask, updateTask } from '../actions/taskManagerActions';\r\nimport { UPDATE_TASK_RESET, DELETE_TASK_RESET } from '../constants/taskManagerContants';\r\n\r\n\r\n// delete lead -> null remaining\r\n\r\nconst TaskManager = ({ history, match }) => {\r\n    const [showDefault, setShowDefault] = useState(false);\r\n    const [showEditDefault, setShowEditDefault] = useState(false);\r\n    const [task, setTask] = useState('')\r\n    const [dueDate, setDueDate] = useState('')\r\n    const [assignTo, setAssignTo] = useState('')\r\n    const [note, setNote] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [editedTask, setEditedTask] = useState('')\r\n    const [previousTask, setPreviousTask] = useState('')\r\n    const [editedDueDate, setEditedDueDate] = useState('')\r\n    const [editedAssignTo, setEditedAssignTo] = useState('')\r\n    const [editedNote, setEditedNote] = useState('')\r\n    const [editedStatus, setEditedStatus] = useState('')\r\n    \r\n\r\n\r\n    const handleClose = () => setShowDefault(false);\r\n\r\n    const handleEditClose = () => setShowEditDefault(false);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const fetchUserTasks = useSelector((state) => state.fetchIndividualTasks)\r\n    const { loading, error, taskList } = fetchUserTasks\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { users } = userList\r\n\r\n    const addTaskData = useSelector((state) => state.addTask)\r\n    const { loading: taskLoading, error: taskError, addedTask } = addTaskData\r\n\r\n    const updateTaskData = useSelector((state) => state.updateTask)\r\n    const { success } = updateTaskData\r\n\r\n    const deleteTaskData = useSelector((state) => state.deleteTask)\r\n    const { success: deleteSuccess } = deleteTaskData\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.role === \"LeadAssigner\") {\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n            dispatch(fetchUserList())\r\n        } else {\r\n            history.push(`/login`)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(success) {\r\n            dispatch({\r\n                type: UPDATE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    },[success])\r\n\r\n    useEffect(()=>{\r\n        if(deleteSuccess) {\r\n            dispatch({\r\n                type: DELETE_TASK_RESET\r\n            })\r\n            dispatch(fetchIndividualTasks(userInfo._id))\r\n        }\r\n    }, [deleteSuccess])\r\n\r\n    const addtaskHandler = (e) => {\r\n        e.preventDefault()\r\n       \r\n        dispatch(addTask({\r\n            task,\r\n            member: userInfo._id,\r\n            dueDate,\r\n            note,\r\n            assignTo : assignTo? assignTo: userInfo._id\r\n        }))\r\n\r\n        setShowDefault(false)\r\n        dispatch(fetchIndividualTasks(userInfo._id))\r\n        setAssignTo('')\r\n        setDueDate('')\r\n        setNote('')\r\n        setStatus('')\r\n        setTask('')\r\n        \r\n    }\r\n\r\n    const taskStatusHandler = (e, task) => {\r\n      \r\n        if(task.status === 'Pending'){\r\n            task.status = 'Completed'\r\n        }else{\r\n            task.status ='Pending'\r\n        }\r\n\r\n        dispatch(updateTask(task))\r\n    }\r\n\r\n    const deleteTaskHandler = (e, task) => {\r\n        dispatch(deleteTask(task._id))\r\n    }\r\n\r\n\r\n    const editTaskHandler = (e,task) => {\r\n        e.preventDefault()\r\n        setPreviousTask(task)\r\n        setShowEditDefault(true)\r\n\r\n        setEditedTask(task.task)\r\n        setEditedDueDate(task.dueDate)\r\n        setEditedNote(task.note)\r\n        setEditedAssignTo(task.assignTo)\r\n    }\r\n\r\n    const saveEditedTaskHandler = (e, task) => {\r\n        e.preventDefault()\r\n        dispatch(updateTask({\r\n            _id : previousTask._id,\r\n            task : editedTask,\r\n            note: editedNote,\r\n            status : editedStatus,\r\n            member: userInfo._id,\r\n            assignTo: editedAssignTo,\r\n            dueDate: editedDueDate\r\n        }))\r\n\r\n\r\n        setShowEditDefault(false)\r\n        setEditedAssignTo('')\r\n        setEditedDueDate('')\r\n        setEditedNote('')\r\n        setEditedStatus('')\r\n        setEditedTask('')\r\n    }\r\n\r\n    console.log(editedStatus)\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<Preloader />) : error ? (<Alert>{error}</Alert>) : true ? (\r\n                <>\r\n                    <Row className='pt-3 pb-3'>\r\n                        <Col>\r\n                        {/* <a href=\"#\" className='btn btn-primary'>Add New Task</a> */}\r\n                        <Button variant=\"primary\" className=\"my-3\" onClick={() => setShowDefault(true)}>Add New Task</Button>\r\n                        <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n                            <Modal.Header>\r\n                            <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                            <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form className='p-3' onSubmit={(e)=>addtaskHandler(e)}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Task</Form.Label>\r\n                                <Form.Control required  type=\"text\" onChange={(e) => setTask(e.target.value)}/>\r\n                                {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                 </Form.Group>\r\n                                 <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                    <Form.Label>Due time</Form.Label>\r\n                                    <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" defaultValue={dueDate}  onChange={(e) => {setDueDate(e.target.value)}}/>\r\n                                </Form.Group>\r\n                                    \r\n\r\n                                    {/* <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                        <Form.Label>Assign to</Form.Label>\r\n                                        <Form.Select value={assignTo || ''} onChange={(e) => setAssignTo(e.target.value)}>\r\n                                        <option value=\" \">Select</option>\r\n                                        \r\n                                        {users && users.map((user, i) => (\r\n                                            \r\n                                        (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                            \r\n                                        ))}\r\n                                        </Form.Select>\r\n                                    </Form.Group> */}\r\n\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Note</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" onChange={(e) => setNote(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <button className=\"btn btn-primary\" type='submit'>Add Task</button>\r\n                            </Form>\r\n                                </Modal.Body>\r\n                                {/* <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    I Got It\r\n                                </Button>\r\n                                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                </Modal.Footer> */}\r\n                            </Modal>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        {(taskList && taskList.length>0)? taskList.map((task, i)=>(\r\n                        <Col xs={12} sm={12} xl={12} className=\"mb-4 d-sm-block\" key={i}>\r\n                            <div className=\"hover-state rounded-0 rounded-top py-3 card border-bottom\">\r\n                                <div className=\"d-sm-flex align-items-center flex-wrap flex-lg-nowrap py-0 card-body\">\r\n                                    <div className=\"text-left text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check me-sm-2\">\r\n                                            <input type=\"checkbox\" id=\"task-584be4d2-bec0-4fb1-80b1-690358ca4809\" className=\"form-check-input\"\r\n                                                value=\"\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"px-0 mb-4 mb-md-0 col-lg-9 col-9\">\r\n                                        <div className=\"mb-2\">\r\n                                            <h5 className=\"\">{task.task}</h5>\r\n                                            <div className=\"d-block d-sm-flex\">\r\n                                                <div>\r\n                                                    <h6 className=\"fw-normal text-gray mb-3 mb-sm-0\"><svg width={15} xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                        className=\"icon icon-xxs text-gray-500 me-2\">\r\n                                                        <path fillRule=\"evenodd\"\r\n                                                            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\r\n                                                            clipRule=\"evenodd\"></path>\r\n                                                    </svg> {new Date(task.dueDate).toLocaleDateString() + ` (` + new Date(task.dueDate).toLocaleTimeString() + `)`}</h6>\r\n                                                </div>\r\n                                                <div className=\"ms-sm-3\" onClick={(e) => taskStatusHandler(e, task)} style={{cursor: 'pointer'}}>\r\n                                                    {task.status === 'Pending'? <span className=\"super-badge badge bg-warning\">In Progress</span> : <span className=\"super-badge badge bg-success\">Completed</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"fw-bold text-dark card-link\">\r\n                                                <span className=\"fw-normal text-gray \">{task.note && task.note}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fas fa-edit\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> editTaskHandler(e,task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right text-sm-center mb-2 mb-sm-0 col-1\">\r\n                                        <div className=\"form-check check-lg inbox-check ms-sm-2\" >\r\n                                        <i className=\"fa fa-trash red\" aria-hidden=\"true\" style={{cursor: 'pointer'}} onClick={(e)=> deleteTaskHandler(e, task)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    \r\n                                    <div\r\n                                        className=\"d-none d-lg-block d-xl-inline-flex align-items-center ms-lg-auto text-right justify-content-center px-md-0 col-xl-1 col-lg-1 col-sm-1 col-10\">\r\n                                        <div className=\"d-flex justify-content-end dropdown\">\r\n                                            <button id=\"react-aria8234133146-25\" aria-expanded=\"false\" type=\"button\"\r\n                                                className=\"text-dark dropdown-toggle-split m-0 p-0 dropdown-toggle btn btn-link\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"\r\n                                                    className=\"icon icon-xs icon-dark\">\r\n                                                    <path\r\n                                                        d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\">\r\n                                                    </path>\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Modal as={Modal.Dialog} centered show={showEditDefault} onHide={handleEditClose}>\r\n                                    <Modal.Header>\r\n                                    <Modal.Title className=\"h6\">Add New Task</Modal.Title>\r\n                                    <Button variant=\"close\" aria-label=\"Close\" onClick={handleEditClose} />\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form className='p-3' onSubmit={(e)=>saveEditedTaskHandler(e, task)}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control required  type=\"text\"  value={editedTask} onChange={(e)=> setEditedTask(e.target.value)}/>\r\n                                        {/* <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback> */}\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"lastName\" className=\"mb-3\">\r\n                                            <Form.Label>Due time</Form.Label>\r\n                                            <Form.Control required type=\"datetime-local\" placeholder=\"Enter Due time\" value={editedDueDate.split('.')[0]}  onChange={(e) => {setEditedDueDate(e.target.value)}}/>\r\n                                        </Form.Group>\r\n                                            \r\n\r\n                                            {/* <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Assign to</Form.Label>\r\n                                                <Form.Select value={editedAssignTo} onChange={(e) => setEditedAssignTo(e.target.value)}>\r\n                                                <option value=\" \">Select</option>\r\n                                                \r\n                                                {users && users.map((user, i) => (\r\n                                                    \r\n                                                (user.isAdmin === false && <option key={i} value={user._id}>{user.name}</option>)\r\n                                                    \r\n                                                ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group> */}\r\n\r\n                                            <Form.Group id=\"leadType\" className=\"mb-3\">\r\n                                                <Form.Label>Status</Form.Label>\r\n                                                <Form.Select value={editedStatus} onChange={(e) => setEditedStatus(e.target.value)}>\r\n                                                <option value=\"Pending\">In Progress</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Note</Form.Label>\r\n                                                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" value={editedNote} onChange={(e) => setEditedNote(e.target.value)}/>\r\n                                            </Form.Group>\r\n                                            <button className=\"btn btn-primary\" type='submit'>Save Task</button>\r\n                                    </Form>\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            I Got It\r\n                                        </Button>\r\n                                        <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        </Modal.Footer> */}\r\n                                    </Modal>\r\n\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        )): (\r\n                            <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                                <h1>\"No Task\"</h1>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <div className='p-5 d-flex justify-content-center align-items-center'>\r\n                    <h1>\"No Task\"</h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskManager","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebookF, faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, FormCheck, Container, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link as={Link} to={Routes.DashboardOverview.path} className=\"text-gray-700\">\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"mb-4 mb-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">Create an account</h3>\r\n                </div>\r\n                <Form className=\"mt-4\">\r\n                  <Form.Group id=\"email\" className=\"mb-4\">\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control autoFocus required type=\"email\" placeholder=\"example@company.com\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type=\"password\" placeholder=\"Password\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"confirmPassword\" className=\"mb-4\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type=\"password\" placeholder=\"Confirm Password\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <FormCheck type=\"checkbox\" className=\"d-flex mb-4\">\r\n                    <FormCheck.Input required id=\"terms\" className=\"me-2\" />\r\n                    <FormCheck.Label htmlFor=\"terms\">\r\n                      I agree to the <Card.Link>terms and conditions</Card.Link>\r\n                    </FormCheck.Label>\r\n                  </FormCheck>\r\n\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Sign up\r\n                  </Button>\r\n                </Form>\r\n\r\n                <div className=\"mt-3 mb-4 text-center\">\r\n                  <span className=\"fw-normal\">or</span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-facebook me-2\">\r\n                    <FontAwesomeIcon icon={faFacebookF} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-twitter me-2\">\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pil text-dark\">\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n                  <span className=\"fw-normal\">\r\n                    Already have an account?\r\n                    <Card.Link as={Link} to={Routes.Signin.path} className=\"fw-bold\">\r\n                      {` Login here `}\r\n                    </Card.Link>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"vh-lg-100 mt-4 mt-lg-0 bg-soft d-flex align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <p className=\"text-center\">\r\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\r\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\r\n            </Card.Link>\r\n            </p>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"signin-inner my-3 my-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <h3>Forgot your password?</h3>\r\n                <p className=\"mb-4\">Don't fret! Just type in your email and we will send you a code to reset your password!</p>\r\n                <Form>\r\n                  <div className=\"mb-4\">\r\n                    <Form.Label htmlFor=\"email\">Your Email</Form.Label>\r\n                    <InputGroup id=\"email\">\r\n                      <Form.Control required autoFocus type=\"email\" placeholder=\"john@company.com\" />\r\n                    </InputGroup>\r\n                  </div>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Recover password\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <p className=\"text-center\">\r\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\r\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\r\n              </Card.Link>\r\n            </p>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <h3 className=\"mb-4\">Reset password</h3>\r\n                <Form>\r\n                  <Form.Group id=\"email\" className=\"mb-4\">\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control autoFocus required type=\"email\" placeholder=\"example@company.com\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type=\"password\" placeholder=\"Password\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"confirmPassword\" className=\"mb-4\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type=\"password\" placeholder=\"Confirm Password\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Reset password\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faEye, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Form, Card, Image, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\r\nimport Profile3 from \"../../assets/img/team/profile-picture-3.jpg\";\r\n\r\nexport default () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const passwordInputType = showPassword ? \"text\" : \"password\";\r\n  const passwordIconColor = showPassword ? \"#262B40\" : \"\";\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"vh-lg-100 bg-soft d-flex align-items-center my-4\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link as={Link} to={Routes.DashboardOverview.path} className=\"text-gray-700\">\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"bg-white shadow-soft border border-light rounded p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <div className=\"user-avatar large-avatar mx-auto mb-3 border-dark p-2\">\r\n                    <Image src={Profile3} className=\"rounded-circle\" />\r\n                  </div>\r\n                  <h3 className=\"mb-3\">Bonnie Green</h3>\r\n                  <p className=\"text-gray\">Better to be safe than sorry.</p>\r\n                </div>\r\n                <Form className=\"mt-5\">\r\n                  <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type={passwordInputType} placeholder=\"Password\" />\r\n                      <InputGroup.Text onClick={togglePasswordVisibility}>\r\n                        <FontAwesomeIcon color={passwordIconColor} icon={faEye} />\r\n                      </InputGroup.Text>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Unlock\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Card, Image, Button, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport NotFoundImage from \"../../assets/img/illustrations/404.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} className=\"text-center d-flex align-items-center justify-content-center\">\r\n              <div>\r\n                <Card.Link as={Link} to={Routes.DashboardOverview.path}>\r\n                  <Image src={NotFoundImage} className=\"img-fluid w-75\" />\r\n                </Card.Link>\r\n                <h1 className=\"text-primary mt-5\">\r\n                  Page not <span className=\"fw-bolder\">found</span>\r\n                </h1>\r\n                <p className=\"lead my-4\">\r\n                  Oops! Looks like you followed a bad link. If you think this is a\r\n                  problem with us, please tell us.\r\n            </p>\r\n                <Button as={Link} variant=\"primary\" className=\"animate-hover\" to={Routes.AdminDashboard.path}>\r\n                  <FontAwesomeIcon icon={faChevronLeft} className=\"animate-left-3 me-3 ms-2\" />\r\n                  Go back home\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Image, Button, Container } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport ErrorImage from \"../../assets/img/illustrations/500.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\r\n        <Container>\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={12} lg={5} className=\"order-2 order-lg-1 text-center text-lg-left\">\r\n              <h1 className=\"text-primary mt-5\">\r\n                Something has gone <span className=\"fw-bolder\">seriously</span> wrong\r\n          </h1>\r\n              <p className=\"lead my-4\">\r\n                It's always time for a coffee break. We should be back by the time you finish your coffee.\r\n          </p>\r\n              <Button as={Link} variant=\"primary\" className=\"animate-hover\" to={Routes.DashboardOverview.path}>\r\n                <FontAwesomeIcon icon={faChevronLeft} className=\"animate-left-3 me-3 ms-2\" />\r\n                Go back home\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12} lg={7} className=\"order-1 order-lg-2 text-center d-flex align-items-center justify-content-center\">\r\n              <Image src={ErrorImage} className=\"img-fluid w-75\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\r\n\r\n\r\nexport default () => (\r\n  <Container className=\"px-0\">\r\n    <Row>\r\n      <Col xs={12} className=\"p-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <article>\r\n              <h1 className=\"h2\" id=\"overview\">Overview </h1>\r\n              <p className=\"fs-5 fw-light\">Download files for Volt React Dashboard</p>\r\n\r\n              <p>Volt React Dashboard is a React.js and Bootstrap 5 powered admin dashboard template featuring components, pages and plugins that you can use to create an awesome and interactive admin interface.</p>\r\n              <p>This product is built using the following widely used technologies:</p>\r\n              <ul className=\"docs-list\">\r\n                <li>Interactive UIs using <Card.Link href=\"https://reactjs.org/\" target=\"_blank\">React</Card.Link></li>\r\n                <li>Bootstrap 5 React Components based on <Card.Link href=\"https://react-bootstrap.github.io/\" target=\"_blank\">react-bootstrap</Card.Link></li>\r\n                <li>Most popular CSS Framework <Card.Link href=\"https://getbootstrap.com/\" target=\"_blank\">Bootstrap</Card.Link></li>\r\n                <li>Awesome CSS preprocessor <Card.Link href=\"https://sass-lang.com/\" target=\"_blank\">Sass</Card.Link></li>\r\n              </ul>\r\n\r\n              <h2 id=\"getting-support\">Getting support</h2>\r\n              <p>We offer 6 months of support by default for each purchased template. Please <Card.Link href=\"https://themesberg.com/contact\" target=\"_blank\">contact us</Card.Link> and we&rsquo;ll get back to you in no time!</p>\r\n\r\n              <h2 id=\"community\">Community</h2>\r\n              <ul className=\"docs-list\">\r\n                <li>Follow <Card.Link href=\"https://twitter.com/themesberg\" target=\"_blank\">@themesberg on Twitter</Card.Link>.</li>\r\n                <li>Follow <Card.Link href=\"https://facebook.com/themesberg\" target=\"_blank\">Themesberg on Facebook</Card.Link>.</li>\r\n                <li>Read and subscribe to <Card.Link href=\"https://themesberg.com/blog\" target=\"_blank\">The Official Themesberg Blog</Card.Link>.</li>\r\n                <li>Follow latest open source projects on our <Card.Link href=\"https://github.com/themesberg\" target=\"_blank\">Github Page</Card.Link></li>\r\n              </ul>\r\n            </article>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\r\n\r\n\r\nexport default () => (\r\n  <Container className=\"px-0\">\r\n    <Row>\r\n      <Col xs={12} className=\"p-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <article>\r\n              <h1 className=\"h2\" id=\"download\">Download </h1>\r\n              <p className=\"fs-5 fw-light\">Download files for Volt React Dashboard</p>\r\n              <p>Use the following links to download Volt React Dashboard files:</p>\r\n              <ul className=\"docs-list\">\r\n                <li>Download <Card.Link href=\"https://themesberg.com/product/dashboard/volt-pro-react\" target=\"_blank\">Volt React Dashboard</Card.Link>.</li>\r\n              </ul>\r\n            </article>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Card, Container, Alert } from '@themesberg/react-bootstrap';\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nexport default () => (\r\n  <Container className=\"px-0\">\r\n    <Row>\r\n      <Col xs={12} className=\"p-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <article>\r\n              <h1 className=\"h2\" id=\"quick-start\">Quick Start </h1>\r\n              <p className=\"fs-5 fw-light\">This guide will help you get started with Volt React Dashboard</p>\r\n\r\n              <p>\r\n                <b>Volt React Dashboard</b> is built on top of <Card.Link href=\"https://react-bootstrap.github.io/\" target=\"_blank\">React Bootstrap</Card.Link> using <a href=\"https://github.com/facebook/create-react-app/\" target=\"_blank\" rel=\"noopener noreferrer\">Create React App</a>.\r\n              </p>\r\n              \r\n              <p>Please follow these steps to install the required technologies:</p>\r\n              \r\n              <h2 className=\"fs-5 mt-4\" id=\"using-yarn\">Using <code>yarn</code></h2>\r\n              <ol className=\"ps-4 docs-list\">\r\n                <li>\r\n                  Install yarn from <Card.Link href=\"https://classic.yarnpkg.com/en/docs/install\" target=\"_blank\">their official page</Card.Link>.\r\n                </li>\r\n                <li>\r\n                  <p>After installing yarn, open a terminal and run <code>yarn install</code> in the main <code>volt</code> folder to download all project dependencies.</p>\r\n                  <Code code=\"$ yarn install\" language=\"bash\" />\r\n                </li>\r\n                <li>\r\n                  <p>Then start the app in development mode by running the following command in terminal:</p>\r\n                  <Code code=\"$ yarn start\" language=\"bash\" />\r\n                </li>\r\n                <li>\r\n                  Open <Card.Link href=\"http://localhost:3000\" target=\"_blank\">http://localhost:3000</Card.Link> to view it in the browser.\r\n                </li>\r\n              </ol>\r\n\r\n              <h2 className=\"fs-5 mt-4\" id=\"using-npm\">Using <code>npm</code></h2>\r\n              <ol className=\"ps-4 docs-list\">\r\n                <li>\r\n                  Install Node.js from <Card.Link href=\"https://nodejs.org/\" target=\"_blank\">node.js official page</Card.Link> or using a <a href=\"https://github.com/nvm-sh/nvm\" target=\"_blank\" rel=\"noopener noreferrer\">node.js version manager (nvm for short)</a>.\r\n                  <Alert className=\"my-4\" variant=\"info\"><strong>Important!</strong> Make sure the installed Node version is {`>=`} 8.10 and of npm {`>=`} 5.6</Alert>\r\n                </li>\r\n                <li>\r\n                  <p>After installing node.js, open a terminal and run <code>npm install</code> in the main <code>volt</code> folder to download all project dependencies. You'll find them in the <code>node_modules</code> folder.</p>\r\n                  <Code code=\"$ npm install\" language=\"bash\" />\r\n                </li>\r\n                <li>\r\n                  <p>Then start the app in development mode by running the following command in terminal:</p>\r\n                  <Code code=\"$ npm start\" language=\"bash\" />\r\n                </li>\r\n                <li>\r\n                  Open <Card.Link href=\"http://localhost:3000\" target=\"_blank\">http://localhost:3000</Card.Link> to view it in the browser.\r\n                </li>\r\n              </ol>\r\n            </article>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\r\n\r\n\r\nexport default () => (\r\n  <Container className=\"px-0\">\r\n    <Row>\r\n      <Col xs={12} className=\"p-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <article>\r\n              <h1 className=\"h2\" id=\"license\">License</h1>\r\n              <p className=\"fs-5 fw-light\">Licensing details for Volt React Dashboard</p>\r\n              <p>Please check our <Card.Link href=\"https://themesberg.com/licensing\">official licensing page</Card.Link> to learn more about our licensing.</p>\r\n            </article>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\r\n\r\n\r\nexport default () => (\r\n  <Container className=\"px-0\">\r\n    <Row>\r\n      <Col xs={12} className=\"p-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <article>\r\n              <h1 className=\"h2\" id=\"file-structure\">File structure </h1>\r\n              <p className=\"fs-5 fw-light\">Learn more about the file structure for Volt React Dashboard</p>\r\n\r\n              <p className=\"fs-5 fw-bold\">Main folders and files</p>\r\n              <p>At the top level of the project you'll find: </p>\r\n              <ul className=\"docs-list\">\r\n                <li>Three folders: <code>public</code>, <code>src</code> and <code>node_modules</code></li>\r\n                <li>And two files: <code>package.json</code> and <code>README.md</code></li>\r\n              </ul>\r\n\r\n              <p className=\"fs-5 fw-bold\">public/ folder</p>\r\n              <p>\r\n                The root folder that gets served up as our react app. The most important file in <code>public</code> folder is the <code>index.html</code> file. You can tweak this file, for example, to set the page title or add some library that may be incompatible with webpack and you have no other option but to include it as a <code>{`<script>`}</code> tag.\r\n              <br />\r\n              Also the <code>{`<script>`}</code> tag with the compiled code will be added to this file automatically during the build process.\r\n            </p>\r\n\r\n              <p className=\"fs-5 fw-bold\">src/ folder</p>\r\n              <p>\r\n                In simplest form it’s the app folder that contains all of our react codebase: pages, components, tests, image or scss files.\r\n              <br />\r\n              The structure of the src folder:\r\n            </p>\r\n\r\n              <ul className=\"docs-list\">\r\n                <li><code>assets/</code> - all the media assets, such as images, videos, json files or other static files</li>\r\n                <li><code>components/</code> - custom state or stateless <Card.Link href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components/\" target=\"_blank\">function components</Card.Link> built on top of <a href=\"https://react-bootstrap.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">react-bootstrap library</a> and used throughout the application</li>\r\n                <li><code>data/</code> - files to feed the components that require an array of data (e.g tables, lists or calendar events). This data will in the end be fetched from a backend service.</li>\r\n                <li><code>pages/</code> - carefully built pages to provide all the necessary widgets your startup will require</li>\r\n                <li><code>scss/</code> - holds the variables, mixins and custom component styles developed by Themesberg for Volt React Dashboard</li>\r\n                <li><code>index.js</code> - is the JavaScript entry point</li>\r\n                <li><code>routes.js</code> - exports an object with all the route paths found in Volt React Dashboard</li>\r\n              </ul>\r\n\r\n              <p className=\"fs-5 fw-bold\">node_modules/ folder</p>\r\n              <p>The <code>node_modules</code> folder contains external libraries generated based on <code>package.json</code>.</p>\r\n            </article>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport { CommandsTable } from '../../components/Tables';\r\n\r\nexport default () => (\r\n  <Container className=\"px-0\">\r\n    <Row>\r\n      <Col xs={12} className=\"p-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <article>\r\n              <h1 className=\"h2\" id=\"build-tools\">Build tools </h1>\r\n              <p className=\"fs-5 fw-light\">Learn the commands that will help you work with Volt React Dashboard and the commands that can build the final production version of your app.</p>\r\n\r\n              <p className=\"fs-5 fw-bold\">Available commands</p>\r\n              <CommandsTable />\r\n            </article>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Card, Container } from '@themesberg/react-bootstrap';\r\n\r\n\r\nexport default () => (\r\n  <Container className=\"px-0\">\r\n    <Row>\r\n      <Col xs={12} className=\"p-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <article>\r\n              <h1 className=\"h2\" id=\"changelog\">Changelog </h1>\r\n              <p className=\"fs-5 fw-light\">This is the changelog for the new features and bug fixes for Volt React Dashboard</p>\r\n\r\n              <p className=\"fs-5 fw-bold\">Version 1.0.0 - January 19, 2021</p>\r\n              <ul className=\"docs-list\">\r\n                <li>Initial release files</li>\r\n              </ul>\r\n            </article>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faBoxOpen, faChartPie, faCog, faFileAlt, faHandHoldingUsd, faSignOutAlt, faTable, faTimes, faCalendarAlt, faMapPin, faInbox, faRocket, faHome, faUser, faUserFriends, faPlus, faUpload, faUserPlus, faCalendarPlus, faCalendarCheck, faProjectDiagram, faPeopleArrows, faHouseUser, faUserCheck, faGlobe, faChartBar, faTasks, faList } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Nav, Badge, Image, Button, Dropdown, Accordion, Navbar } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport ThemesbergLogo from \"../assets/img/themesberg.svg\";\r\nimport ReactHero from \"../assets/img/technologies/logo.png\";\r\nimport ProfilePicture from \"../assets/img/team/profile-picture-3.jpg\";\r\nimport { faInvision } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default (props = {}) => {\r\n  const [user, setUser] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if(userInfo){\r\n      setUser(userInfo.name)\r\n    }\r\n  }, [])\r\n  \r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n\r\n  const onCollapse = () => setShow(!show);\r\n\r\n  const CollapsableNavItem = (props) => {\r\n  const { eventKey, title, icon, children = null } = props;\r\n  const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">\r\n              {children}\r\n            </Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\r\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\r\n            {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\r\n\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar expand={false} collapseOnSelect variant=\"dark\" className=\"navbar-theme-primary px-4 d-md-none\">\r\n        <Navbar.Brand className=\"me-lg-5\" as={Link} to={Routes.DashboardOverview.path}>\r\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle as={Button} aria-controls=\"main-navbar\" onClick={onCollapse}>\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}>\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"user-avatar lg-avatar me-4\">\r\n                  <Image src={ProfilePicture} className=\"card-img-top rounded-circle border-white\" />\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <h6>{user}</h6>\r\n\r\n                  {/* <Button as={Link} variant=\"secondary\" size=\"xs\" to={Routes.Signin.path} className=\"text-dark\">\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\" /> Sign Out\r\n                  </Button>\r\n                   */}\r\n                </div>\r\n              </div>\r\n              <Nav.Link className=\"collapse-close d-md-none\" onClick={onCollapse}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n              {/* <NavItem title=\"Volt React\" link={Routes.Presentation.path} image={ReactHero} /> */}\r\n\r\n              <NavItem title=\"Dashboard\" link={Routes.Dashboard.path} icon={faHome} />\r\n              <NavItem title=\"All Projects\" link={Routes.AllProjects.path} icon={faList} />\r\n              <NavItem title=\"Add Lead\" link={Routes.AddLead.path} icon={faUserPlus} />\r\n              <NavItem title=\"Total Leads\" link={Routes.Leads.path} icon={faTable} />\r\n              <NavItem title=\"Site Visits\" link={Routes.SiteVisitsLeads.path} icon={faPeopleArrows} />\r\n              <NavItem title=\"Lost Leads\" link={Routes.LostLeads.path} icon={faTable} />\r\n              <NavItem title=\"Cancelled Leads\" link={Routes.CancellationLeads.path} icon={faTable} />\r\n              {/* <NavItem title=\"Bulk Upload\" link={Routes.UploadLeads.path} icon={faUpload} /> */}\r\n              <NavItem title=\"Next Follow Up\" link={Routes.NextFollowUp.path} icon={faCalendarCheck} />\r\n              {/* <NavItem title=\"Lost Sale\" link={Routes.LostSales.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Site Visits\" link={Routes.SiteVisits.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add Consultant\" link={Routes.AddConsultant.path} icon={faChartPie} /> */}\r\n\r\n              <NavItem title=\"Add Member\" link={Routes.AddMember.path} icon={faUserCheck} />\r\n              {/* <NavItem title=\"Add Team Lead\" link={Routes.AddTeamLead.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add ASM\" link={Routes.AddASM.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add Channel Patner\" link={Routes.AddCP.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add CP Manager\" link={Routes.AddCPM.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add Lead Assigner\" link={Routes.AddLeadAssigner.path} icon={faChartPie} /> */}\r\n              <CollapsableNavItem eventKey=\"tables/\" title=\"All Users\" icon={faUserFriends}>\r\n              <NavItem title=\"Manager\" link={Routes.Manager.path} icon={faUser} />\r\n              <NavItem title=\"Team Lead\" link={Routes.TeamLead.path} icon={faUser} />\r\n              <NavItem title=\"Consultant\" link={Routes.Consultant.path} icon={faUser} />\r\n              </CollapsableNavItem>\r\n              \r\n              <NavItem title=\"Activity Log\" link={Routes.UserList.path} icon={faChartPie} />\r\n              <NavItem title=\"Set Milestone\" link={Routes.SetMilestone.path} icon={faChartBar} />\r\n              {/* <NavItem title=\"Promotion\" link={Routes.Promotion.path} icon={faProjectDiagram} /> */}\r\n              {/* <NavItem title=\"Add Project\" link={Routes.AddProject.path} icon={faPlus} /> */}\r\n              <NavItem title=\"Task Manager\" link={Routes.TaskManager.path} icon={faTasks} />\r\n\r\n              {/* <NavItem title=\"Overview\" link={Routes.DashboardOverview.path} icon={faChartPie} />\r\n              <NavItem external title=\"Messages\" link=\"https://demo.themesberg.com/volt-pro-react/#/messages\" target=\"_blank\" badgeText=\"Pro\" icon={faInbox} />\r\n              <NavItem title=\"Transactions\" icon={faHandHoldingUsd} link={Routes.Transactions.path} />\r\n              <NavItem title=\"Settings\" icon={faCog} link={Routes.Settings.path} />\r\n              <NavItem external title=\"Calendar\" link=\"https://demo.themesberg.com/volt-pro-react/#/calendar\" target=\"_blank\" badgeText=\"Pro\" icon={faCalendarAlt} />\r\n              <NavItem external title=\"Map\" link=\"https://demo.themesberg.com/volt-pro-react/#/map\" target=\"_blank\" badgeText=\"Pro\" icon={faMapPin} />\r\n\r\n              <CollapsableNavItem eventKey=\"tables/\" title=\"Tables\" icon={faTable}>\r\n                <NavItem title=\"Bootstrap Table\" link={Routes.BootstrapTables.path} />\r\n              </CollapsableNavItem>\r\n\r\n              <CollapsableNavItem eventKey=\"examples/\" title=\"Page Examples\" icon={faFileAlt}>\r\n                <NavItem title=\"Sign In\" link={Routes.Signin.path} />\r\n                <NavItem title=\"Sign Up\" link={Routes.Signup.path} />\r\n                <NavItem title=\"Forgot password\" link={Routes.ForgotPassword.path} />\r\n                <NavItem title=\"Reset password\" link={Routes.ResetPassword.path} />\r\n                <NavItem title=\"Lock\" link={Routes.Lock.path} />\r\n                <NavItem title=\"404 Not Found\" link={Routes.NotFound.path} />\r\n                <NavItem title=\"500 Server Error\" link={Routes.ServerError.path} />\r\n              </CollapsableNavItem>\r\n\r\n              <NavItem external title=\"Plugins\" link=\"https://demo.themesberg.com/volt-pro-react/#/plugins/datatable\" target=\"_blank\" badgeText=\"Pro\" icon={faChartPie} />\r\n\r\n              <Dropdown.Divider className=\"my-3 border-indigo\" />\r\n\r\n              <CollapsableNavItem eventKey=\"documentation/\" title=\"Getting Started\" icon={faBook}>\r\n                <NavItem title=\"Overview\" link={Routes.DocsOverview.path} />\r\n                <NavItem title=\"Download\" link={Routes.DocsDownload.path} />\r\n                <NavItem title=\"Quick Start\" link={Routes.DocsQuickStart.path} />\r\n                <NavItem title=\"License\" link={Routes.DocsLicense.path} />\r\n                <NavItem title=\"Folder Structure\" link={Routes.DocsFolderStructure.path} />\r\n                <NavItem title=\"Build Tools\" link={Routes.DocsBuild.path} />\r\n                <NavItem title=\"Changelog\" link={Routes.DocsChangelog.path} />\r\n              </CollapsableNavItem>\r\n              <CollapsableNavItem eventKey=\"components/\" title=\"Components\" icon={faBoxOpen}>\r\n                <NavItem title=\"Accordion\" link={Routes.Accordions.path} />\r\n                <NavItem title=\"Alerts\" link={Routes.Alerts.path} />\r\n                <NavItem title=\"Badges\" link={Routes.Badges.path} />\r\n                <NavItem external title=\"Widgets\" link=\"https://demo.themesberg.com/volt-pro-react/#/components/widgets\" target=\"_blank\" badgeText=\"Pro\" />\r\n                <NavItem title=\"Breadcrumbs\" link={Routes.Breadcrumbs.path} />\r\n                <NavItem title=\"Buttons\" link={Routes.Buttons.path} />\r\n                <NavItem title=\"Forms\" link={Routes.Forms.path} />\r\n                <NavItem title=\"Modals\" link={Routes.Modals.path} />\r\n                <NavItem title=\"Navbars\" link={Routes.Navbars.path} />\r\n                <NavItem title=\"Navs\" link={Routes.Navs.path} />\r\n                <NavItem title=\"Pagination\" link={Routes.Pagination.path} />\r\n                <NavItem title=\"Popovers\" link={Routes.Popovers.path} />\r\n                <NavItem title=\"Progress\" link={Routes.Progress.path} />\r\n                <NavItem title=\"Tables\" link={Routes.Tables.path} />\r\n                <NavItem title=\"Tabs\" link={Routes.Tabs.path} />\r\n                <NavItem title=\"Toasts\" link={Routes.Toasts.path} />\r\n                <NavItem title=\"Tooltips\" link={Routes.Tooltips.path} />\r\n              </CollapsableNavItem>\r\n              <NavItem external title=\"Themesberg\" link=\"https://themesberg.com\" target=\"_blank\" image={ThemesbergLogo} />\r\n              <Button as={Link} to={Routes.Upgrade.path} variant=\"secondary\" className=\"upgrade-to-pro\"><FontAwesomeIcon icon={faRocket} className=\"me-1\" /> Upgrade to Pro</Button> */}\r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faBoxOpen, faChartPie, faCog, faFileAlt, faHandHoldingUsd, faSignOutAlt, faTable, faTimes, faCalendarAlt, faMapPin, faInbox, faRocket, faHome, faUser, faUserFriends, faPlus, faUpload, faUserPlus, faCalendarPlus, faCalendarCheck, faProjectDiagram, faPeopleArrows, faHouseUser, faUserCheck, faGlobe, faChartBar, faTasks, faList, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Nav, Badge, Image, Button, Dropdown, Accordion, Navbar } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport ThemesbergLogo from \"../assets/img/themesberg.svg\";\r\nimport ReactHero from \"../assets/img/technologies/logo.png\";\r\nimport ProfilePicture from \"../assets/img/team/profile-picture-3.jpg\";\r\nimport { faInvision } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default ({history}) => {\r\n  const [user, setUser] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if(userInfo && userInfo.role === 'Manager'){\r\n      setUser(userInfo.name)\r\n    }else{\r\n      history.push('/notfound')\r\n    }\r\n  }, [])\r\n  \r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n\r\n  const onCollapse = () => setShow(!show);\r\n\r\n  const CollapsableNavItem = (props) => {\r\n  const { eventKey, title, icon, children = null } = props;\r\n  const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">\r\n              {children}\r\n            </Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\r\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\r\n            {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\r\n\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar expand={false} collapseOnSelect variant=\"dark\" className=\"navbar-theme-primary px-4 d-md-none\">\r\n        <Navbar.Brand className=\"me-lg-5\" as={Link} to={Routes.DashboardOverview.path}>\r\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle as={Button} aria-controls=\"main-navbar\" onClick={onCollapse}>\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}>\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"user-avatar lg-avatar me-4\">\r\n                  <Image src={ProfilePicture} className=\"card-img-top rounded-circle border-white\" />\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <h6>{user}</h6>\r\n\r\n                  {/* <Button as={Link} variant=\"secondary\" size=\"xs\" to={Routes.Signin.path} className=\"text-dark\">\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\" /> Sign Out\r\n                  </Button>\r\n                   */}\r\n                </div>\r\n              </div>\r\n              <Nav.Link className=\"collapse-close d-md-none\" onClick={onCollapse}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n              <NavItem title=\"Dashboard\" link={Routes.ManagerDashboard.path} icon={faHome} />\r\n              <NavItem title=\"Total Leads\" link={Routes.ManagerLeads.path} icon={faTable} />\r\n              <NavItem title=\"Bulk Upload\" link={Routes.ManagerBulkLeads.path} icon={faUpload} />\r\n              {/* <NavItem title=\"Team Member\" link={Routes.ManagerTeamMember.path} icon={faUsers} /> */}\r\n              <NavItem title=\"Add Lead\" link={Routes.ManagerAddLead.path} icon={faUserPlus} />\r\n              <NavItem title=\"Lost Leads\" link={Routes.ManagerLostLeads.path} icon={faTable} />\r\n              <NavItem title=\"Site Visits\" link={Routes.ManagerSiteVisitsLeads.path} icon={faPeopleArrows} />\r\n              <NavItem title=\"Cancelled Leads\" link={Routes.ManagerCancellationLeads.path} icon={faTable} />\r\n              <NavItem title=\"Next Follow Up\" link={Routes.ManagerNextFollowUp.path} icon={faCalendarCheck} />\r\n              <NavItem title=\"Add Member\" link={Routes.ManagerAddMember.path} icon={faUserCheck} />\r\n              <CollapsableNavItem eventKey=\"tables/\" title=\"All Users\" icon={faUserFriends}>\r\n              <NavItem title=\"Team Lead\" link={Routes.ManagerTeamLead.path} icon={faUser} />\r\n              <NavItem title=\"Consultant\" link={Routes.ManagerConsultant.path} icon={faUser} />\r\n              </CollapsableNavItem>\r\n              <NavItem title=\"Activity Log\" link={Routes.ManagerActivityLog.path} icon={faChartPie} />\r\n              <NavItem title=\"Set Milestone\" link={Routes.ManagerSetMilestone.path} icon={faChartBar} />\r\n              <NavItem title=\"Task Manager\" link={Routes.ManagerTaskManager.path} icon={faTasks} />\r\n              \r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faBoxOpen, faChartPie, faCog, faFileAlt, faHandHoldingUsd, faSignOutAlt, faTable, faTimes, faCalendarAlt, faMapPin, faInbox, faRocket, faHome, faUser, faUserFriends, faPlus, faUpload, faUserPlus, faCalendarPlus, faCalendarCheck, faProjectDiagram, faPeopleArrows, faHouseUser, faUserCheck, faGlobe, faChartBar, faTasks, faList } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Nav, Badge, Image, Button, Dropdown, Accordion, Navbar } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport ThemesbergLogo from \"../assets/img/themesberg.svg\";\r\nimport ReactHero from \"../assets/img/technologies/logo.png\";\r\nimport ProfilePicture from \"../assets/img/team/profile-picture-3.jpg\";\r\nimport { faInvision } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default ({history}) => {\r\n  const [user, setUser] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if(userInfo && userInfo.role === 'TeamLead'){\r\n      setUser(userInfo.name)\r\n    }else{\r\n      history.push('/login')\r\n    }\r\n  }, [])\r\n  \r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n\r\n  const onCollapse = () => setShow(!show);\r\n\r\n  const CollapsableNavItem = (props) => {\r\n  const { eventKey, title, icon, children = null } = props;\r\n  const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">\r\n              {children}\r\n            </Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\r\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\r\n            {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\r\n\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar expand={false} collapseOnSelect variant=\"dark\" className=\"navbar-theme-primary px-4 d-md-none\">\r\n        <Navbar.Brand className=\"me-lg-5\" as={Link} to={Routes.DashboardOverview.path}>\r\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle as={Button} aria-controls=\"main-navbar\" onClick={onCollapse}>\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}>\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"user-avatar lg-avatar me-4\">\r\n                  <Image src={ProfilePicture} className=\"card-img-top rounded-circle border-white\" />\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <h6>{user}</h6>\r\n\r\n                  {/* <Button as={Link} variant=\"secondary\" size=\"xs\" to={Routes.Signin.path} className=\"text-dark\">\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\" /> Sign Out\r\n                  </Button>\r\n                   */}\r\n                </div>\r\n              </div>\r\n              <Nav.Link className=\"collapse-close d-md-none\" onClick={onCollapse}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n              {/* <NavItem title=\"Volt React\" link={Routes.Presentation.path} image={ReactHero} /> */}\r\n\r\n              <NavItem title=\"Dashboard\" link={Routes.TeamLeadDashboard.path} icon={faHome} />\r\n              {/* <NavItem title=\"All Projects\" link={Routes.AllProjects.path} icon={faList} /> */}\r\n              <NavItem title=\"Add Lead\" link={Routes.TeamLeadAddLead.path} icon={faUserPlus} />\r\n              <NavItem title=\"Total Leads\" link={Routes.TeamLeadLeads.path} icon={faTable} />\r\n              <NavItem title=\"Site Visits\" link={Routes.TeamLeadSiteVisitsLeads.path} icon={faPeopleArrows} />\r\n              <NavItem title=\"Lost Leads\" link={Routes.TeamLeadLostLeads.path} icon={faTable} />\r\n              {/* <NavItem title=\"Cancelled Leads\" link={Routes.CancellationLeads.path} icon={faTable} /> */}\r\n              {/* <NavItem title=\"Bulk Upload\" link={Routes.UploadLeads.path} icon={faUpload} /> */}\r\n              <NavItem title=\"Next Follow Up\" link={Routes.NextFollowUp.path} icon={faCalendarCheck} />\r\n              {/* <NavItem title=\"Lost Sale\" link={Routes.LostSales.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Site Visits\" link={Routes.SiteVisits.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add Consultant\" link={Routes.AddConsultant.path} icon={faChartPie} /> */}\r\n\r\n              {/* <NavItem title=\"Add Member\" link={Routes.AddMember.path} icon={faUserCheck} /> */}\r\n              {/* <NavItem title=\"Add Team Lead\" link={Routes.AddTeamLead.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add ASM\" link={Routes.AddASM.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add Channel Patner\" link={Routes.AddCP.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add CP Manager\" link={Routes.AddCPM.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Add Lead Assigner\" link={Routes.AddLeadAssigner.path} icon={faChartPie} /> */}\r\n              <CollapsableNavItem eventKey=\"tables/\" title=\"All Users\" icon={faUserFriends}>\r\n              {/* <NavItem title=\"Manager\" link={Routes.Manager.path} icon={faUser} /> */}\r\n              {/* <NavItem title=\"Team Lead\" link={Routes.TeamLead.path} icon={faUser} /> */}\r\n              <NavItem title=\"Consultant\" link={Routes.Consultant.path} icon={faUser} />\r\n              </CollapsableNavItem>\r\n              \r\n              <NavItem title=\"Activity Log\" link={Routes.UserList.path} icon={faChartPie} />\r\n              <NavItem title=\"Set Milestone\" link={Routes.TeamLeadSetMilestone.path} icon={faChartBar} />\r\n              {/* <NavItem title=\"Promotion\" link={Routes.Promotion.path} icon={faProjectDiagram} /> */}\r\n              {/* <NavItem title=\"Add Project\" link={Routes.AddProject.path} icon={faPlus} /> */}\r\n              <NavItem title=\"Task Manager\" link={Routes.TeamLeadTaskManager.path} icon={faTasks} />\r\n\r\n              {/* <NavItem title=\"Overview\" link={Routes.DashboardOverview.path} icon={faChartPie} />\r\n              <NavItem external title=\"Messages\" link=\"https://demo.themesberg.com/volt-pro-react/#/messages\" target=\"_blank\" badgeText=\"Pro\" icon={faInbox} />\r\n              <NavItem title=\"Transactions\" icon={faHandHoldingUsd} link={Routes.Transactions.path} />\r\n              <NavItem title=\"Settings\" icon={faCog} link={Routes.Settings.path} />\r\n              <NavItem external title=\"Calendar\" link=\"https://demo.themesberg.com/volt-pro-react/#/calendar\" target=\"_blank\" badgeText=\"Pro\" icon={faCalendarAlt} />\r\n              <NavItem external title=\"Map\" link=\"https://demo.themesberg.com/volt-pro-react/#/map\" target=\"_blank\" badgeText=\"Pro\" icon={faMapPin} />\r\n\r\n              <CollapsableNavItem eventKey=\"tables/\" title=\"Tables\" icon={faTable}>\r\n                <NavItem title=\"Bootstrap Table\" link={Routes.BootstrapTables.path} />\r\n              </CollapsableNavItem>\r\n\r\n              <CollapsableNavItem eventKey=\"examples/\" title=\"Page Examples\" icon={faFileAlt}>\r\n                <NavItem title=\"Sign In\" link={Routes.Signin.path} />\r\n                <NavItem title=\"Sign Up\" link={Routes.Signup.path} />\r\n                <NavItem title=\"Forgot password\" link={Routes.ForgotPassword.path} />\r\n                <NavItem title=\"Reset password\" link={Routes.ResetPassword.path} />\r\n                <NavItem title=\"Lock\" link={Routes.Lock.path} />\r\n                <NavItem title=\"404 Not Found\" link={Routes.NotFound.path} />\r\n                <NavItem title=\"500 Server Error\" link={Routes.ServerError.path} />\r\n              </CollapsableNavItem>\r\n\r\n              <NavItem external title=\"Plugins\" link=\"https://demo.themesberg.com/volt-pro-react/#/plugins/datatable\" target=\"_blank\" badgeText=\"Pro\" icon={faChartPie} />\r\n\r\n              <Dropdown.Divider className=\"my-3 border-indigo\" />\r\n\r\n              <CollapsableNavItem eventKey=\"documentation/\" title=\"Getting Started\" icon={faBook}>\r\n                <NavItem title=\"Overview\" link={Routes.DocsOverview.path} />\r\n                <NavItem title=\"Download\" link={Routes.DocsDownload.path} />\r\n                <NavItem title=\"Quick Start\" link={Routes.DocsQuickStart.path} />\r\n                <NavItem title=\"License\" link={Routes.DocsLicense.path} />\r\n                <NavItem title=\"Folder Structure\" link={Routes.DocsFolderStructure.path} />\r\n                <NavItem title=\"Build Tools\" link={Routes.DocsBuild.path} />\r\n                <NavItem title=\"Changelog\" link={Routes.DocsChangelog.path} />\r\n              </CollapsableNavItem>\r\n              <CollapsableNavItem eventKey=\"components/\" title=\"Components\" icon={faBoxOpen}>\r\n                <NavItem title=\"Accordion\" link={Routes.Accordions.path} />\r\n                <NavItem title=\"Alerts\" link={Routes.Alerts.path} />\r\n                <NavItem title=\"Badges\" link={Routes.Badges.path} />\r\n                <NavItem external title=\"Widgets\" link=\"https://demo.themesberg.com/volt-pro-react/#/components/widgets\" target=\"_blank\" badgeText=\"Pro\" />\r\n                <NavItem title=\"Breadcrumbs\" link={Routes.Breadcrumbs.path} />\r\n                <NavItem title=\"Buttons\" link={Routes.Buttons.path} />\r\n                <NavItem title=\"Forms\" link={Routes.Forms.path} />\r\n                <NavItem title=\"Modals\" link={Routes.Modals.path} />\r\n                <NavItem title=\"Navbars\" link={Routes.Navbars.path} />\r\n                <NavItem title=\"Navs\" link={Routes.Navs.path} />\r\n                <NavItem title=\"Pagination\" link={Routes.Pagination.path} />\r\n                <NavItem title=\"Popovers\" link={Routes.Popovers.path} />\r\n                <NavItem title=\"Progress\" link={Routes.Progress.path} />\r\n                <NavItem title=\"Tables\" link={Routes.Tables.path} />\r\n                <NavItem title=\"Tabs\" link={Routes.Tabs.path} />\r\n                <NavItem title=\"Toasts\" link={Routes.Toasts.path} />\r\n                <NavItem title=\"Tooltips\" link={Routes.Tooltips.path} />\r\n              </CollapsableNavItem>\r\n              <NavItem external title=\"Themesberg\" link=\"https://themesberg.com\" target=\"_blank\" image={ThemesbergLogo} />\r\n              <Button as={Link} to={Routes.Upgrade.path} variant=\"secondary\" className=\"upgrade-to-pro\"><FontAwesomeIcon icon={faRocket} className=\"me-1\" /> Upgrade to Pro</Button> */}\r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faBoxOpen, faChartPie, faCog, faFileAlt, faHandHoldingUsd, faSignOutAlt, faTable, faTimes, faCalendarAlt, faMapPin, faInbox, faRocket, faHome, faUser, faUserFriends, faPlus, faUpload, faUserPlus, faCalendarPlus, faCalendarCheck, faProjectDiagram, faPeopleArrows, faHouseUser, faUserCheck, faGlobe, faChartBar, faTasks, faList } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Nav, Badge, Image, Button, Dropdown, Accordion, Navbar } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport ThemesbergLogo from \"../assets/img/themesberg.svg\";\r\nimport ReactHero from \"../assets/img/technologies/logo.png\";\r\nimport ProfilePicture from \"../assets/img/team/profile-picture-3.jpg\";\r\nimport { faInvision } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default (props = {}) => {\r\n  const [user, setUser] = useState('')\r\n  const {history} = props\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if(userInfo && userInfo.role === 'Consultant'){\r\n      setUser(userInfo.name)\r\n    }else{\r\n      history.push('/login')\r\n    }\r\n  }, [])\r\n  \r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n\r\n  const onCollapse = () => setShow(!show);\r\n\r\n  const CollapsableNavItem = (props) => {\r\n  const { eventKey, title, icon, children = null } = props;\r\n  const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">\r\n              {children}\r\n            </Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\r\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\r\n            {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\r\n\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar expand={false} collapseOnSelect variant=\"dark\" className=\"navbar-theme-primary px-4 d-md-none\">\r\n        <Navbar.Brand className=\"me-lg-5\" as={Link} to={Routes.DashboardOverview.path}>\r\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle as={Button} aria-controls=\"main-navbar\" onClick={onCollapse}>\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}>\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"user-avatar lg-avatar me-4\">\r\n                  <Image src={ProfilePicture} className=\"card-img-top rounded-circle border-white\" />\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <h6>{user}</h6>\r\n                </div>\r\n              </div>\r\n              <Nav.Link className=\"collapse-close d-md-none\" onClick={onCollapse}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n\r\n              <NavItem title=\"Dashboard\" link={Routes.ConsultantDashboard.path} icon={faHome} />\r\n              {/* <NavItem title=\"All Projects\" link={Routes.AllProjects.path} icon={faList} /> */}\r\n              <NavItem title=\"Add Lead\" link={Routes.ConsultantAddLead.path} icon={faUserPlus} />\r\n              <NavItem title=\"Total Leads\" link={Routes.ConsultantLeads.path} icon={faTable} />\r\n              <NavItem title=\"Site Visits\" link={Routes.ConsultantSiteVisitsLeads.path} icon={faPeopleArrows} />\r\n              <NavItem title=\"Lost Leads\" link={Routes.ConsultantLostLeads.path} icon={faTable} />\r\n              {/* <NavItem title=\"Cancelled Leads\" link={Routes.CancellationLeads.path} icon={faTable} /> */}\r\n              <NavItem title=\"Next Follow Up\" link={Routes.ConsultantNextFollowUp.path} icon={faCalendarCheck} />\r\n              {/* <NavItem title=\"Add Member\" link={Routes.AddMember.path} icon={faUserCheck} /> */}\r\n              {/* <CollapsableNavItem eventKey=\"tables/\" title=\"All Users\" icon={faUserFriends}>\r\n              <NavItem title=\"Manager\" link={Routes.Manager.path} icon={faUser} />\r\n              <NavItem title=\"Team Lead\" link={Routes.TeamLead.path} icon={faUser} />\r\n              <NavItem title=\"Consultant\" link={Routes.Consultant.path} icon={faUser} />\r\n              </CollapsableNavItem> */}\r\n              \r\n              {/* <NavItem title=\"Activity Log\" link={Routes.ConsultantUserList.path} icon={faChartPie} /> */}\r\n              {/* <NavItem title=\"Set Milestone\" link={Routes.SetMilestone.path} icon={faChartBar} /> */}\r\n              <NavItem title=\"Task Manager\" link={Routes.ConsultantTaskManager.path} icon={faTasks} />\r\n\r\n             \r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faBoxOpen, faChartPie, faCog, faFileAlt, faHandHoldingUsd, faSignOutAlt, faTable, faTimes, faCalendarAlt, faMapPin, faInbox, faRocket, faHome, faUser, faUserFriends, faPlus, faUpload, faUserPlus, faCalendarPlus, faCalendarCheck, faProjectDiagram, faPeopleArrows, faHouseUser, faUserCheck, faGlobe, faChartBar, faTasks, faList, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Nav, Badge, Image, Button, Dropdown, Accordion, Navbar } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport ThemesbergLogo from \"../assets/img/themesberg.svg\";\r\nimport ReactHero from \"../assets/img/technologies/logo.png\";\r\nimport ProfilePicture from \"../assets/img/team/profile-picture-3.jpg\";\r\nimport { faInvision } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default ({history}) => {\r\n  const [user, setUser] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if(userInfo && userInfo.role === 'CPM'){\r\n      setUser(userInfo.name)\r\n    }else{\r\n      history.push('/notfound')\r\n    }\r\n  }, [])\r\n  \r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n\r\n  const onCollapse = () => setShow(!show);\r\n\r\n  const CollapsableNavItem = (props) => {\r\n  const { eventKey, title, icon, children = null } = props;\r\n  const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">\r\n              {children}\r\n            </Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\r\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\r\n            {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\r\n\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar expand={false} collapseOnSelect variant=\"dark\" className=\"navbar-theme-primary px-4 d-md-none\">\r\n        <Navbar.Brand className=\"me-lg-5\" as={Link} to={Routes.DashboardOverview.path}>\r\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle as={Button} aria-controls=\"main-navbar\" onClick={onCollapse}>\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}>\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"user-avatar lg-avatar me-4\">\r\n                  <Image src={ProfilePicture} className=\"card-img-top rounded-circle border-white\" />\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <h6>{user}</h6>\r\n\r\n                  {/* <Button as={Link} variant=\"secondary\" size=\"xs\" to={Routes.Signin.path} className=\"text-dark\">\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\" /> Sign Out\r\n                  </Button>\r\n                   */}\r\n                </div>\r\n              </div>\r\n              <Nav.Link className=\"collapse-close d-md-none\" onClick={onCollapse}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n              <NavItem title=\"Dashboard\" link={Routes.CPManagerDashboard.path} icon={faHome} />\r\n              <NavItem title=\"Total Leads\" link={Routes.CPManagerLeads.path} icon={faTable} />\r\n              {/* <NavItem title=\"Bulk Upload\" link={Routes.CPManagerBulkLeads.path} icon={faUpload} /> */}\r\n              <NavItem title=\"Add Lead\" link={Routes.CPManagerAddLead.path} icon={faUserPlus} />\r\n              <NavItem title=\"Lost Leads\" link={Routes.CPManagerLostLeads.path} icon={faTable} />\r\n              <NavItem title=\"Site Visits\" link={Routes.CPManagerSiteVisitsLeads.path} icon={faPeopleArrows} />\r\n              <NavItem title=\"Cancelled Leads\" link={Routes.CPManagerCancellationLeads.path} icon={faTable} />\r\n              <NavItem title=\"Next Follow Up\" link={Routes.CPManagerNextFollowUp.path} icon={faCalendarCheck} />\r\n              <NavItem title=\"Activity Log\" link={Routes.CPManagerActivityLog.path} icon={faChartPie} />\r\n              <NavItem title=\"Task Manager\" link={Routes.CPManagerTaskManager.path} icon={faTasks} />             \r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faBoxOpen, faChartPie, faCog, faFileAlt, faHandHoldingUsd, faSignOutAlt, faTable, faTimes, faCalendarAlt, faMapPin, faInbox, faRocket, faHome, faUser, faUserFriends, faPlus, faUpload, faUserPlus, faCalendarPlus, faCalendarCheck, faProjectDiagram, faPeopleArrows, faHouseUser, faUserCheck, faGlobe, faChartBar, faTasks, faList, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Nav, Badge, Image, Button, Dropdown, Accordion, Navbar } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../routes\";\r\nimport ThemesbergLogo from \"../assets/img/themesberg.svg\";\r\nimport ReactHero from \"../assets/img/technologies/logo.png\";\r\nimport ProfilePicture from \"../assets/img/team/profile-picture-3.jpg\";\r\nimport { faInvision } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nexport default ({history}) => {\r\n  const [user, setUser] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if(userInfo && userInfo.role === 'LeadAssigner'){\r\n      setUser(userInfo.name)\r\n    }else{\r\n      history.push('/notfound')\r\n    }\r\n  }, [])\r\n  \r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n\r\n  const onCollapse = () => setShow(!show);\r\n\r\n  const CollapsableNavItem = (props) => {\r\n  const { eventKey, title, icon, children = null } = props;\r\n  const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">\r\n              {children}\r\n            </Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\r\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\r\n            {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\r\n\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar expand={false} collapseOnSelect variant=\"dark\" className=\"navbar-theme-primary px-4 d-md-none\">\r\n        <Navbar.Brand className=\"me-lg-5\" as={Link} to={Routes.DashboardOverview.path}>\r\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle as={Button} aria-controls=\"main-navbar\" onClick={onCollapse}>\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}>\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"user-avatar lg-avatar me-4\">\r\n                  <Image src={ProfilePicture} className=\"card-img-top rounded-circle border-white\" />\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <h6>{user}</h6>\r\n\r\n                  {/* <Button as={Link} variant=\"secondary\" size=\"xs\" to={Routes.Signin.path} className=\"text-dark\">\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\" /> Sign Out\r\n                  </Button>\r\n                   */}\r\n                </div>\r\n              </div>\r\n              <Nav.Link className=\"collapse-close d-md-none\" onClick={onCollapse}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n              <NavItem title=\"Dashboard\" link={Routes.LeadAssginerDashboard.path} icon={faHome} />\r\n              <NavItem title=\"Total Leads\" link={Routes.leadAssignerLeads.path} icon={faTable} />\r\n              <NavItem title=\"Bulk Upload\" link={Routes.leadAssignerBulkLeads.path} icon={faUpload} />\r\n              {/* <NavItem title=\"Team Member\" link={Routes.ManagerTeamMember.path} icon={faUsers} /> */}\r\n              {/* <NavItem title=\"Add Lead\" link={Routes.leadAssignerAddLead.path} icon={faUserPlus} /> */}\r\n             \r\n              <NavItem title=\"Activity Log\" link={Routes.leadAssignerActivityLog.path} icon={faChartPie} />\r\n              <NavItem title=\"Task Manager\" link={Routes.leadAssignerTaskManager.path} icon={faTasks} />\r\n              \r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card, Accordion } from '@themesberg/react-bootstrap';\r\n\r\nexport default (props) => {\r\n  const { defaultKey, data = [], className = \"\" } = props;\r\n\r\n  const AccordionItem = (item) => {\r\n    const { eventKey, title, description } = item;\r\n\r\n    return (\r\n      <Accordion.Item eventKey={eventKey}>\r\n        <Accordion.Button variant=\"link\" className=\"w-100 d-flex justify-content-between\">\r\n          <span className=\"h6 mb-0 fw-bold\">\r\n            {title}\r\n          </span>\r\n        </Accordion.Button>\r\n        <Accordion.Body>\r\n          <Card.Body className=\"py-2 px-0\">\r\n            <Card.Text className=\"mb-0\">\r\n              {description}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Accordion className={className} defaultActiveKey={defaultKey}>\r\n      {data.map(d => <AccordionItem key={`accordion-${d.id}`} {...d} />)}\r\n    </Accordion>\r\n  );\r\n};","\r\nimport React from 'react';\r\nimport { Row, Col } from '@themesberg/react-bootstrap';\r\n\r\nimport CodeEditor from \"./CodeEditor\";\r\n\r\nexport default (props) => {\r\n  const { title, description, example = null, imports = null, scope = {}, maxHeight = null } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pt-2\">\r\n        <Row>\r\n          <Col xs={12}>\r\n            <h2 className=\"fs-5\">{title}</h2>\r\n            {description}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"pb-5\">\r\n        <Row className=\"mt-4\">\r\n          <Col xs={12}>\r\n            <CodeEditor code={example} scope={scope} imports={imports} maxHeight={maxHeight} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Row, Col, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport AccordionComponent from \"../../components/AccordionComponent\";\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\nexport default () => (\r\n  <article>\r\n    <Container className=\"px-0\">\r\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <Col className=\"d-block mb-4 mb-md-0\">\r\n          <h1 className=\"h2\">Accordions</h1>\r\n          <p className=\"mb-0\">\r\n            Use the accordion elements to segment content and show/hide when clicking on tabs.\r\n        </p>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Documentation\r\n        title=\"Example\"\r\n        description={\r\n          <p>Use the <code>{`<AccordionComponent>`}</code> component and make sure to set the required props, defaultKey and data, to make it shine. When the title element will be toggled you'll get to see the description.</p>\r\n        }\r\n        scope={{ AccordionComponent }}\r\n        imports={`import AccordionComponent from \"src/components/AccordionComponent\";`}\r\n        example={`<AccordionComponent\r\n  defaultKey=\"panel-1\"\r\n  data={[\r\n    {\r\n      id: 1,\r\n      eventKey: \"panel-1\",\r\n      title: \"What is the purpose of a FAQ?\",\r\n      description: \"At Themesberg, our mission has always been focused on bringing openness and transparency to the design process. We've always believed that by providing a space where designers can share ongoing work not only empowers them to make better products, it also helps them grow. We're proud to be a part of creating a more open culture and to continue building a product that supports this vision.\"\r\n    },\r\n    {\r\n      id: 2,\r\n      eventKey: \"panel-2\",\r\n      title: \"What is a FAQ document?\",\r\n      description: \"At Themesberg, our mission has always been focused on bringing openness and transparency to the design process. We've always believed that by providing a space where designers can share ongoing work not only empowers them to make better products, it also helps them grow. We're proud to be a part of creating a more open culture and to continue building a product that supports this vision.\"\r\n    },\r\n    {\r\n      id: 3,\r\n      eventKey: \"panel-3\",\r\n      title: \"What are the top 10 interview questions?\",\r\n      description: \"At Themesberg, our mission has always been focused on bringing openness and transparency to the design process. We've always believed that by providing a space where designers can share ongoing work not only empowers them to make better products, it also helps them grow. We're proud to be a part of creating a more open culture and to continue building a product that supports this vision.\"\r\n    }\r\n  ]} />`}\r\n      />\r\n    </Container>\r\n  </article>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBullhorn } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Alert, Button, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Alerts</h1>\r\n            <p className=\"mb-0\">\r\n              Use alerts to provide contextual feedback to your users based on their input and behaviour.\r\n        </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <p>The <code>&#x3C;Alert&#x3E;</code> component can be used to show your users error, success, informational or warning messages. Use component properties such as  <code>variant=\"primary</code> or <code>variant=\"secondary\"</code> to use the colors from the Sass variables:</p>\r\n          }\r\n          scope={{ Alert }}\r\n          imports={`import { Alert } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <Alert variant=\"primary\">\r\n    A simple primary alert — check it out!\r\n  </Alert>\r\n  <Alert variant=\"secondary\">\r\n    A simple secondary alert — check it out!\r\n  </Alert>\r\n  <Alert variant=\"success\">\r\n    A simple success alert — check it out!\r\n  </Alert>\r\n  <Alert variant=\"danger\">\r\n    A simple danger alert — check it out!\r\n  </Alert>\r\n  <Alert variant=\"warning\">\r\n    A simple warning alert — check it out!\r\n  </Alert>\r\n  <Alert variant=\"info\">\r\n    A simple info alert — check it out!\r\n  </Alert>\r\n  <Alert variant=\"light\">\r\n    A simple light alert — check it out!\r\n  </Alert>\r\n  <Alert variant=\"dark\">\r\n    A simple dark alert — check it out!\r\n  </Alert>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Dismissable alerts\"\r\n          description={\r\n            <p>The <code>&#x3C;Alert&#x3E;</code> component can be used to create an alert component that can be closed by clicking on the close icon by adding the <code>show</code> and <code>onClose</code> properties. Additionally, you can also use the <code>&#x3C;FontAwesomeIcon&#x3E;</code> component to add an icon inside the alert component.</p>\r\n          }\r\n          scope={{ Alert, Button, FontAwesomeIcon, faBullhorn }}\r\n          imports={`import { Alert, Button } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBullhorn } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`function DismissableAlerts() {\r\n  const [hiddenAlerts, setHiddenAlerts] = React.useState([]);\r\n\r\n  const onClose = (alertId) => {\r\n    const hiddenAlertsUpdated = [...hiddenAlerts, alertId];\r\n    setHiddenAlerts(hiddenAlertsUpdated);\r\n  };\r\n\r\n  const shouldShowAlert = (alertId) => (\r\n    hiddenAlerts.indexOf(alertId) === -1\r\n  );\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <Alert\r\n        variant=\"primary\"\r\n        show={shouldShowAlert(\"primary\")}\r\n        onClose={() => onClose(\"primary\")}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faBullhorn} className=\"me-1\" />\r\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n          </div>\r\n          <Button variant=\"close\" size=\"xs\" onClick={() => onClose(\"primary\")} />\r\n        </div>\r\n      </Alert>\r\n\r\n      <Alert\r\n        variant=\"secondary\"\r\n        show={shouldShowAlert(\"secondary\")}\r\n        onClose={() => onClose(\"secondary\")}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faBullhorn} className=\"me-1\" />\r\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n          </div>\r\n          <Button variant=\"close\" size=\"xs\" onClick={() => onClose(\"secondary\")} />\r\n        </div>\r\n      </Alert>\r\n      \r\n      <Alert\r\n        variant=\"danger\"\r\n        show={shouldShowAlert(\"danger\")}\r\n        onClose={() => onClose(\"danger\")}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faBullhorn} className=\"me-1\" />\r\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n          </div>\r\n          <Button variant=\"close\" size=\"xs\" onClick={() => onClose(\"danger\")} />\r\n        </div>\r\n      </Alert>\r\n\r\n      <Alert\r\n        variant=\"success\"\r\n        show={shouldShowAlert(\"success\")}\r\n        onClose={() => onClose(\"success\")}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faBullhorn} className=\"me-1\" />\r\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n          </div>\r\n          <Button variant=\"close\" size=\"xs\" onClick={() => onClose(\"success\")} />\r\n        </div>\r\n      </Alert>\r\n\r\n      <Alert\r\n        variant=\"warning\"\r\n        show={shouldShowAlert(\"warning\")}\r\n        onClose={() => onClose(\"warning\")}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faBullhorn} className=\"me-1\" />\r\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n          </div>\r\n          <Button variant=\"close\" size=\"xs\" onClick={() => onClose(\"warning\")} />\r\n        </div>\r\n      </Alert>\r\n\r\n      <Alert\r\n        variant=\"light\"\r\n        show={shouldShowAlert(\"light\")}\r\n        onClose={() => onClose(\"light\")}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faBullhorn} className=\"me-1\" />\r\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n          </div>\r\n          <Button variant=\"close\" size=\"xs\" onClick={() => onClose(\"light\")} />\r\n        </div>\r\n      </Alert>\r\n\r\n      <Alert\r\n        variant=\"dark\"\r\n        show={shouldShowAlert(\"dark\")}\r\n        onClose={() => onClose(\"dark\")}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faBullhorn} className=\"me-1\" />\r\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\r\n          </div>\r\n          <Button variant=\"close\" size=\"xs\" onClick={() => onClose(\"dark\")} />\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nrender( <DismissableAlerts /> );`}\r\n        />\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Col, Row, Badge, Button, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => (\r\n  <article>\r\n    <Container className=\"px-0\">\r\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <Col className=\"d-block mb-4 mb-md-0\">\r\n          <h1 className=\"h2\">Badges</h1>\r\n          <p className=\"mb-0\">\r\n            Use badges to add extra labeling to alongside titles or to categorize items.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Documentation\r\n        title=\"Example\"\r\n        description={\r\n          <p>Use the <code>&#x3C;Badge&#x3E;</code> component to show and highlight labeled text. You can update the colors using the following modifier classes (ie. <code>bg-primary</code>, <code>bg-secondary</code>):</p>\r\n        }\r\n        scope={{ Badge }}\r\n        imports={`import { Badge } from '@themesberg/react-bootstrap';`}\r\n        example={`<React.Fragment>\r\n  <Badge bg=\"primary\" className=\"me-1\">Primary</Badge>\r\n  <Badge bg=\"secondary\" className=\"me-1\">Secondary</Badge>\r\n  <Badge bg=\"success\" className=\"me-1\">Success</Badge>\r\n  <Badge bg=\"danger\" className=\"me-1\">Danger</Badge>\r\n  <Badge bg=\"warning\" text=\"dark\" className=\"me-1\">Warning</Badge>\r\n  <Badge bg=\"info\" className=\"me-1\">Info</Badge>\r\n  <Badge bg=\"light\" text=\"dark\" className=\"me-1\">Light</Badge>\r\n  <Badge bg=\"dark\">Dark</Badge>\r\n</React.Fragment>`}\r\n      />\r\n\r\n      <Documentation\r\n        title=\"Sizing with badges\"\r\n        description=\r\n        {\r\n          <p>To update the size of the <code>&#x3C;Badge&#x3E;</code> component you can use the size modified classes, such as <code>badge-md</code> or <code>badge-lg</code>.</p>\r\n        }\r\n        scope={{ Badge }}\r\n        imports={`import { Badge } from '@themesberg/react-bootstrap';`}\r\n        example={`<React.Fragment>\r\n  <Badge bg=\"primary\" className=\"me-1\">Primary</Badge>\r\n  <Badge bg=\"secondary\" text=\"dark\" className=\"badge-md me-1\">Secondary</Badge>\r\n  <Badge bg=\"success\" className=\"badge-lg\">Success</Badge>\r\n</React.Fragment>`}\r\n      />\r\n\r\n      <Documentation\r\n        title=\"Pill badges\"\r\n        description={\r\n          <p>Set the <code>pill</code> on <code>true</code> property to make badges more rounded with a larger border radius.</p>\r\n        }\r\n        scope={{ Badge }}\r\n        imports={`import { Badge } from '@themesberg/react-bootstrap';`}\r\n        example={`<React.Fragment>\r\n  <Badge pill={true} bg=\"primary\" className=\"me-1\">Primary</Badge>\r\n  <Badge pill={true} bg=\"secondary\" className=\"me-1\">Secondary</Badge>\r\n  <Badge pill={true} bg=\"success\" className=\"me-1\">Success</Badge>\r\n  <Badge pill={true} bg=\"danger\" className=\"me-1\">Danger</Badge>\r\n</React.Fragment>`}\r\n      />\r\n\r\n      <Documentation\r\n        title=\"Notification badges\"\r\n        description={\r\n          <p>You can also use the <code>&#x3C;Badge&#x3E;</code> component inside other components, such as buttons, alerts, simple paragraphs.</p>\r\n        }\r\n        scope={{ Button, Badge }}\r\n        imports={`import { Badge, Button } from '@themesberg/react-bootstrap';`}\r\n        example={`<Button variant=\"primary\">Profile <Badge bg=\"secondary\">9</Badge></Button>`}\r\n      />\r\n    </Container>\r\n  </article>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { Col, Row, Container, Breadcrumb } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Breadcrumbs</h1>\r\n            <p className=\"mb-0\">\r\n              Use breadcrumbs to indicate the navigational hierarchy of the current page.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <p>Use the <code>&#x3C;Breadcrumb&#x3E;</code> component to show a clear navigational hierarchy for your users, wherever they may be on a given page. Using the <code>variant</code> modifier props you can update the color of the component.</p>\r\n          }\r\n          scope={{ Row, Col, Breadcrumb }}\r\n          imports={`import { Breadcrumb } from '@themesberg/react-bootstrap';`}\r\n          example={`<Row>\r\n  <Col lg={6}>\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-primary breadcrumb-text-light text-white\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-secondary breadcrumb-text-light text-white\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-tertiary breadcrumb-text-light text-white\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-info breadcrumb-text-light text-white\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n  </Col>\r\n</Row>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Transparent Breadcrumbs\"\r\n          description={\r\n            <p>In order to make the <code>&#x3C;Breadcrumb&#x3E;</code> component transparent, all you need to do is add the <code>breadcrumb-transparent</code> modifier class to the parent component.</p>\r\n          }\r\n          scope={{ Row, Col, Breadcrumb }}\r\n          imports={`import { Breadcrumb } from '@themesberg/react-bootstrap';`}\r\n          example={`<Row>\r\n  <Col lg={6}>\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-primary breadcrumb-transparent\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-secondary breadcrumb-transparent\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-tertiary breadcrumb-transparent\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n\r\n    <Breadcrumb listProps={{ className: \"breadcrumb-info breadcrumb-transparent\" }}>\r\n        <Breadcrumb.Item href=\"#home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"#library\">Library</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n  </Col>\r\n</Row>`}\r\n        />\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart, faThumbsUp, faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Button, Container, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Buttons</h1>\r\n            <p className=\"mb-0\">\r\n              Use custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <p>The <code>&#x3C;Button&#x3E;</code> component is an important part of the UI that you can use for user actions. If you want to change the appearance of a given button, you can update the modifier props of the <code>variant</code> attribute.</p>\r\n          }\r\n          scope={{ Button }}\r\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <Button variant=\"primary\" className=\"m-1\">Primary</Button>\r\n  <Button variant=\"secondary\" className=\"m-1\">Secondary</Button>\r\n  <Button variant=\"tertiary\" className=\"m-1\">Tertiary</Button>\r\n  <Button variant=\"info\" className=\"m-1\">Info</Button>\r\n  <Button variant=\"success\" className=\"m-1\">Success</Button>\r\n  <Button variant=\"warning\" className=\"m-1\">Warning</Button>\r\n  <Button variant=\"danger\" className=\"m-1\">Danger</Button>\r\n  <Button variant=\"dark\" className=\"m-1\">Dark</Button>\r\n  <Button variant=\"gray\" className=\"m-1\">Gray</Button>\r\n  <Button variant=\"light\" className=\"m-1\">Light</Button>\r\n  <Button variant=\"white\" className=\"m-1\">White</Button>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Button sizing\"\r\n          description={\r\n            <p>The <code>&#x3C;Button&#x3E;</code> component comes with three main sizing options: <code>sm</code>, default, and <code>lg</code>. In order to change the size of the button you need to set the size using the <code>size</code> attribute.</p>\r\n          }\r\n          scope={{ Button }}\r\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <Button variant=\"primary\" size=\"sm\" className=\"me-1\">Small</Button>\r\n  <Button variant=\"primary\" className=\"me-1\">Regular</Button>\r\n  <Button variant=\"primary\" size=\"lg\" className=\"me-1\">Large Button</Button>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Buttons with outline\"\r\n          description={\r\n            <p>Instead of a fully colored background, you can also choose to style the <code>&#x3C;Button&#x3E;</code> component to only have an outline border by using the <code>outline-primary</code>, <code>outline-secondary</code> modifier classes inside the <code>variant</code> attribute.</p>\r\n          }\r\n          scope={{ Button }}\r\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <Button variant=\"outline-primary\" className=\"m-1\">Primary</Button>\r\n  <Button variant=\"outline-secondary\" className=\"m-1\">Secondary</Button>\r\n  <Button variant=\"outline-tertiary\" className=\"m-1\">Tertiary</Button>\r\n  <Button variant=\"outline-info\" className=\"m-1\">Info</Button>\r\n  <Button variant=\"outline-success\" className=\"m-1\">Success</Button>\r\n  <Button variant=\"outline-danger\" className=\"m-1\">Danger</Button>\r\n  <Button variant=\"outline-dark\" className=\"m-1\">Dark</Button>\r\n  <Button variant=\"outline-gray\" className=\"m-1\">Gray</Button>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Link buttons\"\r\n          description={\r\n            <p>If you want to use the <code>&#x3C;Button&#x3E;</code> component, but without the appearance of a button, just use the <code>bsPrefix=\"text\"</code> attribute to create link styled buttons.</p>\r\n          }\r\n          scope={{ Button }}\r\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <Button bsPrefix=\"text\" href=\"#primary\" variant=\"primary\" className=\"m-3\">Primary</Button>\r\n  <Button bsPrefix=\"text\" href=\"#secondary\" variant=\"secondary\" className=\"m-3\">Secondary</Button>\r\n  <Button bsPrefix=\"text\" href=\"#tertiary\" variant=\"tertiary\" className=\"m-3\">Tertiary</Button>\r\n  <Button bsPrefix=\"text\" href=\"#info\" variant=\"info\" className=\"m-3\">Info</Button>\r\n  <Button bsPrefix=\"text\" href=\"#success\" variant=\"success\" className=\"m-3\">Success</Button>\r\n  <Button bsPrefix=\"text\" href=\"#danger\" variant=\"danger\" className=\"m-3\">Danger</Button>\r\n  <Button bsPrefix=\"text\" href=\"#dark\" variant=\"dark\" className=\"m-3\">Dark</Button>\r\n  <Button bsPrefix=\"text\" href=\"#gray\" variant=\"gray\" className=\"m-3\">Gray</Button>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Buttons with icon\"\r\n          description={\r\n            <p>You may want to use icons inside the <code>&#x3C;Button&#x3E;</code> component, which can be done by simply adding a <code>&#x3C;FontAwesomeIcon&#x3E;</code> component inside the button element.</p>\r\n          }\r\n          scope={{ Button, FontAwesomeIcon, faHeart, faThumbsUp }}\r\n          imports={`import { Button } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`<React.Fragment>\r\n  <Button variant=\"outline-primary\" className=\"m-1\">\r\n    <FontAwesomeIcon icon={faHeart} className=\"me-2\" /> Primary\r\n  </Button>\r\n  <Button variant=\"outline-secondary\" className=\"m-1\">\r\n    <FontAwesomeIcon icon={faThumbsUp} className=\"me-2\" /> Secondary\r\n  </Button>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Block level Buttons\"\r\n          description={\r\n            <p>Block level buttons are great if you want the button to take up 100% of the width of the parent element. You need to add the <code>w-100</code> class to the component.</p>\r\n          }\r\n          scope={{ Button }}\r\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\r\n          example={`<Button variant=\"secondary\" color=\"dark\" className=\"w-100\">Block</Button>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Disabled state\"\r\n          description={\r\n            <p>You may want to disable the <code>&#x3C;Button&#x3E;</code> component for various reasons, so you need to add the <code>disabled</code> attribute in order to achieve that.</p>\r\n          }\r\n          scope={{ Button }}\r\n          imports={`import { Button } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <Button disabled variant=\"primary\" className=\"mb-2 me-2\">\r\n    Primary button\r\n  </Button>\r\n  <Button disabled variant=\"secondary\" className=\"mb-2 me-2\">\r\n    Button\r\n  </Button>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Dropdown buttons\"\r\n          description={\r\n            <>\r\n              <p>Use the <code>&#x3C;Dropdown&#x3E;</code> component coupled with the <code>&#x3C;Button&#x3E;</code> component in order to create dropdown items when clicking on a button. The <code> &#x3C;Dropdown.Toggle&#x3E;</code> is the component that will trigger the dropdown menu, while the <code>&#x3C;Dropdown.Menu&#x3E;</code> is the actual menu where you can add the dropdown items.</p>\r\n              <p>The <code>&#x3C;Button&#x3E;</code> component is used either before or after the toggle component, but all of this is wrapped around with the main <code>&#x3C;Dropdown&#x3E;</code> component.</p>\r\n            </>\r\n          }\r\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown }}\r\n          imports={`import { Button, Dropdown, ButtonGroup } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`<React.Fragment>\r\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button variant=\"primary\">Primary</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"primary\">\r\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown as={ButtonGroup} className=\"mb-2 me-2\">\r\n    <Dropdown.Toggle split variant=\"tertiary\">\r\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Dropdown sizing\"\r\n          description={\r\n            <p>You may want to use one of the three main sizing options for the <code>&#x3C;Dropdown&#x3E;</code> component, so in order to do that you only need to use the <code>size=\"md\"</code> or <code>size=\"lg\"</code> attributes for the <code>&#x3C;Button&#x3E;</code> component inside the dropdown component.</p>\r\n          }\r\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown }}\r\n          imports={`import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`<React.Fragment>\r\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button size=\"sm\" variant=\"primary\">Small</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"primary\">\r\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button variant=\"secondary\">Default</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"secondary\">\r\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button size=\"lg\" variant=\"tertiary\">Large</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"tertiary\">\r\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n</React.Fragment>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Dropdown direction\"\r\n          description={\r\n            <p>If you want to change the direction of the <code>&#x3C;Dropdown&#x3E;</code> component, you can do that by using the <code>direction=\"*\"</code> attribute where you can use <code>up</code>, <code>right</code>, <code>down</code>, or <code>left</code> as attribute values.</p>\r\n          }\r\n          scope={{ Button, Dropdown, ButtonGroup, FontAwesomeIcon, faAngleDown, faAngleUp, faAngleLeft, faAngleRight }}\r\n          imports={`import { Button, ButtonGroup, Dropdown } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`<React.Fragment>\r\n  <Dropdown drop={faAngleUp} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button size=\"sm\" variant=\"primary\">Up</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"primary\">\r\n      <FontAwesomeIcon icon={faAngleUp} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown drop={faAngleRight} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button variant=\"secondary\">Right</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"secondary\">\r\n      <FontAwesomeIcon icon={faAngleRight} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown drop={faAngleDown} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button size=\"lg\" variant=\"tertiary\">Down</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"tertiary\">\r\n      <FontAwesomeIcon icon={faAngleDown} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown drop={faAngleLeft} as={ButtonGroup} className=\"me-2 mb-2\">\r\n    <Button size=\"lg\" variant=\"tertiary\">Left</Button>\r\n\r\n    <Dropdown.Toggle split variant=\"tertiary\">\r\n      <FontAwesomeIcon icon={faAngleLeft} className=\"dropdown-arrow\" />\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"#action\">Action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Another action</Dropdown.Item>\r\n      <Dropdown.Item href=\"#action\">Something else here</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item href=\"#action\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n</React.Fragment>`}\r\n        />\r\n\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Container, InputGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Forms</h1>\r\n            <p className=\"mb-0\">\r\n              Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <p>Form elements are an important part of the UI to receive text input from the users. The <code>&#x3C;Form&#x3E;</code> component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:</p>\r\n          }\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n  </Form.Group>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>Example textarea</Form.Label>\r\n    <Form.Control as=\"textarea\" rows=\"3\" />\r\n  </Form.Group>\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Input fields with icon\"\r\n          description={\r\n            <p>You can also add icons to the left or right side of the input field by using the <code>&#x3C;InputGroup&#x3E;</code> component and using the <code>&#x3C;InputGroup.Text&#x3E;</code> element with an icon element inside it, either after or before the <code>&#x3C;Form.Control&#x3E;</code> element.</p>\r\n          }\r\n          scope={{ Form, InputGroup, FontAwesomeIcon, faSearch }}\r\n          imports={`import { Form, InputGroup } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`<Form>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>Icon Left</Form.Label>\r\n    <InputGroup>\r\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\r\n      <Form.Control type=\"text\" placeholder=\"Search\" />\r\n    </InputGroup>\r\n  </Form.Group>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>Icon Right</Form.Label>\r\n    <InputGroup>\r\n      <Form.Control type=\"text\" placeholder=\"Search\" />\r\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\r\n    </InputGroup>\r\n  </Form.Group>\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Validation\"\r\n          description={\r\n            <p>You can easily update the styles of a valid or invalid styles input field by using the <code>isValid</code> or <code>isInvalid</code> attributes. Additionally, you can use the <code>&#x3C;Form.Control.Feedback&#x3E;</code> component to write the message regarding the success or error message.</p>\r\n          }\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>Username</Form.Label>\r\n    <Form.Control required isInvalid type=\"text\" />\r\n    <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\r\n  </Form.Group>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>First name</Form.Label>\r\n    <Form.Control required isValid type=\"text\" defaultValue=\"Mark\" />\r\n    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n  </Form.Group>\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Select input\"\r\n          description={\r\n            <p>The <code>&#x3C;Form.Select&#x3E;</code> component can be used for option selection from the user. You can use the <code>&#x3C;option&#x3E;</code> elements to add multiple options and use the <code>defaultValue</code> attribute to set the default value of the select field.</p>\r\n          }\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>Example select</Form.Label>\r\n    <Form.Select>\r\n      <option defaultValue>Open this select menu</option>\r\n      <option>One</option>\r\n      <option>Two</option>\r\n      <option>Three</option>\r\n    </Form.Select>\r\n  </Form.Group>\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Multiple select\"\r\n          description=\"\"\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <Form.Group className=\"mb-3\">\r\n    <Form.Label>Example multiple select</Form.Label>\r\n    <Form.Select multiple>\r\n      <option defaultValue>Open this select menu</option>\r\n      <option>One</option>\r\n      <option>Two</option>\r\n      <option>Three</option>\r\n    </Form.Select>\r\n  </Form.Group>\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Textarea\"\r\n          description={\r\n            <p>You can create a textarea input field by adding the <code>as=\"textarea\"</code> modifier attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\r\n          }\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <Form.Group>\r\n    <Form.Label>Example textarea</Form.Label>\r\n    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" />\r\n  </Form.Group>\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"File upload\"\r\n          description={\r\n            <p>If you want to use an input field to upload files, you need to add the <code>type=\"file\"</code> attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\r\n          }\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <Form.Control type=\"file\" />\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Checkboxes\"\r\n          description={\r\n            <>\r\n              <p>Use the <code>&#x3C;Form.Check&#x3E;</code> component to create checkbox items. If you want to disable on them, you need to add the <code>disabled</code> attribute.</p>\r\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\r\n            </>\r\n          }\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <Form.Check label=\"Default checkbox\" id=\"checkbox1\" htmlFor=\"checkbox1\" />\r\n  <Form.Check disabled label=\"Disabled checkbox\" id=\"checkbox2\" htmlFor=\"checkbox2\" />\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Radio buttons\"\r\n          description={\r\n            <>\r\n              <p>If you want to use radio buttons, you need to use the <code>&#x3C;Form.Check&#x3E;</code> component with the <code>type=\"radio\"</code> modifier. You can disable the element by using the <code>disabled</code> attribute.</p>\r\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\r\n            </>\r\n          }\r\n          scope={{ Form }}\r\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\r\n          example={`<Form>\r\n  <fieldset>\r\n    <Form.Check\r\n      defaultChecked\r\n      type=\"radio\"\r\n      defaultValue=\"option1\"\r\n      label=\"Default radio\"\r\n      name=\"exampleRadios\"\r\n      id=\"radio1\"\r\n      htmlFor=\"radio1\"\r\n      />\r\n\r\n    <Form.Check\r\n      type=\"radio\"\r\n      defaultValue=\"option2\"\r\n      label=\"Second default radio\"\r\n      name=\"exampleRadios\"\r\n      id=\"radio2\"\r\n      htmlFor=\"radio2\"\r\n      />\r\n\r\n    <Form.Check\r\n      disabled\r\n      type=\"radio\"\r\n      defaultValue=\"option3\"\r\n      label=\"Disabled radio\"\r\n      name=\"exampleRadios\"\r\n      id=\"radio3\"\r\n      htmlFor=\"radio3\"\r\n      />\r\n  </fieldset>\r\n</Form>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Datepicker\"\r\n          description={\r\n            <p>Use the <code>&#x3C;Datetime&#x3E;</code> component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the <Card.Link href=\"https://www.npmjs.com/package/react-datetime\" target=\"_blank\">react-datetime</Card.Link> documentation.</p>\r\n          }\r\n          scope={{ Datetime, Form, InputGroup, FontAwesomeIcon, faCalendarAlt, moment }}\r\n          imports={`import React, { useState } from \"react\";\r\nimport { Form, InputGroup } from '@themesberg/react-bootstrap';\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`const Datepicker = () => {\r\n  const [birthday, setBirthday] = React.useState(\"\");\r\n\r\n  return(\r\n    <Form>\r\n      <Form.Group className=\"mb-3\">\r\n        <Datetime\r\n          timeFormat={false}\r\n          closeOnSelect={false}\r\n          onChange={setBirthday}\r\n          renderInput={(props, openCalendar) => (\r\n            <InputGroup>\r\n              <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\r\n                placeholder=\"mm/dd/yyyy\"\r\n                onFocus={openCalendar}\r\n                onChange={() => { }} />\r\n            </InputGroup>\r\n          )} />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nrender( <Datepicker /> )`}\r\n        />\r\n\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Row, Col, Card, Modal, Button, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => {\r\n  const [showDefault, setShowDefault] = useState(false);\r\n  const handleClose = () => setShowDefault(false);\r\n\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Modals</h1>\r\n            <p className=\"mb-0\">\r\n              Use modals to develop faster and more interactive user interfaces.\r\n          </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xs={12} className=\"mb-4\">\r\n            <Documentation\r\n              title=\"Example\"\r\n              description={\r\n                <>\r\n                  <p>The <code>&#x3C;Modal&#x3E;</code> component can be used as a way to show extra content on top of the existing UI based on an event. For example, you can use the <code>onClick</code> event from a button component to show a modal by using the <code>setShowDefault(true)</code> function.</p>\r\n                  <p>Additionally, you can use the <code>handleClose</code> event to handle the situation when the modal is being closed.</p>\r\n                </>\r\n              }\r\n              scope={{ Col, Card, Button, Modal, showDefault, setShowDefault, handleClose, useState }}\r\n              imports={`import React, { useState } from \"react\";\r\nimport { Button, Modal } from '@themesberg/react-bootstrap';\r\n\r\nconst [showDefault, setShowDefault] = useState(false);\r\nconst handleClose = () => setShowDefault(false);`}\r\n              example={`<React.Fragment>\r\n  <Button variant=\"primary\" className=\"my-3\" onClick={() => setShowDefault(true)}>Default</Button>\r\n\r\n  <Modal as={Modal.Dialog} centered show={showDefault} onHide={handleClose}>\r\n    <Modal.Header>\r\n      <Modal.Title className=\"h6\">Terms of Service</Modal.Title>\r\n      <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <p>With less than a month to go before the European Union enacts new consumer privacy laws for its citizens, companies around the world are updating their terms of service agreements to comply.</p>\r\n      <p>The European Union’s General Data Protection Regulation (G.D.P.R.) goes into effect on May 25 and is meant to ensure a common set of data rights in the European Union. It requires organizations to notify users as soon as possible of high-risk data breaches that could personally affect them.</p>\r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={handleClose}>\r\n        I Got It\r\n    </Button>\r\n      <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\r\n        Close\r\n    </Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n</React.Fragment>`}\r\n            />\r\n\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faComments, faSun, faUserCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { Nav, Row, Col, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => (\r\n  <article>\r\n    <Container className=\"px-0\">\r\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <Col className=\"d-block mb-4 mb-md-0\">\r\n          <h1 className=\"h2\">Navs</h1>\r\n          <p className=\"mb-0\">\r\n            Use navigation tabs to break up pieces of content.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Documentation\r\n        title=\"Example\"\r\n        description={\r\n          <p>The <code>&#x3C;Nav&#x3E;</code> component should be used for app navigation, such as for the navigation bar, a secondary menu, or other. The <code>&#x3C;Nav.Link&#x3E;</code> component can be attributed with the location of the link.</p>\r\n        }\r\n        scope={{ Nav, Row, Col }}\r\n        imports={`import { Nav } from '@themesberg/react-bootstrap';`}\r\n        example={`<Row>\r\n  <Col lg={6}>\r\n    <Nav fill defaultActiveKey=\"home\" variant=\"pills\" className=\"flex-column flex-sm-row\">\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"home\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          Home\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"profile\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          Profile\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"settings\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          Settings\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"messages\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          Messages\r\n            </Nav.Link> \r\n      </Nav.Item>\r\n    </Nav>\r\n  </Col>\r\n</Row>`}\r\n      />\r\n\r\n      <Documentation\r\n        title=\"Rounded navs\"\r\n        description={\r\n          <p>If you want the nav style to be rounded, just add the <code>rounded</code> class name to the main <code>&#x3C;Nav.Link&#x3E;</code> component.</p>\r\n        }\r\n        scope={{ Nav, Row, Col }}\r\n        imports={`import { Nav } from '@themesberg/react-bootstrap';`}\r\n        example={`<Row>\r\n  <Col lg={6}>\r\n    <Nav fill defaultActiveKey=\"home\" variant=\"pills\" className=\"rounded flex-column flex-md-row\">\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"home\" href=\"#home\" className=\"mb-sm-3 mb-md-0\">\r\n          Home\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"profile\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          Profile\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"settings\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          Settings\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"messages\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          Messages\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  </Col>\r\n</Row>`}\r\n      />\r\n\r\n      <Documentation\r\n        title=\"Rounded navs with icons\"\r\n        description={\r\n          <p>If you want to add other content to a navigation item, such as an icon, you can do that by </p>\r\n        }\r\n        scope={{ Nav, FontAwesomeIcon, faTachometerAlt, faComments, faSun, faUserCircle, Row, Col }}\r\n        imports={`import { Nav } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faComments, faSun, faUserCircle } from '@fortawesome/free-regular-svg-icons';`}\r\n        example={`<Row>\r\n  <Col lg={6}>\r\n    <Nav fill defaultActiveKey=\"home\" variant=\"pills\" className=\"flex-column flex-md-row\">\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"home\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          <FontAwesomeIcon icon={faTachometerAlt} className=\"me-2\" /> Home\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"profile\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" /> Profile\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"settings\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          <FontAwesomeIcon icon={faSun} className=\"me-2\" /> Settings\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"comments\" href=\"#\" className=\"mb-sm-3 mb-md-0\">\r\n          <FontAwesomeIcon icon={faComments} className=\"me-2\" /> Messages\r\n            </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  </Col>\r\n</Row>`}\r\n      />\r\n\r\n    </Container>\r\n  </article>\r\n);\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Nav, Row, Col, Card, Image, Navbar, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\nimport ReactLogoPrimary from \"../../assets/img/technologies/react-logo-primary.svg\";\r\nimport ReactLogoTransparent from \"../../assets/img/technologies/react-logo-transparent.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Navbars</h1>\r\n            <p className=\"mb-0\">\r\n              Use the responsive navigation bar from Volt to add nav items and multi-level nested dropdowns for a seamless navigation.\r\n          </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Navbar\"\r\n          description=\"\"\r\n          scope={{ Nav, Card, Navbar, Container, ReactLogo: ReactLogoTransparent, Image }}\r\n          imports={`import { Nav, Card, Navbar, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport ReactLogo from \"src/assets/img/technologies/react-logo-transparent.svg\";`}\r\n          example={`<Navbar variant=\"dark\" expand=\"lg\" bg=\"dark\" className=\"navbar-transparent navbar-theme-primary my-2\">\r\n  <Container className=\"position-relative\">\r\n    <Navbar.Brand href=\"#home\" className=\"me-lg-3\">\r\n      <Image src={ReactLogo} />\r\n    </Navbar.Brand>\r\n\r\n    <Navbar.Collapse id=\"navbar-default-primary\" className=\"w-100\">\r\n      <Nav className=\"navbar-nav-hover align-items-lg-center\">\r\n        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n        <Nav.Link href=\"#about\">About</Nav.Link>\r\n        <Nav.Link href=\"#contact\">Contact</Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n\r\n    <Navbar.Toggle aria-controls=\"navbar-default-primary\" />\r\n  </Container>\r\n</Navbar>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Navbar colors\"\r\n          description=\"\"\r\n          scope={{ useEffect, useState, Nav, Card, Navbar, Image, Container, ReactLogoPrimary, ReactLogo: ReactLogoTransparent }}\r\n          imports={`import React, { useEffect, useState } from \"react\";\r\nimport { Nav, Card, Navbar, Container } from '@themesberg/react-bootstrap';\r\nimport ReactLogo from \"src/assets/img/technologies/react-logo-transparent.svg\";\r\nimport ReactLogoPrimary from \"src/assets/img/technologies/react-logo-primary.svg\";`}\r\n          example={`const NavbarThemes = [\r\n  { themeVariant: 'primary', navbarColor: 'dark', brandIcon: ReactLogo },\r\n  { themeVariant: 'secondary', navbarColor: 'light', brandIcon: ReactLogoPrimary },\r\n  { themeVariant: 'soft', navbarColor: 'light', brandIcon: ReactLogo }\r\n];\r\n\r\nfunction NavbarChangingColors() {\r\n  const [themeIndex, setThemeIndex] = React.useState(0);\r\n  const { themeVariant, navbarColor, brandIcon } = NavbarThemes[themeIndex];\r\n\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      const nextIndex = themeIndex === NavbarThemes.length - 1 ? 0 : themeIndex + 1;\r\n      setThemeIndex(nextIndex);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  return (\r\n    <Navbar variant={navbarColor} expand=\"lg\" className={\\`navbar-transparent navbar-theme-\\${themeVariant} my-2\\`}>\r\n      <Container className=\"position-relative\">\r\n        <Navbar.Brand href=\"#home\" className=\"me-lg-3\">\r\n          <Image src={brandIcon} />\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Collapse id=\"navbar-default-primary\" className=\"w-100\">\r\n          <Nav className=\"navbar-nav-hover align-items-lg-center\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#about\">About</Nav.Link>\r\n            <Nav.Link href=\"#contact\">Contact</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n\r\n        <Navbar.Toggle aria-controls=\"navbar-default-primary\" />\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nrender( <NavbarChangingColors /> );`}\r\n        />\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Container, Pagination } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Pagination</h1>\r\n            <p className=\"mb-0\">\r\n              Use pagination elements to organize posts or other models of data into groups.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Pagination\"\r\n          description={\r\n            <>\r\n              <p>The <code>&#x3C;Pagination&#x3E;</code> component is important to use when you have data that can be potentially so numerous that you need to paginate it. We've created two main handles that you can use when the previous or next item button has been click, called <code>onPrevItem</code> and <code>onNextItem</code>.</p>\r\n              <p>You can use the <code>items = []</code> array to add the number of pagination items, and set the <code>totalPages</code> pages constant to set that maximum amount of pages to show in the pagination element.</p>\r\n              <p>Also you can use a function as <code>handlePaginationChange</code> to add some custome logic when user goes to another page (e.g fetch new data).</p>\r\n            </>\r\n          }\r\n          scope={{ Col, Card, Pagination, FontAwesomeIcon, faAngleDoubleLeft, faAngleDoubleRight }}\r\n          imports={`import React, { useState } from \"react\";\r\nimport { Col, Card, Pagination } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`const CustomPagination = (props) => {\r\n  const [activeItem, setActiveItem] = React.useState(2);\r\n  const { totalPages = 5, size = \"md\", withIcons = false, disablePrev = false } = props;\r\n\r\n  const onPrevItem = () => {\r\n    const prevActiveItem = activeItem === 1 ? activeItem : activeItem - 1;\r\n    setActiveItem(prevActiveItem);\r\n  };\r\n\r\n  const onNextItem = (totalPages) => {\r\n    const nextActiveItem = activeItem === totalPages ? activeItem : activeItem + 1;\r\n    setActiveItem(nextActiveItem);\r\n  };\r\n\r\n  const items = [];\r\n  for (let number = 1; number <= totalPages; number++) {\r\n    const isItemActive = activeItem === number;\r\n\r\n    const handlePaginationChange = () => {\r\n      setActiveItem(number);\r\n    };\r\n\r\n    items.push(\r\n      <Pagination.Item active={isItemActive} key={number} onClick={handlePaginationChange}>\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Pagination size={size} className=\"mt-3\">\r\n      <Pagination.Prev disabled={disablePrev} onClick={onPrevItem}>\r\n        {withIcons ? <FontAwesomeIcon icon={faAngleDoubleLeft} /> : \"Previous\"}\r\n      </Pagination.Prev>\r\n      {items}\r\n      <Pagination.Next onClick={() => onNextItem(totalPages)}>\r\n        {withIcons ? <FontAwesomeIcon icon={faAngleDoubleRight} /> : \"Next\"}\r\n      </Pagination.Next>\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nrender(\r\n  <Col xl={12}>\r\n    <Card border=\"light\">\r\n      <Card.Body>\r\n        <CustomPagination withIcons />\r\n      </Card.Body>\r\n    </Card>\r\n  </Col>\r\n);`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Disabled and active states\"\r\n          description={\r\n            <p>Use the <code>disabled</code> attribute to disable one or either of the pagination items.</p>\r\n          }\r\n          scope={{ Col, Card, Pagination, FontAwesomeIcon, faAngleDoubleLeft, faAngleDoubleRight }}\r\n          imports={`import React, { useState } from \"react\";\r\nimport { Col, Card, Pagination } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`const CustomPagination = (props) => {\r\n  const [activeItem, setActiveItem] = React.useState(2);\r\n  const { totalPages = 5, size = \"md\", withIcons = false, disablePrev = false } = props;\r\n\r\n  const onPrevItem = () => {\r\n    const prevActiveItem = activeItem === 1 ? activeItem : activeItem - 1;\r\n    setActiveItem(prevActiveItem);\r\n  };\r\n\r\n  const onNextItem = (totalPages) => {\r\n    const nextActiveItem = activeItem === totalPages ? activeItem : activeItem + 1;\r\n    setActiveItem(nextActiveItem);\r\n  };\r\n\r\n  const items = [];\r\n  for (let number = 1; number <= totalPages; number++) {\r\n    const isItemActive = activeItem === number;\r\n\r\n    const handlePaginationChange = () => {\r\n      setActiveItem(number);\r\n    };\r\n\r\n    items.push(\r\n      <Pagination.Item active={isItemActive} key={number} onClick={handlePaginationChange}>\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Pagination size={size} className=\"mt-3\">\r\n      <Pagination.Prev disabled={disablePrev} onClick={onPrevItem}>\r\n        {withIcons ? <FontAwesomeIcon icon={faAngleDoubleLeft} /> : \"Previous\"}\r\n      </Pagination.Prev>\r\n      {items}\r\n      <Pagination.Next onClick={() => onNextItem(totalPages)}>\r\n        {withIcons ? <FontAwesomeIcon icon={faAngleDoubleRight} /> : \"Next\"}\r\n      </Pagination.Next>\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nrender(\r\n  <Col xl={12}>\r\n    <Card border=\"light\">\r\n      <Card.Body>\r\n        <CustomPagination disablePrev />\r\n      </Card.Body>\r\n    </Card>\r\n  </Col>\r\n);`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Sizing\"\r\n          description={\r\n            <p>As throughout the whole app, you can use either the <code>sm</code>, default or <code>lg</code> size modifiers by updating the <code>size</code> attribute.</p>\r\n          }\r\n          scope={{ Col, Card, Pagination, FontAwesomeIcon, faAngleDoubleLeft, faAngleDoubleRight }}\r\n          imports={`import React, { useState } from \"react\";\r\nimport { Col, Card, Pagination } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";`}\r\n          example={`const CustomPagination = (props) => {\r\n  const [activeItem, setActiveItem] = React.useState(2);\r\n  const { totalPages = 5, size = \"md\", withIcons = false, disablePrev = false } = props;\r\n\r\n  const onPrevItem = () => {\r\n    const prevActiveItem = activeItem === 1 ? activeItem : activeItem - 1;\r\n    setActiveItem(prevActiveItem);\r\n  };\r\n\r\n  const onNextItem = (totalPages) => {\r\n    const nextActiveItem = activeItem === totalPages ? activeItem : activeItem + 1;\r\n    setActiveItem(nextActiveItem);\r\n  };\r\n\r\n  const items = [];\r\n  for (let number = 1; number <= totalPages; number++) {\r\n    const isItemActive = activeItem === number;\r\n\r\n    const handlePaginationChange = () => {\r\n      setActiveItem(number);\r\n    };\r\n\r\n    items.push(\r\n      <Pagination.Item active={isItemActive} key={number} onClick={handlePaginationChange}>\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Pagination size={size} className=\"mt-3\">\r\n      <Pagination.Prev disabled={disablePrev} onClick={onPrevItem}>\r\n        {withIcons ? <FontAwesomeIcon icon={faAngleDoubleLeft} /> : \"Previous\"}\r\n      </Pagination.Prev>\r\n      {items}\r\n      <Pagination.Next onClick={() => onNextItem(totalPages)}>\r\n        {withIcons ? <FontAwesomeIcon icon={faAngleDoubleRight} /> : \"Next\"}\r\n      </Pagination.Next>\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nrender(\r\n  <Col xl={12}>\r\n    <Card border=\"light\">\r\n      <Card.Body>\r\n        <CustomPagination size=\"lg\" />\r\n        <CustomPagination size=\"md\" />\r\n        <CustomPagination size=\"sm\" />\r\n      </Card.Body>\r\n    </Card>\r\n  </Col>\r\n);`}\r\n        />\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Col, Row, Button, Popover, Container, OverlayTrigger } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Popovers</h1>\r\n            <p className=\"mb-0\">\r\n              Use popovers to indicate extra content for your users when clicking on an element.\r\n          </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <p>The <code>&#x3C;OverlayTrigger&#x3E;</code> and <code>&#x3C;Popover&#x3E;</code> component can be used to show extra information by clicking on a given element. You can set the title and content using the <code>&#x3C;Popover.Title&#x3E;</code> and <code>&#x3C;Popover.Content&#x3E;</code> subcomponents. Make sure you wrap the <code>&#x3C;OverlayTrigger&#x3E;</code> component around the popover and the element that will trigger the event.</p>\r\n          }\r\n          scope={{ Button, Popover, OverlayTrigger }}\r\n          imports={`import { Button, Popover, OverlayTrigger } from '@themesberg/react-bootstrap';`}\r\n          example={`<OverlayTrigger\r\n  trigger=\"click\"\r\n  overlay={\r\n    <Popover>\r\n      <Popover.Title>Popover on top</Popover.Title>\r\n      <Popover.Content>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.</Popover.Content>\r\n    </Popover>\r\n  }>\r\n  <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Popover on top</Button>\r\n</OverlayTrigger>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Popover placement\"\r\n          description={\r\n            <p>The <code>&#x3C;Popover&#x3E;</code> can also be positioned accordingly, using the <code>placement=\"*\"</code> attribute, where the value can be either <code>top</code>, <code>right</code>, <code>bottom</code> or <code>left</code>.</p>\r\n          }\r\n          scope={{ Button, Popover, OverlayTrigger }}\r\n          imports={`import { Button, Popover, OverlayTrigger } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <OverlayTrigger\r\n    placement=\"top\"\r\n    trigger=\"click\"\r\n    overlay={\r\n      <Popover>\r\n        <Popover.Title>Popover on top</Popover.Title>\r\n        <Popover.Content>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.</Popover.Content>\r\n      </Popover>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Popover on top</Button>\r\n  </OverlayTrigger>\r\n  <OverlayTrigger\r\n    placement=\"right\"\r\n    trigger=\"click\"\r\n    overlay={\r\n      <Popover>\r\n        <Popover.Title>Popover on right</Popover.Title>\r\n        <Popover.Content>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.</Popover.Content>\r\n      </Popover>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Popover on right</Button>\r\n  </OverlayTrigger>\r\n  <OverlayTrigger\r\n    placement=\"bottom\"\r\n    trigger=\"click\"\r\n    overlay={\r\n      <Popover>\r\n        <Popover.Title>Popover on bottom</Popover.Title>\r\n        <Popover.Content>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.</Popover.Content>\r\n      </Popover>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Popover on bottom</Button>\r\n  </OverlayTrigger>\r\n  <OverlayTrigger\r\n    placement=\"left\"\r\n    trigger=\"click\"\r\n    overlay={\r\n      <Popover>\r\n        <Popover.Title>Popover on left</Popover.Title>\r\n        <Popover.Content>Vivamus sagittis lacus vel augue laoreet rutrum faucibus.</Popover.Content>\r\n      </Popover>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Popover on left</Button>\r\n  </OverlayTrigger>\r\n</React.Fragment>`}\r\n        />\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ProgressBar } from '@themesberg/react-bootstrap';\r\n\r\nexport default (props) => {\r\n  const { label, variant, value, type = \"label\", size = \"md\" } = props;\r\n  const finalValue = value ? value : Math.floor(Math.random() * (Math.floor(100) - 20 + 1)) + 20; // generates a random number between 20 and 100\r\n  const textColor = type === \"label\" ? variant : \"white\";\r\n  const bgColorClass = type === \"tooltip\" ? `bg-${variant}` : \"\";\r\n\r\n  return (\r\n    <div className=\"progress-wrapper\">\r\n      <div className=\"progress-info\">\r\n        <div className={`progress-${type} text-${textColor} ${bgColorClass}`}>\r\n          {label}\r\n        </div>\r\n        <div className=\"progress-percentage\">\r\n          <span>{finalValue}%</span>\r\n        </div>\r\n      </div>\r\n      <ProgressBar className={`progress-${size}`} variant={variant} now={finalValue} min={0} max={100} />\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\nimport Progress from \"../../components/Progress\";\r\n\r\nexport default () => (\r\n  <article>\r\n    <Container className=\"px-0\">\r\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <Col className=\"d-block mb-4 mb-md-0\">\r\n          <h1 className=\"h2\">Progress</h1>\r\n          <p className=\"mb-0\">\r\n            Use progress bars to indicate percentage based components.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Documentation\r\n        title=\"Example\"\r\n        description={\r\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\r\n        }\r\n        scope={{ Progress }}\r\n        imports={`import Progress from \"src/components/Progress\";`}\r\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\r\n      />\r\n\r\n      <Documentation\r\n        title=\"Color variations\"\r\n        description={\r\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\r\n        }\r\n        scope={{ Progress }}\r\n        imports={`import Progress from \"src/components/Progress\";`}\r\n        example={`<React.Fragment>\r\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\r\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\r\n  <Progress variant=\"dark\" label=\"Dark color\" />\r\n  <Progress variant=\"success\" label=\"Success color\" />\r\n  <Progress variant=\"info\" label=\"Info color\" />\r\n  <Progress variant=\"danger\" label=\"Danger color\" />\r\n</React.Fragment>`}\r\n      />\r\n\r\n      <Documentation\r\n        title=\"Sizing\"\r\n        description={\r\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\r\n        }\r\n        scope={{ Progress }}\r\n        imports={`import Progress from \"src/components/Progress\";`}\r\n        example={`<React.Fragment>\r\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\r\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\r\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\r\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\r\n</React.Fragment>`}\r\n      />\r\n    </Container>\r\n  </article>\r\n);\r\n","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Table, Image, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\nimport USAFlag from \"../../assets/img/flags/united-states-of-america.svg\";\r\nimport CanadaFlag from \"../../assets/img/flags/canada.svg\";\r\nimport UKFlag from \"../../assets/img/flags/united-kingdom.svg\";\r\nimport FranceFlag from \"../../assets/img/flags/france.svg\";\r\nimport JapanFlag from \"../../assets/img/flags/japan.svg\";\r\nimport GermanyFlag from \"../../assets/img/flags/germany.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Tables</h1>\r\n            <p className=\"mb-0\">\r\n              Use tables to show more complex amount of data.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <>\r\n              <p>The <code>&#x3C;Table&#x3E;</code> component can be used to show more complex amounts of data. We recommend you to use the local <code>&#x3C;TableRow&#x3E;</code> method and component to build rows for the table and set the columns and props from there.</p>\r\n              <p>In this example, the props from <code>&#x3C;TableRow&#x3E;</code>, such as the <code>country</code>, <code>countryIcon</code>, <code>value</code>, and <code>percentage</code> are being set as props. After that, the <code>&#x3C;TableRow&#x3E;</code> components are being added in the final <code>&#x3C;Table&#x3E;</code> rendering.</p>\r\n            </>\r\n          }\r\n          scope={{ Image, Table, FontAwesomeIcon, faAngleDown, faAngleUp, USAFlag, CanadaFlag, UKFlag, FranceFlag, JapanFlag, GermanyFlag }}\r\n          imports={`import { Image, Table } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport USAFlag from \"src/assets/img/flags/united-states-of-america.svg\";\r\nimport CanadaFlag from \"src/assets/img/flags/canada.svg\";\r\nimport UKFlag from \"src/assets/img/flags/united-kingdom.svg\";\r\nimport FranceFlag from \"src/assets/img/flags/france.svg\";\r\nimport JapanFlag from \"src/assets/img/flags/japan.svg\";\r\nimport GermanyFlag from \"src/assets/img/flags/germany.svg\";`}\r\n          example={`<Table>\r\n  <thead className=\"thead-light\">\r\n    <tr>\r\n      <th className=\"border-0\">Country</th>\r\n      <th className=\"border-0\">All</th>\r\n      <th className=\"border-0\">All Change</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td className=\"border-0\">\r\n        <a href=\"#Unites States\" className=\"d-flex align-items-center\">\r\n          <Image roundedCircle src={USAFlag} className=\"me-2 image image-small\" alt=\"Unites States\" />\r\n          <div><span className=\"h6\">Unites States</span></div>\r\n        </a>\r\n      </td>\r\n      <td className=\"border-0 fw-bold\">106</td>\r\n      <td className=\"border-0 text-danger\">\r\n        <FontAwesomeIcon icon={faAngleDown} className=\"me-1\" />\r\n        <span className=\"fw-bold\">5</span>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td className=\"border-0\">\r\n        <a href=\"#Canada\" className=\"d-flex align-items-center\">\r\n          <Image roundedCircle src={CanadaFlag} className=\"me-2 image image-small\" alt=\"Canada\" />\r\n          <div><span className=\"h6\">Canada</span></div>\r\n        </a>\r\n      </td>\r\n      <td className=\"border-0 fw-bold\">76</td>\r\n      <td className=\"border-0 text-success\">\r\n        <FontAwesomeIcon icon={faAngleUp} className=\"me-1\" />\r\n        <span className=\"fw-bold\">17</span>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td className=\"border-0\">\r\n        <a href=\"#United Kingdom\" className=\"d-flex align-items-center\">\r\n          <Image roundedCircle src={UKFlag} className=\"me-2 image image-small\" alt=\"United Kingdom\" />\r\n          <div><span className=\"h6\">United Kingdom</span></div>\r\n        </a>\r\n      </td>\r\n      <td className=\"border-0 fw-bold\">147</td>\r\n      <td className=\"border-0 text-success\">\r\n        <FontAwesomeIcon icon={faAngleUp} className=\"me-1\" />\r\n        <span className=\"fw-bold\">10</span>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td className=\"border-0\">\r\n        <a href=\"#France\" className=\"d-flex align-items-center\">\r\n          <Image roundedCircle src={FranceFlag} className=\"me-2 image image-small\" alt=\"France\" />\r\n          <div><span className=\"h6\">France</span></div>\r\n        </a>\r\n      </td>\r\n      <td className=\"border-0 fw-bold\">112</td>\r\n      <td className=\"border-0 text-success\">\r\n        <FontAwesomeIcon icon={faAngleUp} className=\"me-1\" />\r\n        <span className=\"fw-bold\">3</span>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td className=\"border-0\">\r\n        <a href=\"#Japan\" className=\"d-flex align-items-center\">\r\n          <Image roundedCircle src={JapanFlag} className=\"me-2 image image-small\" alt=\"Japan\" />\r\n          <div><span className=\"h6\">Japan</span></div>\r\n        </a>\r\n      </td>\r\n      <td className=\"border-0 fw-bold\">115</td>\r\n      <td className=\"border-0 text-danger\">\r\n        <FontAwesomeIcon icon={faAngleDown} className=\"me-1\" />\r\n        <span className=\"fw-bold\">12</span>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td className=\"border-0\">\r\n        <a href=\"#Germany\" className=\"d-flex align-items-center\">\r\n          <Image roundedCircle src={GermanyFlag} className=\"me-2 image image-small\" alt=\"Germany\" />\r\n          <div><span className=\"h6\">Germany</span></div>\r\n        </a>\r\n      </td>\r\n      <td className=\"border-0 fw-bold\">220</td>\r\n      <td className=\"border-0 text-danger\">\r\n        <FontAwesomeIcon icon={faAngleDown} className=\"me-1\" />\r\n        <span className=\"fw-bold\">56</span>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</Table>`}\r\n        />\r\n      </Container>\r\n    </article>\r\n  );\r\n};","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLaptopCode, faPalette } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Col, Row, Nav, Tab, Card, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Tabs</h1>\r\n            <p className=\"mb-0\">\r\n              Use tabs to partition important data into easily navigable and interchangeable elements.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <>\r\n              <p>The <code>&#x3C;Tab&#x3E;</code> component is great if you want to show multiple resources of content with an easy partitioning using nav tabs. First you need to use the <code>&#x3C;Tab.Container&#x3E;</code> component to wrap around the content.</p>\r\n              <p>The first part of the component will be the <code>&#x3C;Nav&#x3E;</code> component where you can add as many <code>&#x3C;NavItem&#x3E;</code> components as you'd like. The <code>&#x3C;Nav.Link&#x3E;</code> component can then be used to set the tab panel that it should open up when clicking on it.</p>\r\n              <p>The <code>&#x3C;Tab.Content&#x3E;</code> component and its subcomponents are the content that will be shown based on which <code>&#x3C;Nav.Link&#x3E;</code> is being clicked on. The <code>eventKey=\"*\"</code> attribute should be used for both the <code>&#x3C;Nav.Link&#x3E;</code> and <code>&#x3C;Tab.Content&#x3E;</code> to link the two together.</p>\r\n            </>\r\n          }\r\n          scope={{ Nav, Tab }}\r\n          imports={`import { Nav, Tab } from '@themesberg/react-bootstrap';`}\r\n          example={`<Tab.Container defaultActiveKey=\"home\">\r\n  <Nav fill variant=\"pills\" className=\"flex-column flex-sm-row\">\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"home\" className=\"mb-sm-3 mb-md-0\">\r\n        Home\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"profile\" className=\"mb-sm-3 mb-md-0\">\r\n        Profile\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"messages\" className=\"mb-sm-3 mb-md-0\">\r\n        Messages\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n  </Nav>\r\n  <Tab.Content>\r\n    <Tab.Pane eventKey=\"home\" className=\"py-4\">\r\n      <p>\r\n        Exercitation photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n      </p>\r\n      <p>\r\n        Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n      </p>\r\n    </Tab.Pane>\r\n    <Tab.Pane eventKey=\"profile\" className=\"py-4\">\r\n      <p>\r\n        Photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n      </p>\r\n      <p>\r\n        Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n      </p>\r\n    </Tab.Pane>\r\n    <Tab.Pane eventKey=\"messages\" className=\"py-4\">\r\n      <p>\r\n        Exercitation photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n      </p>\r\n      <p>\r\n        Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n      </p>\r\n    </Tab.Pane>\r\n  </Tab.Content>\r\n</Tab.Container>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Example with icons\"\r\n          description={\r\n            <p>The following example shows how you can add an icon using the <code>&#x3C;FontAwesomeIcon&#x3E;</code> component inside the navigation item component.</p>\r\n          }\r\n          scope={{ Row, Col, Nav, Tab, FontAwesomeIcon, faPalette, faLaptopCode, faUser }}\r\n          imports={`import { Row, Col, Nav, Tab } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLaptopCode, faPalette } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";`}\r\n          example={`<Tab.Container defaultActiveKey=\"visual_design\">\r\n  <Row>\r\n    <Col lg={12}>\r\n      <Nav fill variant=\"pills\" className=\"flex-column flex-sm-row\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"visual_design\" className=\"mb-sm-3 mb-md-0\">\r\n            <FontAwesomeIcon icon={faPalette} className=\"me-2\" /> Visual Design\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"code_friendly\" className=\"mb-sm-3 mb-md-0\">\r\n            <FontAwesomeIcon icon={faLaptopCode} className=\"me-2\" /> Code Friendly\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"user_experience\" className=\"mb-sm-3 mb-md-0\">\r\n            <FontAwesomeIcon icon={faUser} className=\"me-2\" /> User Experience\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <Tab.Content>\r\n        <Tab.Pane eventKey=\"visual_design\" className=\"py-4\">\r\n          <p>\r\n            Exercitation photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n          </p>\r\n          <p>\r\n            Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n          </p>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"code_friendly\" className=\"py-4\">\r\n          <p>\r\n            Photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n          </p>\r\n          <p>\r\n            Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n          </p>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"user_experience\" className=\"py-4\">\r\n          <p>\r\n            Exercitation photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n          </p>\r\n          <p>\r\n            Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n          </p>\r\n        </Tab.Pane>\r\n      </Tab.Content>\r\n    </Col>\r\n  </Row>\r\n</Tab.Container>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Classic\"\r\n          description=\"\"\r\n          scope={{ Col, Row, Card, Nav, Tab }}\r\n          imports={`import { Col, Row, Card, Nav, Tab } from '@themesberg/react-bootstrap';`}\r\n          example={`<Tab.Container defaultActiveKey=\"home\">\r\n  <Row>\r\n    <Col lg={12}>\r\n      <Nav className=\"nav-tabs\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"home\" className=\"mb-sm-3 mb-md-0\">\r\n            Home\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"profile\" className=\"mb-sm-3 mb-md-0\">\r\n            Profile\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"messages\" className=\"mb-sm-3 mb-md-0\">\r\n            Messages\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </Col>\r\n    <Col lg={12}>\r\n      <Tab.Content>\r\n        <Tab.Pane eventKey=\"home\" className=\"py-4\">\r\n          <p>\r\n            Exercitation photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n          </p>\r\n          <p>\r\n            Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n          </p>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"profile\" className=\"py-4\">\r\n          <p>\r\n            Photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n          </p>\r\n          <p>\r\n            Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n          </p>\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"messages\" className=\"py-4\">\r\n          <p>\r\n            Exercitation photo booth stumptown tote bag Banksy, elit small batch freegan sed. Craft beer elit seitan exercitation, photo booth et 8-bit kale chips proident chillwave deep v laborum. Aliquip veniam delectus, Marfa eiusmod Pinterest in do umami readymade swag.\r\n          </p>\r\n          <p>\r\n            Day handsome addition horrible sensible goodness two contempt. Evening for married his account removal. Estimable me disposing of be moonlight cordially curiosity.\r\n          </p>\r\n        </Tab.Pane>\r\n      </Tab.Content>\r\n    </Col>\r\n  </Row>\r\n</Tab.Container>`}\r\n        />\r\n\r\n      </Container>\r\n    </article>\r\n  );\r\n};","\r\nimport React from 'react';\r\nimport { Col, Row, Button, Tooltip, Container, OverlayTrigger } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Tooltips</h1>\r\n            <p className=\"mb-0\">\r\n              Use tooltips to indicate extra content for your users when hovering over an element.\r\n          </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <p>Use the <code>&#x3C;OverlayTrigger&#x3E;</code> and <code>&#x3C;Tooltip&#x3E;</code> to show extra information when hovering or clicking on a given element. Make sure to wrap both the triggering element (ie. a button) and the <code>&#x3C;Tooltip&#x3E;</code> component in a <code>&#x3C;OverlayTrigger&#x3E;</code> component.</p>\r\n          }\r\n          scope={{ Button, Tooltip, OverlayTrigger }}\r\n          imports={`import { Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';`}\r\n          example={`<OverlayTrigger\r\n  trigger={['hover', 'focus']}\r\n  overlay={\r\n    <Tooltip>Tooltip on top</Tooltip>\r\n  }>\r\n  <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Tooltip on top</Button>\r\n</OverlayTrigger>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Tooltip placement\"\r\n          description={\r\n            <p>You can also easily position the <code>&#x3C;Tooltip&#x3E;</code> component in any direction using the <code>placement=\"*\"</code> attribute, where the value can be <code>top</code>, <code>right</code>, <code>bottom</code> or <code>left</code>.</p>\r\n          }\r\n          scope={{ Button, Tooltip, OverlayTrigger }}\r\n          imports={`import { Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';`}\r\n          example={`<React.Fragment>\r\n  <OverlayTrigger\r\n    placement=\"top\"\r\n    trigger={['hover', 'focus']}\r\n    overlay={\r\n      <Tooltip>Tooltip on top</Tooltip>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Tooltip on top</Button>\r\n  </OverlayTrigger>\r\n  <OverlayTrigger\r\n    placement=\"right\"\r\n    trigger={['hover', 'focus']}\r\n    overlay={\r\n      <Tooltip>Tooltip on right</Tooltip>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Tooltip on right</Button>\r\n  </OverlayTrigger>\r\n  <OverlayTrigger\r\n    placement=\"bottom\"\r\n    trigger={['hover', 'focus']}\r\n    overlay={\r\n      <Tooltip>Tooltip on bottom</Tooltip>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Tooltip on bottom</Button>\r\n  </OverlayTrigger>\r\n  <OverlayTrigger\r\n    placement=\"left\"\r\n    trigger={['hover', 'focus']}\r\n    overlay={\r\n      <Tooltip>Tooltip on left</Tooltip>\r\n    }>\r\n    <Button variant=\"secondary\" size=\"sm\" className=\"m-2\">Tooltip on left</Button>\r\n  </OverlayTrigger>\r\n</React.Fragment>`}\r\n        />\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBootstrap } from '@fortawesome/free-brands-svg-icons';\r\nimport { Col, Row, Card, Toast, Button, Container } from '@themesberg/react-bootstrap';\r\n\r\nimport Documentation from \"../../components/Documentation\";\r\n\r\n\r\nexport default () => {\r\n  const [showDefault, setShowDefault] = useState(true);\r\n  const [showPrimary, setShowPrimary] = useState(true);\r\n  const [showTertiary, setShowTertiary] = useState(true);\r\n\r\n  const handleCloseDefault = () => setShowDefault(false);\r\n  const handleClosePrimary = () => setShowPrimary(false);\r\n  const handleCloseTertiary = () => setShowTertiary(false);\r\n\r\n  return (\r\n    <article>\r\n      <Container className=\"px-0\">\r\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n          <Col className=\"d-block mb-4 mb-md-0\">\r\n            <h1 className=\"h2\">Toasts</h1>\r\n            <p className=\"mb-0\">\r\n              Use toasts to indicate messages.\r\n          </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Documentation\r\n          title=\"Example\"\r\n          description={\r\n            <>\r\n              <p>Use the <code>&#x3C;Toast&#x3E;</code> component to show messages and notifications to the user. The component is split into two main subcomponents: <code>&#x3C;Toast.Header&#x3E;</code> and <code>&#x3C;Toast.Body&#x3E;</code> where you can add the text that you want.</p>\r\n              <p>You can also use the <code>handleClose</code> function to handle the event of closing the component.</p>\r\n            </>\r\n          }\r\n          scope={{ Card, Toast, Button, useState, FontAwesomeIcon, faBootstrap, showDefault, setShowDefault, handleCloseDefault }}\r\n          imports={`import React, { useState } from 'react';\r\nimport { Card, Toast, Button } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBootstrap } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst [showDefault, setShowDefault] = useState(true);\r\nconst toggleDefaultToast = () => setShowDefault(!showDefault);`}\r\n          example={`<Toast show={showDefault} onClose={handleCloseDefault} className=\"my-3\">\r\n    <Toast.Header className=\"text-primary\" closeButton={false}>\r\n        <FontAwesomeIcon icon={faBootstrap} />\r\n        <strong className=\"me-auto ms-2\">Volt</strong>\r\n        <small>11 mins ago</small>\r\n        <Button variant=\"close\" size=\"xs\" onClick={handleCloseDefault} />\r\n    </Toast.Header>\r\n    <Toast.Body>\r\n        Hello, world! This is a toast message.\r\n    </Toast.Body>\r\n</Toast>`}\r\n        />\r\n\r\n        <Documentation\r\n          title=\"Colors\"\r\n          description={\r\n            <p>If you'd like to customize the appearance of the <code>&#x3C;Toast&#x3E;</code> component, you can easily do so by adding a <code>bg-primary</code>, <code>bg-secondary</code>, and any other <code>bg-*</code> modifier class to the main <code>&#x3C;Toast&#x3E;</code> component.</p>\r\n          }\r\n          scope={{ Toast, Button, useState, FontAwesomeIcon, faBootstrap, showPrimary, setShowPrimary, handleClosePrimary, showTertiary, setShowTertiary, handleCloseTertiary }}\r\n          imports={`import React, { useState } from 'react';\r\nimport { Toast, Button } from '@themesberg/react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBootstrap } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst [showPrimary, setShowPrimary] = useState(true);\r\nconst [showTertiary, setShowTertiary] = useState(true);\r\n\r\nconst handleClosePrimary = () => setShowPrimary(false);\r\nconst handleCloseTertiary = () => setShowTertiary(false);`}\r\n          example={`<React.Fragment>\r\n  <Toast show={showPrimary} onClose={handleClosePrimary} className=\"bg-primary text-white my-3\">\r\n      <Toast.Header className=\"text-primary\" closeButton={false}>\r\n          <FontAwesomeIcon icon={faBootstrap} />\r\n          <strong className=\"me-auto ms-2\">Themesberg</strong>\r\n          <small>11 mins ago</small>\r\n          <Button variant=\"close\" size=\"xs\" onClick={handleClosePrimary} />\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n          Hello, world! This is a toast message.\r\n      </Toast.Body>\r\n  </Toast>\r\n\r\n  <Toast show={showTertiary} onClose={handleCloseTertiary} className=\"bg-secondary text-white my-3\">\r\n      <Toast.Header className=\"text-primary\" closeButton={false}>\r\n          <FontAwesomeIcon icon={faBootstrap} />\r\n          <strong className=\"me-auto ms-2\">Themesberg</strong>\r\n          <small>11 mins ago</small>\r\n          <Button variant=\"close\" size=\"xs\" onClick={handleCloseTertiary} />\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n          Hello, world! This is a toast message.\r\n      </Toast.Body>\r\n  </Toast>\r\n</React.Fragment>`}\r\n        />\r\n\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Routes } from \"../routes\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n\r\n\r\n// pages\r\nimport Presentation from \"./Presentation\";\r\nimport Upgrade from \"./Upgrade\";\r\nimport DashboardOverview from \"./dashboard/DashboardOverview\";\r\nimport Transactions from \"./Transactions\";\r\nimport Settings from \"./Settings\";\r\nimport BootstrapTables from \"./tables/BootstrapTables\";\r\nimport Signin from \"./examples/Signin\";\r\n//Login Page ***********\r\nimport LoginPage from \"./LoginPage\";\r\nimport AdminDashboardOverview from '../adminComponents/DashboardOverview';\r\nimport AddConsultant from \"../adminComponents/AddConsultant\";\r\nimport AddMember from '../adminComponents/AddMember';\r\nimport AddTeamLead from '../adminComponents/AddTeamLead';\r\nimport AddLead from \"../adminComponents/AddLead\";\r\nimport AddASM from '../adminComponents/AddASM';\r\nimport AddCP from '../adminComponents/AddCP';\r\nimport AddCPM from '../adminComponents/AddCPM';\r\nimport AddLeadAssigner from '../adminComponents/AddLeadAssigner';\r\nimport ModifyLead from '../adminComponents/ModifyLead';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport Consultant from '../adminComponents/Consultant';\r\nimport Manager from '../adminComponents/Manager';\r\nimport TeamLead from '../adminComponents/TeamLead';\r\nimport TotalLeads from '../adminComponents/TotalLeads'\r\nimport CancellationLeads from '../adminComponents/CancellationLeads';\r\nimport LostSales from '../adminComponents/LostSales'\r\nimport SiteVisits from '../adminComponents/SiteVisits'\r\nimport SetMilestone from '../adminComponents/SetMilestone'\r\nimport Promotion from '../adminComponents/Promotion';\r\nimport AddProject from '../adminComponents/AddProject';\r\nimport TaskManager from '../adminComponents/TaskManager';\r\nimport AllProjects from '../adminComponents/AllProjects';\r\nimport ProjectDetails from '../adminComponents/ProjectDetails';\r\nimport Leads from '../adminComponents/Leads';\r\nimport LostLeads from '../adminComponents/LostLeads';\r\nimport SiteVisitsLeads from '../adminComponents/SiteVisitsLeads';\r\nimport NextFollowUp from '../adminComponents/NextFollowUp';\r\nimport UploadLeads from '../adminComponents/UploadLeads';\r\nimport Calendar from '../adminComponents/Calendar';\r\nimport BulkLeads from '../components/BulkLeads';\r\nimport UserList from '../adminComponents/UserList'\r\nimport ActivityLog from '../adminComponents/ActivityLog'\r\nimport EditUser from '../adminComponents/EditUser'\r\nimport Dashboard from '../adminComponents/Dashboard';\r\nimport CancelledLeadEdit from '../adminComponents/CancelledLeadEdit'\r\n\r\n//Manager Components\r\nimport ManagerDashboard from '../managerComponents/ManagerDashboard';\r\nimport ManagerLeads from '../managerComponents/Leads';\r\nimport ManagerAddLead from '../managerComponents/AddLead';\r\nimport ManagerLostLeads from '../managerComponents/LostLeads';\r\nimport ManagerSiteVisitsLeads from '../managerComponents/SiteVisitsLeads';\r\nimport ManagerCancellationLeads from '../managerComponents/CancellationLeads';\r\nimport ManagerNextFollowUp from '../managerComponents/NextFollowUp';\r\nimport ManagerAddMember from '../managerComponents/AddMember';\r\nimport ManagerConsultant from '../managerComponents/Consultant';\r\nimport ManagerTeamLead from '../managerComponents/TeamLead';\r\n// import ManagerUserList from '../managerComponents/UserList'\r\nimport ManagerActivityLog from '../managerComponents/ActivityLog'\r\nimport ManagerSetMilestone from '../managerComponents/SetMilestone'\r\nimport ManagerTaskManager from '../managerComponents/TaskManager';\r\nimport ManagerEditUser from '../managerComponents/EditUser';\r\nimport ManagerBulkLeads from '../managerComponents/UploadLeads';\r\nimport ManagerModifyLead from '../managerComponents/ModifyLead';\r\nimport ManagerTeamMember from '../managerComponents/TeamMember';\r\n\r\n//CPManager Components\r\nimport CPManagerDashboard from '../cpManagerComponents/CPManagerDashboard';\r\nimport CPManagerLeads from '../cpManagerComponents/Leads';\r\nimport CPManagerAddLead from '../cpManagerComponents/AddLead';\r\nimport CPManagerLostLeads from '../cpManagerComponents/LostLeads';\r\nimport CPManagerSiteVisitsLeads from '../cpManagerComponents/SiteVisitsLeads';\r\nimport CPManagerCancellationLeads from '../cpManagerComponents/CancellationLeads';\r\nimport CPManagerNextFollowUp from '../cpManagerComponents/NextFollowUp';\r\nimport CPManagerActivityLog from '../cpManagerComponents/ActivityLog'\r\nimport CPManagerTaskManager from '../cpManagerComponents/TaskManager';\r\nimport CPManagerBulkLeads from '../cpManagerComponents/UploadLeads';\r\nimport CPManagerModifyLead from '../cpManagerComponents/ModifyLead';\r\n\r\n\r\n\r\n//Teamlead Components\r\nimport TeamLeadDashboard from '../teamleadComponents/TeamleadDashboard';\r\nimport TeamLeadLeads from '../teamleadComponents/Leads';\r\nimport TeamLeadAddLead from '../teamleadComponents/AddLead';\r\nimport TeamLeadLostLeads from '../teamleadComponents/LostLeads';\r\nimport TeamLeadSiteVisitsLeads from '../teamleadComponents/SiteVisitsLeads';\r\nimport TeamLeadActivityLog from '../teamleadComponents/ActivityLog'\r\nimport TeamLeadSetMilestone from '../teamleadComponents/SetMilestone'\r\nimport TeamLeadTaskManager from '../teamleadComponents/TaskManager';\r\nimport TeamLeadModifyLead from '../teamleadComponents/ModifyLead';\r\n\r\n//Consultant Components\r\nimport ConsultantDashboard from '../consultantComponents/ConsultantDashboard';\r\nimport ConsultantLeads from '../consultantComponents/Leads';\r\nimport ConsultantAddLead from '../consultantComponents/AddLead';\r\nimport ConsultantLostLeads from '../consultantComponents/LostLeads';\r\nimport ConsultantSiteVisitsLeads from '../consultantComponents/SiteVisitsLeads';\r\nimport ConsultantActivityLog from '../consultantComponents/ActivityLog'\r\nimport ConsultantNextFollowUp from '../consultantComponents/NextFollowUp'\r\nimport ConsultantTaskManager from '../consultantComponents/TaskManager';\r\nimport ConsultantModifyLead from '../consultantComponents/ModifyLead';\r\n\r\n//Lead Assigner Components\r\nimport LeadAssginerDashboard from '../leadAssignerComponents/Dashboard';\r\nimport LeadAssginerAddLead from '../leadAssignerComponents/AddLead';\r\nimport leadAssignerBulkLeads from '../leadAssignerComponents/UploadLeads';\r\nimport leadAssignerActivityLog from '../leadAssignerComponents/ActivityLog';\r\nimport leadAssignerTaskManager from '../leadAssignerComponents/TaskManager';\r\n\r\n// import Demotwo from '../adminComponents/Demotwo'\r\n\r\n\r\nimport Signup from \"./examples/Signup\";\r\nimport ForgotPassword from \"./examples/ForgotPassword\";\r\nimport ResetPassword from \"./examples/ResetPassword\";\r\nimport Lock from \"./examples/Lock\";\r\nimport NotFoundPage from \"./examples/NotFound\";\r\nimport ServerError from \"./examples/ServerError\";\r\n\r\n// documentation pages\r\nimport DocsOverview from \"./documentation/DocsOverview\";\r\nimport DocsDownload from \"./documentation/DocsDownload\";\r\nimport DocsQuickStart from \"./documentation/DocsQuickStart\";\r\nimport DocsLicense from \"./documentation/DocsLicense\";\r\nimport DocsFolderStructure from \"./documentation/DocsFolderStructure\";\r\nimport DocsBuild from \"./documentation/DocsBuild\";\r\nimport DocsChangelog from \"./documentation/DocsChangelog\";\r\n\r\n// components\r\nimport Sidebar from \"../adminComponents/Sidebar\";\r\nimport MangerSidebar from \"../managerComponents/Sidebar\";\r\nimport TeamLeadSidebar from '../teamleadComponents/TeamLeadSidebar';\r\nimport ConsultantSidebar from '../consultantComponents/ConsultantSidebar';\r\nimport CPManagerSidebar from '../cpManagerComponents/Sidebar';\r\nimport LeadAssignerSidebar from '../leadAssignerComponents/Sidebar';\r\n\r\n\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport Accordion from \"./components/Accordion\";\r\nimport Alerts from \"./components/Alerts\";\r\nimport Badges from \"./components/Badges\";\r\nimport Breadcrumbs from \"./components/Breadcrumbs\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport Forms from \"./components/Forms\";\r\nimport Modals from \"./components/Modals\";\r\nimport Navs from \"./components/Navs\";\r\nimport Navbars from \"./components/Navbars\";\r\nimport Pagination from \"./components/Pagination\";\r\nimport Popovers from \"./components/Popovers\";\r\nimport Progress from \"./components/Progress\";\r\nimport Tables from \"./components/Tables\";\r\nimport Tabs from \"./components/Tabs\";\r\nimport Tooltips from \"./components/Tooltips\";\r\nimport Toasts from \"./components/Toasts\";\r\n\r\n\r\nconst RouteWithLoader = ({ component: Component, ...rest }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoaded(true), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <Route {...rest} render={props => ( <> <Preloader show={loaded ? false : true} /> <Component {...props} /> </> ) } />\r\n  );\r\n};\r\n\r\nconst RouteWithSidebar = ({ component: Component, ...rest }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo: user } = userLogin\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoaded(true), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  \r\n\r\n  const localStorageIsSettingsVisible = () => {\r\n    return localStorage.getItem('settingsVisible') === 'false' ? false : true\r\n  }\r\n\r\n  const [showSettings, setShowSettings] = useState(localStorageIsSettingsVisible);\r\n\r\n  const toggleSettings = () => {\r\n    setShowSettings(!showSettings);\r\n    localStorage.setItem('settingsVisible', !showSettings);\r\n  }\r\n\r\n\r\n  return (\r\n    <Route {...rest} render={props => (\r\n      <>\r\n        <Preloader show={loaded ? false : true} />\r\n      \r\n\r\n        {(()=>{\r\n          if(user ){\r\n            if(user.role === 'Admin' && user.isAdmin){\r\n              return <Sidebar />\r\n            }\r\n          else if(user.role === 'Manager'){\r\n            return <MangerSidebar />\r\n          }else if(user.role === 'TeamLead'){\r\n            return <TeamLeadSidebar />\r\n          }else if(user.role === 'Consultant'){\r\n            return <ConsultantSidebar />\r\n          }else if(user.role === 'CPM'){\r\n            return <CPManagerSidebar />\r\n          }else if(user.role === 'LeadAssigner'){\r\n            console.log(\"LeadSS\")\r\n            return <LeadAssignerSidebar />\r\n          }\r\n        }\r\n        })()}\r\n\r\n        <main className=\"content\">\r\n          <Navbar />\r\n\r\n          <Component {...props} />\r\n          {/* <Footer toggleSettings={toggleSettings} showSettings={showSettings} /> */}\r\n        </main>\r\n      </>\r\n    )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <ToastProvider placement=\"bottom-left\">\r\n  <Switch>\r\n    {/* <RouteWithLoader exact path={Routes.Presentation.path} component={Presentation} /> */}\r\n    <RouteWithLoader exact path={Routes.Signin.path} component={Signin} />\r\n    <RouteWithSidebar exact path={Routes.DashboardOverview.path} component={AdminDashboardOverview} />\r\n    \r\n\r\n    <RouteWithSidebar exact path={Routes.UploadLeads.path} component={UploadLeads} />\r\n    {/* Admin Dashboard ********** */}\r\n    <RouteWithLoader exact path={Routes.AdminDashboard.path} component={AdminDashboard} />\r\n    <RouteWithLoader exact path={Routes.LoginPage.path} component={LoginPage} />\r\n    <RouteWithSidebar exact path={Routes.AddConsultant.path} component={AddConsultant} />\r\n    <RouteWithSidebar exact path={Routes.AddMember.path} component={AddMember} />\r\n    <RouteWithSidebar exact path={Routes.AddTeamLead.path} component={AddTeamLead} />\r\n    <RouteWithSidebar exact path={Routes.AddLead.path} component={AddLead} />\r\n    <RouteWithSidebar exact path={Routes.AddASM.path} component={AddASM} />\r\n    <RouteWithSidebar exact path={Routes.AddCP.path} component={AddCP} />\r\n    <RouteWithSidebar exact path={Routes.AddCPM.path} component={AddCPM} />\r\n    <RouteWithSidebar exact path={Routes.AddLeadAssigner.path} component={AddLeadAssigner} />\r\n    <RouteWithSidebar exact path={Routes.ModifyLead.path} component={ModifyLead} />\r\n    <RouteWithSidebar exact path={Routes.TotalLeads.path} component={TotalLeads} />\r\n    <RouteWithSidebar exact path={Routes.CancellationLeads.path} component={CancellationLeads} />\r\n    <RouteWithSidebar exact path={Routes.Consultant.path} component={Consultant} />\r\n    <RouteWithSidebar exact path={Routes.Manager.path} component={Manager} />\r\n    <RouteWithSidebar exact path={Routes.TeamLead.path} component={TeamLead} />\r\n    <RouteWithSidebar exact path={Routes.LostSales.path} component={LostSales} />\r\n    <RouteWithSidebar exact path={Routes.SiteVisits.path} component={SiteVisits} />\r\n    <RouteWithSidebar exact path={Routes.SetMilestone.path} component={SetMilestone} />\r\n    <RouteWithSidebar exact path={Routes.Promotion.path} component={Promotion} />\r\n    <RouteWithSidebar exact path={Routes.AddProject.path} component={AddProject} />\r\n    <RouteWithSidebar exact path={Routes.TaskManager.path} component={TaskManager} />\r\n    <RouteWithSidebar exact path={Routes.AllProjects.path} component={AllProjects} />\r\n    <RouteWithSidebar exact path={Routes.Leads.path} component={Leads} />\r\n    <RouteWithSidebar exact path={Routes.LostLeads.path} component={LostLeads} />\r\n    <RouteWithSidebar exact path={Routes.SiteVisitsLeads.path} component={SiteVisitsLeads} />\r\n    <RouteWithSidebar exact path={Routes.NextFollowUp.path} component={NextFollowUp} />\r\n    <RouteWithSidebar exact path={Routes.BulkLeads.path} component={BulkLeads} />\r\n    <RouteWithSidebar exact path={Routes.Calendar.path} component={Calendar} />\r\n    <RouteWithSidebar exact path={Routes.UserList.path} component={UserList} />\r\n    <RouteWithSidebar exact path={Routes.ActivityLog.path} component={ActivityLog} />\r\n    <RouteWithSidebar exact path={Routes.EditUser.path} component={EditUser} />\r\n    <RouteWithSidebar exact path={Routes.Dashboard.path} component={Dashboard} />\r\n    <RouteWithSidebar exact path={Routes.CancelledLeadEdit.path} component={CancelledLeadEdit} />\r\n\r\n    {/* Manager Dashboard */}\r\n    <RouteWithSidebar exact path={Routes.ManagerDashboard.path} component={ManagerDashboard} />\r\n    <RouteWithSidebar exact path={Routes.ManagerLeads.path} component={ManagerLeads} />\r\n    <RouteWithSidebar exact path={Routes.ManagerAddLead.path} component={ManagerAddLead} />\r\n    <RouteWithSidebar exact path={Routes.ManagerModifyLead.path} component={ManagerModifyLead} />\r\n    <RouteWithSidebar exact path={Routes.ManagerLostLeads.path} component={ManagerLostLeads} />\r\n    <RouteWithSidebar exact path={Routes.ManagerSiteVisitsLeads.path} component={ManagerSiteVisitsLeads} />\r\n    <RouteWithSidebar exact path={Routes.ManagerCancellationLeads.path} component={ManagerCancellationLeads} />\r\n    <RouteWithSidebar exact path={Routes.ManagerNextFollowUp.path} component={ManagerNextFollowUp} />\r\n    <RouteWithSidebar exact path={Routes.ManagerAddMember.path} component={ManagerAddMember} />\r\n    <RouteWithSidebar exact path={Routes.ManagerConsultant.path} component={ManagerConsultant} />\r\n    <RouteWithSidebar exact path={Routes.ManagerTeamLead.path} component={ManagerTeamLead} />\r\n    {/* <RouteWithSidebar exact path={Routes.ManagerUserList.path} component={ManagerUserList} /> */}\r\n    <RouteWithSidebar exact path={Routes.ManagerActivityLog.path} component={ManagerActivityLog} />\r\n    <RouteWithSidebar exact path={Routes.ManagerSetMilestone.path} component={ManagerSetMilestone} />\r\n    <RouteWithSidebar exact path={Routes.ManagerTaskManager.path} component={ManagerTaskManager} />\r\n    <RouteWithSidebar exact path={Routes.ManagerEditUser.path} component={ManagerEditUser} />\r\n    <RouteWithSidebar exact path={Routes.ManagerBulkLeads.path} component={ManagerBulkLeads} />\r\n    <RouteWithSidebar exact path={Routes.ManagerTeamMember.path} component={ManagerTeamMember} />\r\n\r\n    {/* CP Manager Dashboard */}\r\n    <RouteWithSidebar exact path={Routes.CPManagerDashboard.path} component={CPManagerDashboard} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerLeads.path} component={CPManagerLeads} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerAddLead.path} component={CPManagerAddLead} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerModifyLead.path} component={CPManagerModifyLead} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerLostLeads.path} component={CPManagerLostLeads} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerSiteVisitsLeads.path} component={CPManagerSiteVisitsLeads} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerCancellationLeads.path} component={CPManagerCancellationLeads} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerNextFollowUp.path} component={CPManagerNextFollowUp} />\r\n    {/* <RouteWithSidebar exact path={Routes.CPManagerUserList.path} component={CPManagerUserList} /> */}\r\n    <RouteWithSidebar exact path={Routes.CPManagerActivityLog.path} component={CPManagerActivityLog} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerTaskManager.path} component={CPManagerTaskManager} />\r\n    <RouteWithSidebar exact path={Routes.CPManagerBulkLeads.path} component={CPManagerBulkLeads} />\r\n    \r\n\r\n     {/* TeamLead Dashboard */}\r\n    <RouteWithSidebar exact path={Routes.TeamLeadDashboard.path} component={TeamLeadDashboard} />\r\n    <RouteWithSidebar exact path={Routes.TeamLeadLeads.path} component={TeamLeadLeads} />\r\n    <RouteWithSidebar exact path={Routes.TeamLeadAddLead.path} component={TeamLeadAddLead} />\r\n    <RouteWithSidebar exact path={Routes.TeamLeadLostLeads.path} component={TeamLeadLostLeads} />\r\n    <RouteWithSidebar exact path={Routes.TeamLeadSiteVisitsLeads.path} component={TeamLeadSiteVisitsLeads} />\r\n    <RouteWithSidebar exact path={Routes.TeamLeadActivityLog.path} component={TeamLeadActivityLog} />\r\n    <RouteWithSidebar exact path={Routes.TeamLeadSetMilestone.path} component={TeamLeadSetMilestone} />\r\n    <RouteWithSidebar exact path={Routes.TeamLeadTaskManager.path} component={TeamLeadTaskManager} />\r\n\r\n     {/* Consultant Dashboard */}\r\n    <RouteWithSidebar exact path={Routes.ConsultantDashboard.path} component={ConsultantDashboard} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantLeads.path} component={ConsultantLeads} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantAddLead.path} component={ConsultantAddLead} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantLostLeads.path} component={ConsultantLostLeads} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantSiteVisitsLeads.path} component={ConsultantSiteVisitsLeads} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantActivityLog.path} component={ConsultantActivityLog} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantNextFollowUp.path} component={ConsultantNextFollowUp} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantTaskManager.path} component={ConsultantTaskManager} />\r\n    <RouteWithSidebar exact path={Routes.ConsultantModifyLead.path} component={ConsultantModifyLead} />\r\n\r\n    {/* Lead Assigner Dashboard */}\r\n    <RouteWithSidebar exact path={Routes.LeadAssginerDashboard.path} component={LeadAssginerDashboard} />\r\n    <RouteWithSidebar exact path={Routes.LeadAssginerAddLead.path} component={LeadAssginerAddLead} />\r\n    <RouteWithSidebar exact path={Routes.leadAssignerBulkLeads.path} component={leadAssignerBulkLeads} />\r\n    <RouteWithSidebar exact path={Routes.leadAssignerActivityLog.path} component={leadAssignerActivityLog} />leadAssignerTaskManager\r\n    <RouteWithSidebar exact path={Routes.leadAssignerTaskManager.path} component={leadAssignerTaskManager} />\r\n\r\n    <RouteWithLoader exact path={Routes.Signup.path} component={Signup} />\r\n    <RouteWithLoader exact path={Routes.ForgotPassword.path} component={ForgotPassword} />\r\n    <RouteWithLoader exact path={Routes.ResetPassword.path} component={ResetPassword} />\r\n    <RouteWithLoader exact path={Routes.Lock.path} component={Lock} />\r\n    <RouteWithLoader exact path={Routes.NotFound.path} component={NotFoundPage} />\r\n    <RouteWithLoader exact path={Routes.ServerError.path} component={ServerError} />\r\n\r\n    {/* pages */}\r\n    <RouteWithSidebar exact path={Routes.DashboardOverview.path} component={DashboardOverview} />\r\n    <RouteWithSidebar exact path={Routes.Upgrade.path} component={Upgrade} />\r\n    <RouteWithSidebar exact path={Routes.Transactions.path} component={Transactions} />\r\n    <RouteWithSidebar exact path={Routes.Settings.path} component={Settings} />\r\n    <RouteWithSidebar exact path={Routes.BootstrapTables.path} component={BootstrapTables} />\r\n    <RouteWithSidebar exact path={Routes.ProjectDetails.path} component={ProjectDetails} />\r\n\r\n\r\n    {/* components */}\r\n    <RouteWithSidebar exact path={Routes.Accordions.path} component={Accordion} />\r\n    <RouteWithSidebar exact path={Routes.Alerts.path} component={Alerts} />\r\n    <RouteWithSidebar exact path={Routes.Badges.path} component={Badges} />\r\n    <RouteWithSidebar exact path={Routes.Breadcrumbs.path} component={Breadcrumbs} />\r\n    <RouteWithSidebar exact path={Routes.Buttons.path} component={Buttons} />\r\n    <RouteWithSidebar exact path={Routes.Forms.path} component={Forms} />\r\n    <RouteWithSidebar exact path={Routes.Modals.path} component={Modals} />\r\n    <RouteWithSidebar exact path={Routes.Navs.path} component={Navs} />\r\n    <RouteWithSidebar exact path={Routes.Navbars.path} component={Navbars} />\r\n    <RouteWithSidebar exact path={Routes.Pagination.path} component={Pagination} />\r\n    <RouteWithSidebar exact path={Routes.Popovers.path} component={Popovers} />\r\n    <RouteWithSidebar exact path={Routes.Progress.path} component={Progress} />\r\n    <RouteWithSidebar exact path={Routes.Tables.path} component={Tables} />\r\n    <RouteWithSidebar exact path={Routes.Tabs.path} component={Tabs} />\r\n    <RouteWithSidebar exact path={Routes.Tooltips.path} component={Tooltips} />\r\n    <RouteWithSidebar exact path={Routes.Toasts.path} component={Toasts} />\r\n\r\n    {/* documentation */}\r\n    <RouteWithSidebar exact path={Routes.DocsOverview.path} component={DocsOverview} />\r\n    <RouteWithSidebar exact path={Routes.DocsDownload.path} component={DocsDownload} />\r\n    <RouteWithSidebar exact path={Routes.DocsQuickStart.path} component={DocsQuickStart} />\r\n    <RouteWithSidebar exact path={Routes.DocsLicense.path} component={DocsLicense} />\r\n    <RouteWithSidebar exact path={Routes.DocsFolderStructure.path} component={DocsFolderStructure} />\r\n    <RouteWithSidebar exact path={Routes.DocsBuild.path} component={DocsBuild} />\r\n    <RouteWithSidebar exact path={Routes.DocsChangelog.path} component={DocsChangelog} />\r\n\r\n    <Redirect to={Routes.NotFound.path} />\r\n  </Switch>\r\n  </ToastProvider>\r\n);\r\n","// Here are more informations about the scroll restoration of React Router\r\n// https://reactrouter.com/web/guides/scroll-restoration\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"auto\" });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    userLoginReducer, \r\n    addConsultantReducer, \r\n    fetchManagersReducer, \r\n    fetchTeamLeadsReducer, \r\n    fetchConsultantsReducer, \r\n    fetchASMReducer,\r\n    userUpdateReducer,\r\n    userDetailReducer,\r\n    deleteUserReducer, \r\n    userListReducer,\r\n    fetchTeamLeadsUnderManagerReducer,\r\n    fetchConsultantsUnderTeamLeadReducer,\r\n    fetchConsultantsUnderManagerReducer,\r\n    cpmListDataReducer\r\n} from './reducers/usersReducer'\r\nimport { \r\n    addLeadReducer,\r\n    updateLeadReducer,\r\n    leadDetailsReducer,\r\n    leadListReducer,\r\n    deleteLeadReducer,\r\n    bulkLeadsReducer,\r\n    consultantLeadListReducer,\r\n    teamLeadLeadListReducer,\r\n    managerLeadListReducer\r\n} from './reducers/leadsReducer'\r\nimport { fetchProjectsReducer, addProjectReducer, updateProjectReducer, projectDetailsReducer } from './reducers/projectsReducer'\r\nimport { addCancelLeadReducer, cancelLeadListReducer, deleteCancelLeadReducer, updateCancelLeadReducer, cancelledLeadDetailsReducer } from './reducers/cancellationLeadsReducer'\r\nimport { addBulkLeadReducer, assignBulkLeadReducer,getBulkLeadReducer,editBulkLeadReducer, leadAssignerCreateBulkLeadReducer, assignToManagerBulkLeadReducer } from './reducers/bulkLeadReducer'\r\nimport {activityLogDetailReducer} from './reducers/activityLogReducer'\r\nimport {addTaskReducer, fetchTasksReducer, fetchIndividualTasksReducer, deleteTaskReducer, updateTaskReducer} from './reducers/taskManagerReducer'\r\nimport {projectTeamDetailsReducer, addTeamReducer, deleteTeamReducer, getTeamListReducer, updateTeamDataReducer} from './reducers/teamManagementReducer'\r\nimport {cpmAddLeadReducer, cpmUpdateLeadReducer, cpmLeadDetailsReducer ,cpmLeadListReducer, cpmDeleteLeadReducer} from './reducers/cpManagerLeadsReducer'\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    addConsultant: addConsultantReducer,\r\n    fetchManagers : fetchManagersReducer,\r\n    fetchTeamLeads: fetchTeamLeadsReducer,\r\n    fetchASM: fetchASMReducer,\r\n    fetchConsultants: fetchConsultantsReducer,\r\n    fetchProjects: fetchProjectsReducer,\r\n    addProject: addProjectReducer,\r\n    updateProject: updateProjectReducer,\r\n    projectDetails: projectDetailsReducer,\r\n    deleteUserProfile: deleteUserReducer ,\r\n    userUpdate: userUpdateReducer,\r\n    userList : userListReducer,\r\n    userDetail : userDetailReducer,\r\n    teamLeadsUnderManager : fetchTeamLeadsUnderManagerReducer,\r\n    consultantsUnderTeamLead : fetchConsultantsUnderTeamLeadReducer,\r\n    fetchConsultantsUnderManager : fetchConsultantsUnderManagerReducer,\r\n    cpmListData: cpmListDataReducer,\r\n    addLead: addLeadReducer,\r\n    updateLead: updateLeadReducer,\r\n    leadDetails : leadDetailsReducer,\r\n    leadList: leadListReducer,\r\n    deleteLead: deleteLeadReducer,\r\n    bulkLeads: bulkLeadsReducer,\r\n    deleteCancelLead: deleteCancelLeadReducer,\r\n    addCancelLead: addCancelLeadReducer,\r\n    cancelLeadList: cancelLeadListReducer,\r\n    consultantLeadList: consultantLeadListReducer,\r\n    teamLeadLeadList: teamLeadLeadListReducer,\r\n    managerLeadList: managerLeadListReducer,\r\n    updateCancelLead : updateCancelLeadReducer,\r\n    cancelledLeadDetails : cancelledLeadDetailsReducer,\r\n    addBulkLead: addBulkLeadReducer,\r\n    assignLeads: assignBulkLeadReducer,\r\n    getBulkLead: getBulkLeadReducer,\r\n    editBulkLead : editBulkLeadReducer,\r\n    activityLogDetail: activityLogDetailReducer,\r\n    addTask: addTaskReducer,\r\n    fetchTasks: fetchTasksReducer,\r\n    fetchIndividualTasks: fetchIndividualTasksReducer,\r\n    deleteTask: deleteTaskReducer,\r\n    updateTask: updateTaskReducer,\r\n    projectTeamDetails: projectTeamDetailsReducer,\r\n    addTeam: addTeamReducer,\r\n    deleteTeam: deleteTeamReducer,\r\n    getTeamList: getTeamListReducer,\r\n    updateTeamData: updateTeamDataReducer,\r\n    leadAssignerCreateBulkLead : leadAssignerCreateBulkLeadReducer,\r\n    assignToManagerBulkLead: assignToManagerBulkLeadReducer,\r\n    cpmAddLead: cpmAddLeadReducer,\r\n    cpmUpdateLead : cpmUpdateLeadReducer,\r\n    cpmLeadDetails : cpmLeadDetailsReducer,\r\n    cpmLeadList: cpmLeadListReducer,\r\n    cpmDeleteLead: cpmDeleteLeadReducer\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  )\r\n  \r\n  export default store","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    ADD_USER_FAIL,\r\n    ADD_USER_REQUEST,\r\n    ADD_USER_SUCCESS,\r\n    ADD_USER_RESET,\r\n    MANAGERS_DETAILS_FAIL,\r\n    MANAGERS_DETAILS_REQUEST,\r\n    MANAGERS_DETAILS_SUCCESS,\r\n    TEAMLEADS_DETAILS_REQUEST,\r\n    TEAMLEADS_DETAILS_SUCCESS,\r\n    TEAMLEADS_DETAILS_FAIL,\r\n    MANAGER_TEAMLEADS_DETAILS_REQUEST,\r\n    MANAGER_TEAMLEADS_DETAILS_SUCCESS,\r\n    MANAGER_TEAMLEADS_DETAILS_FAIL,\r\n    TEAMLEAD_CONSULTANTS_DETAILS_REQUEST,\r\n    TEAMLEAD_CONSULTANTS_DETAILS_SUCCESS,\r\n    TEAMLEAD_CONSULTANTS_DETAILS_FAIL,\r\n    MANAGER_CONSULTANTS_DETAILS_REQUEST,\r\n    MANAGER_CONSULTANTS_DETAILS_SUCCESS,\r\n    MANAGER_CONSULTANTS_DETAILS_FAIL,\r\n    ASMS_DETAILS_REQUEST,\r\n    ASMS_DETAILS_SUCCESS,\r\n    ASMS_DETAILS_FAIL,\r\n    CONSULTANTS_DETAILS_REQUEST,\r\n    CONSULTANTS_DETAILS_SUCCESS,\r\n    CONSULTANTS_DETAILS_FAIL,\r\n    USER_LOGOUT,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_DETAIL_REQUEST,\r\n    USER_DETAIL_SUCCESS,\r\n    USER_DETAIL_FAIL,\r\n    CPM_LIST_REQUEST,\r\n    CPM_LIST_SUCCESS,\r\n    CPM_LIST_FAIL,\r\n} from '../constants/usersConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n        return { loading: true }\r\n      case USER_LOGIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_LOGIN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const addConsultantReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ADD_USER_REQUEST:\r\n        return { loading: true }\r\n      case ADD_USER_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case ADD_USER_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case ADD_USER_RESET:\r\n          return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const fetchManagersReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case MANAGERS_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case MANAGERS_DETAILS_SUCCESS:\r\n        return { loading: false, managers: action.payload }\r\n      case MANAGERS_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const fetchTeamLeadsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case TEAMLEADS_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case TEAMLEADS_DETAILS_SUCCESS:\r\n        return { loading: false, teamlead: action.payload }\r\n      case TEAMLEADS_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const fetchASMReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ASMS_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case ASMS_DETAILS_SUCCESS:\r\n        return { loading: false, asm: action.payload }\r\n      case ASMS_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const fetchConsultantsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CONSULTANTS_DETAILS_REQUEST:\r\n        return { loading: true}\r\n      case CONSULTANTS_DETAILS_SUCCESS:\r\n        return { loading: false, consultants: action.payload }\r\n      case CONSULTANTS_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const deleteUserReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n\r\n  export const userListReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n        return { loading: true }\r\n      case USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload }\r\n      case USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const userDetailReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_DETAIL_REQUEST:\r\n        return { loading: true }\r\n      case USER_DETAIL_SUCCESS:\r\n        return { loading: false, userData: action.payload }\r\n      case USER_DETAIL_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n\r\n  export const fetchTeamLeadsUnderManagerReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case  MANAGER_TEAMLEADS_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case  MANAGER_TEAMLEADS_DETAILS_SUCCESS:\r\n        return { loading: false, teamleadList: action.payload }\r\n      case  MANAGER_TEAMLEADS_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const fetchConsultantsUnderTeamLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case  TEAMLEAD_CONSULTANTS_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case  TEAMLEAD_CONSULTANTS_DETAILS_SUCCESS:\r\n        return { loading: false, consultantList: action.payload }\r\n      case  TEAMLEAD_CONSULTANTS_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const fetchConsultantsUnderManagerReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case  MANAGER_CONSULTANTS_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case  MANAGER_CONSULTANTS_DETAILS_SUCCESS:\r\n        return { loading: false, consultantsList: action.payload.consultantsList }\r\n      case  MANAGER_CONSULTANTS_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const cpmListDataReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case CPM_LIST_REQUEST:\r\n        return { loading: true }\r\n      case CPM_LIST_SUCCESS:\r\n        return { loading: false, cpm: action.payload }\r\n      case CPM_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n \r\n","import {\r\n    PROJECT_LIST_REQUEST,\r\n    PROJECT_LIST_FAIL,\r\n    PROJECT_LIST_SUCCESS,\r\n    PROJECT_DETAILS_REQUEST,\r\n    PROJECT_DETAILS_FAIL,\r\n    PROJECT_DETAILS_SUCCESS,\r\n    PROJECT_UPDATE_REQUEST,\r\n    PROJECT_UPDATE_FAIL,\r\n    PROJECT_UPDATE_SUCCESS,\r\n    PROJECT_ADD_REQUEST,\r\n    PROJECT_ADD_FAIL,\r\n    PROJECT_ADD_SUCCESS,\r\n\r\n} from '../constants/projectsConstants'\r\n\r\nexport const fetchProjectsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PROJECT_LIST_REQUEST:\r\n        return { loading: true }\r\n      case PROJECT_LIST_SUCCESS:\r\n        return { loading: false, projectInfo: action.payload }\r\n      case PROJECT_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const addProjectReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PROJECT_ADD_REQUEST:\r\n        return { loading: true }\r\n      case PROJECT_ADD_SUCCESS:\r\n        return { loading: false, projectInfo: action.payload }\r\n      case PROJECT_ADD_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n\r\n  export const updateProjectReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PROJECT_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case PROJECT_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PROJECT_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const projectDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PROJECT_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case PROJECT_DETAILS_SUCCESS:\r\n        return { loading: false, projectInfo: action.payload}\r\n      case PROJECT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    LEAD_ADD_FAIL,\r\n    LEAD_ADD_REQUEST,\r\n    LEAD_ADD_SUCCESS,\r\n    LEAD_UPDATE_REQUEST,\r\n    LEAD_UPDATE_SUCCESS,\r\n    LEAD_UPDATE_FAIL,\r\n    LEAD_UPDATE_RESET,\r\n    LEAD_DETAILS_REQUEST,\r\n    LEAD_DETAILS_SUCCESS,\r\n    LEAD_DETAILS_RESET,\r\n    LEAD_DETAILS_FAIL,\r\n    LEAD_LIST_REQUEST,\r\n    LEAD_LIST_SUCCESS,\r\n    LEAD_LIST_FAIL,\r\n    CONSULTANT_LEAD_LIST_REQUEST,\r\n    CONSULTANT_LEAD_LIST_SUCCESS,\r\n    CONSULTANT_LEAD_LIST_FAIL,\r\n    TEAMLEAD_LEAD_LIST_REQUEST,\r\n    TEAMLEAD_LEAD_LIST_SUCCESS,\r\n    TEAMLEAD_LEAD_LIST_FAIL,\r\n    MANAGER_LEAD_LIST_REQUEST,\r\n    MANAGER_LEAD_LIST_SUCCESS,\r\n    MANAGER_LEAD_LIST_FAIL,\r\n    LEAD_DELETE_REQUEST,\r\n    LEAD_DELETE_SUCCESS,\r\n    LEAD_DELETE_FAIL,\r\n    BULK_UPLOAD_REQUEST,\r\n    BULK_UPLOAD_SUCCESS,\r\n    BULK_UPLOAD_FAIL\r\n} from '../constants/leadsConstants';\r\n\r\nexport const addLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case LEAD_ADD_REQUEST:\r\n        return { loading: true }\r\n      case LEAD_ADD_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload }\r\n      case LEAD_ADD_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const updateLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case LEAD_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case LEAD_UPDATE_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload, success: true }\r\n      case LEAD_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n        case LEAD_UPDATE_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const leadDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case LEAD_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case LEAD_DETAILS_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload }\r\n      case LEAD_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case LEAD_DETAILS_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n\r\nexport const leadListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case LEAD_LIST_REQUEST:\r\n        return { loading: true }\r\n      case LEAD_LIST_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload }\r\n      case LEAD_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const deleteLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case LEAD_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case LEAD_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case LEAD_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const bulkLeadsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case BULK_UPLOAD_REQUEST:\r\n        return { loading: true }\r\n      case BULK_UPLOAD_SUCCESS:\r\n        return { loading: false, leadList: action.payload }\r\n      case BULK_UPLOAD_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const consultantLeadListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CONSULTANT_LEAD_LIST_REQUEST:\r\n      return { loading: true }\r\n    case CONSULTANT_LEAD_LIST_SUCCESS:\r\n      return { loading: false, leadList: action.payload.leadsList }\r\n    case CONSULTANT_LEAD_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const teamLeadLeadListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TEAMLEAD_LEAD_LIST_REQUEST:\r\n      return { loading: true }\r\n    case TEAMLEAD_LEAD_LIST_SUCCESS:\r\n      return { loading: false, leadList: action.payload }\r\n    case TEAMLEAD_LEAD_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const managerLeadListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case MANAGER_LEAD_LIST_REQUEST:\r\n      return { loading: true }\r\n    case MANAGER_LEAD_LIST_SUCCESS:\r\n      return { loading: false, leadList: action.payload }\r\n    case MANAGER_LEAD_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n    CANCEL_LEAD_ADD_FAIL,\r\n    CANCEL_LEAD_ADD_REQUEST,\r\n    CANCEL_LEAD_ADD_SUCCESS,\r\n    CANCEL_LEAD_LIST_REQUEST,\r\n    CANCEL_LEAD_LIST_SUCCESS,\r\n    CANCEL_LEAD_LIST_FAIL,\r\n    CANCEL_LEAD_DELETE_REQUEST,\r\n    CANCEL_LEAD_DELETE_SUCCESS,\r\n    CANCEL_LEAD_DELETE_FAIL,\r\n    CANCEL_LEAD_UPDATE_REQUEST,\r\n    CANCEL_LEAD_UPDATE_SUCCESS,\r\n    CANCEL_LEAD_UPDATE_FAIL,\r\n    CANCEL_LEAD_UPDATE_RESET,\r\n    CANCEL_LEAD_DETAIL_REQUEST,\r\n    CANCEL_LEAD_DETAIL_SUCCESS,\r\n    CANCEL_LEAD_DETAIL_FAIL,\r\n    CANCEL_LEAD_DETAIL_RESET\r\n\r\n} from '../constants/cancellationLeadsConstants';\r\n\r\nexport const addCancelLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CANCEL_LEAD_ADD_REQUEST:\r\n        return { loading: true }\r\n      case CANCEL_LEAD_ADD_SUCCESS:\r\n        return { loading: false, cancelLeadInfo: action.payload }\r\n      case CANCEL_LEAD_ADD_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const cancelLeadListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CANCEL_LEAD_LIST_REQUEST:\r\n        return { loading: true }\r\n      case CANCEL_LEAD_LIST_SUCCESS:\r\n        return { loading: false, cancelLeadInfo: action.payload }\r\n      case CANCEL_LEAD_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const deleteCancelLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CANCEL_LEAD_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case CANCEL_LEAD_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case CANCEL_LEAD_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const updateCancelLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CANCEL_LEAD_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case CANCEL_LEAD_UPDATE_SUCCESS:\r\n        return { loading: false, cancelLeadInfo: action.payload, success : true }\r\n      case CANCEL_LEAD_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n        case CANCEL_LEAD_UPDATE_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n\r\n  export const cancelledLeadDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CANCEL_LEAD_DETAIL_REQUEST:\r\n        return { loading: true }\r\n      case CANCEL_LEAD_DETAIL_SUCCESS:\r\n        return { loading: false, cancelledLeadInfo: action.payload }\r\n      case CANCEL_LEAD_DETAIL_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case CANCEL_LEAD_DETAIL_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    BULK_LEAD_ADD_REQUEST,\r\n    BULK_LEAD_ADD_SUCCESS,\r\n    BULK_LEAD_ADD_FAIL,\r\n    BULK_LEAD_ADD_RESET,\r\n    BULK_LEAD_ASSIGN_REQUEST,\r\n    BULK_LEAD_ASSIGN_SUCCESS,\r\n    BULK_LEAD_ASSIGN_FAIL,\r\n    BULK_LEAD_EDIT_REQUEST,\r\n    BULK_LEAD_EDIT_SUCCESS,\r\n    BULK_LEAD_EDIT_FAIL,\r\n    BULK_LEAD_LIST_REQUEST,\r\n    BULK_LEAD_LIST_SUCCESS,\r\n    BULK_LEAD_LIST_FAIL,\r\n    LEADASSIGNER_BULK_LEAD_ADD_REQUEST,\r\n    LEADASSIGNER_BULK_LEAD_ADD_SUCCESS,\r\n    LEADASSIGNER_BULK_LEAD_ADD_FAIL,\r\n    LEADASSIGNER_BULK_LEAD_ASSIGN_REQUEST,\r\n    LEADASSIGNER_BULK_LEAD_ASSIGN_SUCCESS,\r\n    LEADASSIGNER_BULK_LEAD_ASSIGN_FAIL\r\n} from '../constants/bulkLeadConstants'\r\n\r\n\r\nexport const addBulkLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case BULK_LEAD_ADD_REQUEST:\r\n        return { loading: true }\r\n      case BULK_LEAD_ADD_SUCCESS:\r\n        return { loading: false, status: action.payload }\r\n      case BULK_LEAD_ADD_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case BULK_LEAD_ADD_RESET:\r\n            return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const assignBulkLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case BULK_LEAD_ASSIGN_REQUEST:\r\n        return { loading: true }\r\n      case BULK_LEAD_ASSIGN_SUCCESS:\r\n        return { loading: false, success : true }\r\n      case BULK_LEAD_ASSIGN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const getBulkLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case BULK_LEAD_LIST_REQUEST:\r\n        return { loading: true }\r\n      case BULK_LEAD_LIST_SUCCESS:\r\n        return { loading: false, leadList : action.payload.bulkLeadList }\r\n      case BULK_LEAD_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const editBulkLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case BULK_LEAD_EDIT_REQUEST:\r\n        return { loading: true }\r\n      case BULK_LEAD_EDIT_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload, success: true }\r\n      case BULK_LEAD_EDIT_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const leadAssignerCreateBulkLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case  LEADASSIGNER_BULK_LEAD_ADD_REQUEST:\r\n        return { loading: true }\r\n      case  LEADASSIGNER_BULK_LEAD_ADD_SUCCESS:\r\n        return { loading: false, status: action.payload }\r\n      case  LEADASSIGNER_BULK_LEAD_ADD_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      // case  LEADASSIGNER_BULK_LEAD_ADD_RESET:\r\n      //       return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const assignToManagerBulkLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case LEADASSIGNER_BULK_LEAD_ASSIGN_REQUEST:\r\n        return { loading: true }\r\n      case LEADASSIGNER_BULK_LEAD_ASSIGN_SUCCESS:\r\n        return { loading: false, success : true }\r\n      case LEADASSIGNER_BULK_LEAD_ASSIGN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    ACTIVITY_LOG_DETAIL_REQUEST,\r\n    ACTIVITY_LOG_DETAIL_SUCCESS,\r\n    ACTIVITY_LOG_DETAIL_RESET,\r\n    ACTIVITY_LOG_DETAIL_FAIL\r\n} from '../constants/activityLogConstants'\r\n\r\nexport const activityLogDetailReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ACTIVITY_LOG_DETAIL_REQUEST:\r\n        return { loading: true }\r\n      case ACTIVITY_LOG_DETAIL_SUCCESS:\r\n        return { loading: false, activityLog: action.payload }\r\n      case ACTIVITY_LOG_DETAIL_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case ACTIVITY_LOG_DETAIL_RESET:\r\n            return { }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    ADD_TASK_REQUEST,\r\n    ADD_TASK_SUCCESS,\r\n    ADD_TASK_FAIL,\r\n    FETCH_ALL_TASK_REQUEST,\r\n    FETCH_ALL_TASK_SUCCESS,\r\n    FETCH_ALL_TASK_FAIL,\r\n    FETCH_TASK_REQUEST,\r\n    FETCH_TASK_SUCCESS,\r\n    FETCH_TASK_FAIL,\r\n    DELETE_TASK_REQUEST,\r\n    DELETE_TASK_SUCCESS,\r\n    DELETE_TASK_FAIL,\r\n    DELETE_TASK_RESET,\r\n    UPDATE_TASK_REQUEST,\r\n    UPDATE_TASK_SUCCESS,\r\n    UPDATE_TASK_FAIL,\r\n    UPDATE_TASK_RESET\r\n} from '../constants/taskManagerContants';\r\n\r\nexport const addTaskReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ADD_TASK_REQUEST:\r\n        return { loading: true }\r\n      case ADD_TASK_SUCCESS:\r\n        return { loading: false, addedTask: action.payload }\r\n      case ADD_TASK_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const fetchTasksReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case FETCH_ALL_TASK_REQUEST:\r\n        return { loading: true }\r\n      case FETCH_ALL_TASK_SUCCESS:\r\n        return { loading: false, taskList: action.payload }\r\n      case FETCH_ALL_TASK_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const fetchIndividualTasksReducer = (state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n      case FETCH_TASK_REQUEST:\r\n        return { loading: true }\r\n      case FETCH_TASK_SUCCESS:\r\n        return { loading: false, taskList: action.payload.todoData }\r\n      case FETCH_TASK_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const updateTaskReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case UPDATE_TASK_REQUEST:\r\n        return { loading: true }\r\n      case UPDATE_TASK_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case UPDATE_TASK_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case UPDATE_TASK_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const deleteTaskReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case DELETE_TASK_REQUEST:\r\n        return { loading: true }\r\n      case DELETE_TASK_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case DELETE_TASK_FAIL:\r\n        return { loading: false, error: action.payload }\r\n        case DELETE_TASK_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    ADD_TEAM_REQUEST,\r\n    ADD_TEAM_SUCCESS,\r\n    ADD_TEAM_FAIL,\r\n    ADD_TEAM_RESET,\r\n    FETCH_TEAM_LIST_REQUEST,\r\n    FETCH_TEAM_LIST_SUCCESS,\r\n    FETCH_TEAM_LIST_FAIL,\r\n    TEAM_DETAILS_REQUEST,\r\n    TEAM_DETAILS_SUCCESS,\r\n    TEAM_DETAILS_FAIL,\r\n    DELETE_TEAM_REQUEST,\r\n    DELETE_TEAM_SUCCESS,\r\n    DELETE_TEAM_FAIL,\r\n    DELETE_TEAM_RESET,\r\n    UPDATE_TEAM_REQUEST,\r\n    UPDATE_TEAM_SUCCESS,\r\n    UPDATE_TEAM_FAIL,\r\n    UPDATE_TEAM_RESET\r\n} from '../constants/teamManagementConstants';\r\n\r\nexport const addTeamReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ADD_TEAM_REQUEST:\r\n        return { loading: true }\r\n      case ADD_TEAM_SUCCESS:\r\n        return { loading: false, addedTeam: action.payload }\r\n      case ADD_TEAM_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case ADD_TEAM_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const updateTeamDataReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case UPDATE_TEAM_REQUEST:\r\n        return { loading: true }\r\n      case UPDATE_TEAM_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case UPDATE_TEAM_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case UPDATE_TEAM_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const getTeamListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case FETCH_TEAM_LIST_REQUEST:\r\n        return { loading: true }\r\n      case FETCH_TEAM_LIST_SUCCESS:\r\n        return { loading: false, teamList: action.payload.leadsList }\r\n      case FETCH_TEAM_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n   \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const projectTeamDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case TEAM_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case TEAM_DETAILS_SUCCESS:\r\n        return { loading: false, teamDetails: action.payload }\r\n      case TEAM_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const deleteTeamReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case DELETE_TEAM_REQUEST:\r\n        return { loading: true }\r\n      case DELETE_TEAM_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case DELETE_TEAM_FAIL:\r\n        return { loading: false, error: action.payload }\r\n        case DELETE_TEAM_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    CPM_LEAD_ADD_FAIL,\r\n    CPM_LEAD_ADD_REQUEST,\r\n    CPM_LEAD_ADD_SUCCESS,\r\n    CPM_LEAD_UPDATE_REQUEST,\r\n    CPM_LEAD_UPDATE_SUCCESS,\r\n    CPM_LEAD_UPDATE_FAIL,\r\n    CPM_LEAD_UPDATE_RESET,\r\n    CPM_LEAD_DETAILS_REQUEST,\r\n    CPM_LEAD_DETAILS_SUCCESS,\r\n    CPM_LEAD_DETAILS_RESET,\r\n    CPM_LEAD_DETAILS_FAIL,\r\n    CPM_LEAD_LIST_REQUEST,\r\n    CPM_LEAD_LIST_SUCCESS,\r\n    CPM_LEAD_LIST_FAIL,\r\n    CPM_LEAD_DELETE_REQUEST,\r\n    CPM_LEAD_DELETE_SUCCESS,\r\n    CPM_LEAD_DELETE_FAIL,\r\n\r\n} from '../constants/cpManagerConstants';\r\n\r\nexport const cpmAddLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CPM_LEAD_ADD_REQUEST:\r\n        return { loading: true }\r\n      case CPM_LEAD_ADD_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload }\r\n      case CPM_LEAD_ADD_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const cpmUpdateLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CPM_LEAD_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case CPM_LEAD_UPDATE_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload, success: true }\r\n      case CPM_LEAD_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n        case CPM_LEAD_UPDATE_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const cpmLeadDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CPM_LEAD_DETAILS_REQUEST:\r\n        return { loading: true }\r\n      case CPM_LEAD_DETAILS_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload }\r\n      case CPM_LEAD_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case CPM_LEAD_DETAILS_RESET:\r\n          return { }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n\r\nexport const cpmLeadListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CPM_LEAD_LIST_REQUEST:\r\n        return { loading: true }\r\n      case CPM_LEAD_LIST_SUCCESS:\r\n        return { loading: false, leadInfo: action.payload }\r\n      case CPM_LEAD_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const cpmDeleteLeadReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case CPM_LEAD_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case CPM_LEAD_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case CPM_LEAD_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n","export const CPM_LEAD_ADD_REQUEST = 'CPM_LEAD_ADD_REQUEST'\r\nexport const CPM_LEAD_ADD_SUCCESS = 'CPM_LEAD_ADD_SUCCESS'\r\nexport const CPM_LEAD_ADD_FAIL = 'CPM_LEAD_ADD_FAIL'\r\n\r\nexport const CPM_LEAD_UPDATE_REQUEST = 'CPM_LEAD_UPDATE_REQUEST'\r\nexport const CPM_LEAD_UPDATE_SUCCESS = 'CPM_LEAD_UPDATE_SUCCESS'\r\nexport const CPM_LEAD_UPDATE_FAIL = 'CPM_LEAD_UPDATE_FAIL'\r\nexport const CPM_LEAD_UPDATE_RESET = 'CPM_LEAD_UPDATE_RESET'\r\n\r\nexport const CPM_LEAD_DETAILS_REQUEST = 'CPM_LEAD_DETAILS_REQUEST'\r\nexport const CPM_LEAD_DETAILS_SUCCESS = 'CPM_LEAD_DETAILS_SUCCESS'\r\nexport const CPM_LEAD_DETAILS_FAIL = 'CPM_LEAD_DETAILS_FAIL'\r\nexport const CPM_LEAD_DETAILS_RESET = 'CPM_LEAD_DETAILS_RESET'\r\n\r\nexport const CPM_LEAD_LIST_REQUEST = 'CPM_LEAD_LIST_REQUEST'\r\nexport const CPM_LEAD_LIST_SUCCESS = 'CPM_LEAD_LIST_SUCCESS'\r\nexport const CPM_LEAD_LIST_FAIL = 'CPM_LEAD_LIST_FAIL'\r\n\r\nexport const CPM_LEAD_DELETE_REQUEST = 'CPM_LEAD_DELETE_REQUEST'\r\nexport const CPM_LEAD_DELETE_SUCCESS = 'CPM_LEAD_DELETE_SUCCESS'\r\nexport const CPM_LEAD_DELETE_FAIL = 'CPM_LEAD_DELETE_FAIL'\r\n\r\n","// =========================================================\r\n// * Volt React Dashboards\r\n// =========================================================\r\n\r\n// * Product Page: https://themesberg.com/product/dashboard/volt-react\r\n// * Copyright 2021 Themesberg (https://www.themesberg.com)\r\n// * Official Repository: https://github.com/themesberg/volt-react-dashboard\r\n// * License: MIT License (https://themesberg.com/licensing)\r\n\r\n// * Designed and coded by https://themesberg.com\r\n\r\n// =========================================================\r\n\r\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. Please contact us to request a removal.\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\n// core styles\r\nimport \"./scss/volt.scss\";\r\n\r\n// vendor styles\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\n\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <Provider store = {store}>\r\n  <HashRouter>\r\n    <ScrollToTop />\r\n    <HomePage />\r\n  </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}